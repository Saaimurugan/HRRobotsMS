%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Three man having business meeting in the office.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Виталий Викторович
%%CreationDate: 2/5/2020
%%BoundingBox: 0 0 2000 2000
%%HiResBoundingBox: 0 0 2000 2000
%%CropBox: 0 0 2000 2000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Three man having business meeting in the office</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Three man having business meeting in office. Employees discussing work project flat vector illustration. Teamwork, discussion, conference concept for banner, website design or landing web page</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>vector</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>flat</rdf:li>
               <rdf:li>web</rdf:li>
               <rdf:li>landing</rdf:li>
               <rdf:li>page</rdf:li>
               <rdf:li>template</rdf:li>
               <rdf:li>business</rdf:li>
               <rdf:li>isolated</rdf:li>
               <rdf:li>background</rdf:li>
               <rdf:li>design</rdf:li>
               <rdf:li>element</rdf:li>
               <rdf:li>banner</rdf:li>
               <rdf:li>website</rdf:li>
               <rdf:li>graphic</rdf:li>
               <rdf:li>modern</rdf:li>
               <rdf:li>concept</rdf:li>
               <rdf:li>presentation</rdf:li>
               <rdf:li>slide</rdf:li>
               <rdf:li>homepage</rdf:li>
               <rdf:li>site</rdf:li>
               <rdf:li>cartoon</rdf:li>
               <rdf:li>character</rdf:li>
               <rdf:li>three</rdf:li>
               <rdf:li>man</rdf:li>
               <rdf:li>business</rdf:li>
               <rdf:li>meeting</rdf:li>
               <rdf:li>office</rdf:li>
               <rdf:li>employee</rdf:li>
               <rdf:li>discussing</rdf:li>
               <rdf:li>discussion</rdf:li>
               <rdf:li>work</rdf:li>
               <rdf:li>project</rdf:li>
               <rdf:li>teamwork</rdf:li>
               <rdf:li>conference</rdf:li>
               <rdf:li>laptop</rdf:li>
               <rdf:li>coffee</rdf:li>
               <rdf:li>communication</rdf:li>
               <rdf:li>team</rdf:li>
               <rdf:li>company</rdf:li>
               <rdf:li>corporate</rdf:li>
               <rdf:li>manager</rdf:li>
               <rdf:li>brainstorming</rdf:li>
               <rdf:li>professional</rdf:li>
               <rdf:li>group</rdf:li>
               <rdf:li>talking</rdf:li>
               <rdf:li>sitting</rdf:li>
               <rdf:li>table</rdf:li>
               <rdf:li>occupation</rdf:li>
               <rdf:li>cooperation</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2020-02-05T16:04:22+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2020-02-05T16:04:23+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2020-02-05T16:04:23+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq0zKoqxAA7nbFU&#xA;NLqVsmwJc/5P9TkxAsDkCGfVpD9hAPnv/TJjGwOUqDahdt+3T5AYeAMfEKw3d0f92t9+HhCOMrlv&#xA;7tf92V9iAceAKJlHWmpLKwjkHFz0I6E5XKFNscl80blbY7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqh&#xA;7+/tbG3M9w3FBsANyx8APHJQgZGgxnMRFli1x54ui5+rW6Knb1Ksf+FK5lx0o6lxDqj0CL03zpDL&#xA;II72MQ8thKpJX6QdxkJ6YjkzhqQebJgQRUdMxXKdirsVdirsVdirsVaeREUs5CqO5xAQTSXz6r+z&#xA;Cv8As2/gMtGPvapZe5ASTSyGsjFj75YBTWSSswodirsVdirsVbxVkEbFo1Y9SAT92YxcoLsCXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYqwXzteTyag0EdG+rx/u42Yqpdhy3IDUrsK0OZ+mjUb73A1MrlXcw0&#xA;+YILYFdVifT3HRn+OFz/AMVypVST+yrcXP8ALmS49Nxyarfyq6htPsFYMOSj6zMAa7qwIiQ+45n/&#xA;ACDir1HyjdyXGjqHNTA5iBPgACPuDUzXaiNSdhp5XFOsob3Yq7FXYq7FVC6vI7dd/ic9F/rkoxtj&#xA;KdJPNPLM3JzXwHYZeBTjmRKnhQ7FVSFmEigEgchsPngKQXNJJyPxHr4nGltuOSTkfiPRu58DiQoK&#xA;31ZP5z95xpFu9WT+c/ecaW10SvNKkZJNT33oO+J2CRuU+AoKDMZynYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FWFedLGSO+W8ArFOoUt4OopT7sztNOxTg6mFG2O5lOM7FXoPlexks9JRZAVkmYysp7cgAPw&#xA;AzW558UnY4IcMU2yludiryb8/Nd8yBPLnlDyzeSWGseZr0xm6hd0dIIQoerR/GilpVJI7KffMjBE&#xA;bk8g1ZSdgOrxnXx/zkf5HeRpNX1G/sIecf6Qtp21G3AZeJ5cw7R05fD6iqQemZEfDl0aTxxey/kL&#xA;5182a35ENz5hDzXMdxJFaX03250BqzkUXZGbgKfynKcuIcWzOOQ0zl3Z2LMasepOCmBK3CrsVXBm&#xA;X7JI+WBW/Vk/nP3nGlt3qyfzn7zjS2vmkk9VviPXxOABJO7opJOZ+I/Zbuf5TiQoKmXdhQsSPc4U&#xA;WmOlW9AZmHXZPl3OV5D0bsUeqYZU2uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KqdzbQXMLQzoJInFGU&#xA;4YyINhEogiixy48jW7OTBdNEh/ZZQ9PpquZI1R6hxjpR0KL0zylYWcizSsbmVd15Cig+PHf8TkZ6&#xA;gy25M4acR35p5mO3uxV2KsKOlTzfnF+kJvQls7bQkWCNlVpobh7qQeopILJzj5rVTv0OW36Piwr1&#xA;JH5oY6TNNY+VB+j54ZGrHCkVmrX168cdonpRLEZ4kT1ZGZlZeKn4iy/DKAvmxka5Mj0fS7bStKtN&#xA;Ntv7iziSFCaVIQU5GndupyZNtKLxV2KuxV4t+Yv5ZeZdf83Sr/jGay068RJLSyuDKYw7MY3hijhP&#xA;E8RQ/ZrQ79CctGQRHJAhfVK9V/Iyfydod5ruha1qWqebNFa3uOFtbywQmKR/iC7SGUcQeRVyAteS&#xA;0wRz8RojYsjioeb3y3uFkiSaF+UcqhkcdCrCoOVkIBVfXm/nOCgmy715v5jjQWyqW/rzSqgY7/aP&#xA;gMEqATGyU7AAAA6DYZjuS7FXYq7FXYq7FXYq7FXYq7FXYq7FXz3+bH/ORHmzRvMmq+W/LGlQ8tJB&#xA;F7qcvK6Kqyp+9VIyqRcGkofULCtAQDtmXi04IBJaJ5SDQYn5M/5yp84afPZ2nmmCLUrH1Abq+WL0&#xA;7v0X6FVQxxMV6j4dx375ZPSg8mEcx6vqnT723v7C2vrck293Ek8JYFSUkUMtQdxscwSKcoK+BXYq&#xA;7FULqOpWun2/r3DUFaKo3Zj4AZOEDI0GE5iIssbk88zcz6VqoTtyYk/gMyhpR3uMdUe5d5bvLS/v&#xA;tXmurqNNQ1Fo44raOThPHaxQhVC7q/8AfPM4ZenLxzGy1GXC5eKEpQ46PDyvol2mwXV3qNxcXuo3&#xA;F9Fp91PBpttciAGER1t2lb04omZ2KycWYn4G8SSbgKHLm48pWaTrFi7FXYq7FXnv5x+YNV8r6Tbe&#xA;ZLC0hvUg9SxvIJ1ZlWO6aORJgyFSjRzW0fE16nxpk4REtl4qeP6n+aX5gebLRfLWj3E9x5fW3ih1&#xA;a5tNPW2l+rxU9RpGR7koiou55qDuCKbZYMUY7nmpmTsH1BDEsUSRLXjGoVa9aKKZQq7FW8VTmwtf&#xA;Riqw/ePu3sPDKJysuRCNBE5Bm7FXYq7FXYq7FXYq7FXYq7FXYq7FXlfkXy4zX35g6zA8+ka9eaxc&#xA;Wj37+iQkFq4khkiWWJ1VZIZQW5hgdiMvnL6R0pqiOZST8xPIlv588yafDq60aG/Gl2V1Ahgnkt4V&#xA;FxdtJIzvG6qqSBSkQAdgK7EZLHPgGyJx4i9tiijhiSKJQscahEUdAqigGYzcuxV2KuxVgHmjUje6&#xA;kyKawW9Y4/Akfab6TmxwQ4Y+912efFL3JPl7Swjzqhl1y0ij/vWjRQR1q0jBc0PaY4ssQOdfpfQP&#xA;ZafBpMk5fSJE/KIt6BpU5tbmL4iU2RyTUkHapP45ujAcNdzwhyGUzI9SyvMVvSTU/N2m6Xqr2F8k&#xA;sSi2S5juVjaVHLNIDEqxhm5gRcqU3Hyw0qr5c199btpboWFxZWwfjbPchFMy0B9RFVm+CvQ9+o2x&#xA;IpCbYEsd826rYPby+W0H1vV9Wt5orfT43hEhVkK829Z40C1O1TU/sg0OEbbqBapJ+ZPl3WBceW4I&#xA;FN5JC9vew3ksdnap8HGWL1j6nqFRUUhR6U+KmUCNHn+tyzGXDxEHhPXp81HR9c1aJYv0pEJtJk4R&#xA;WnmKNTFBPK2wBics6ox2jm+xIelKryusH3uMYkMkxYo7TbXm/quPgU/CPE/2ZXOXRsxxvdNcpb3Y&#xA;q7FXYq7FXYq7FXYq7FXYq0zKilmNFHUnFSUDLqyA0iTl/lHYZYMbUcvcxnzH+Z2g6BKsGoXiLdNQ&#xA;izgR55wh/baOMOyr7nr2qdsJjEczTZix5cpqETL3BW8l3M+s+Xb3WbC5t/V1q9nuI5pIzPD6UTC0&#xA;i5Ro8Jq1vbJUchQnfBOgaYxBrfmh/Iun2MEjXxitLVENxbWENlbfVoQhnpLPu8pJuBBEwqfhVVGS&#xA;mDTGMhbNwQRUdMpbXYq4mm56YqlGt62lrZymA8pacVfsGOwp4065dixWd2jLlobPMdcu5rXSbq5h&#xA;NJo0LIxFd/pzZOvCOxV5x5VD3ur6cJDzW1giWvtBEFB+lhXNFA+Jq77j9z6BniNN2RQ5ziP9nufs&#xA;2ZzbXc0urXsFR9Xt44Aopv6r82ff/VKZvXz9lNxrgW2jWHedkHNj0U03+ZzHGLfduOTbZJdD0fSd&#xA;U8x6nBqsTTtd2cTJWWVeaI8kc6EKygoPUj2P8x8ccwqqZ4Tdsq/wX5d/3xL/ANJNz/1UyjiLdwh3&#xA;+C/Lv++Jf+km5/6qY8RXhCSaxpeleWJ4rix0Z9SstU9a1vtJXlP9YnZBNDIUmMikgQOlT/Pv0xO/&#xA;VI2b8n2WiP59812cVlbraxrbxRW6xJ6arGArqqgcQOagkeOa3Ef3ki9Lr4yGiwg8t/2fZyZ9cQWO&#xA;o2c1tMqXVpOHhnjNGRgCUdD8iCD75lcnQsZ0WC7jvrjQ7p2knseLRXD7mW0kr6MrHuw4tG/iyk7A&#xA;jLzLa3H4N6ZbGixoEUUVRQZQS3gU3gS7FXYq7FXYq7FXYq7FXYqgdc1e30fSLrU7hWkjtYy/pRir&#xA;u3RI1rtydiFFe5yUY2aRI0LedXWvecr8+pNqMVkDuLS1hR0T2Lzc2cjpyooP8ozPjgiHAnnJYlrv&#xA;nnzDaTNa22rNO4qJn9GBQp/lBCVr+rNZrdXGJ4Yc+96zsPsE5QMuf6Oke/zPl9/u5wO/g+vTm6nk&#xA;f66an62G/e1PixryHs1RmqjlkOe483sp6PGQOEcJjyMdq/Z5HZB2195s0y/4aZqktqt0jvcw2k01&#xA;mswjKKHkaJiRIPU+0Owp32zceoAgascvOufLy2dJquyzkzxMhGRo2N48VUNyL39XTurrtNvys8y3&#xA;OhajPa6nOF0u+4cUDSSiGdfh9Tm5rxdaK3w9gfGs8WtHI2fNwu0fZ6UomeMRiQPpF7/E9fg92t7y&#xA;aGnBqp/KdxmeYgvICRCK/S7U/uhXxrt+rIeGz8VCz3k82ztRf5RsMmIgMJTJY55huKyR24Oyjm3z&#xA;OwzJwjq42U9GK+Yiv6HnVxyVzHGw6bPIq/xy9qCMvf8AeK4/4xv/AMROKsJ/LaDk7z/77t40/wCD&#xA;of8AjTNL2fH97M9363t/aXLWkww76Pyj+1mVnYyW9xfTOQVvJlmjpXZVhjhof9lETm5eIRWFUbp9&#xA;tJZ6ppeqv8CPK1lIT/vq5T4f+CuI4QMx8sr2cjCK3ZvKrtE6o3B2UhXpXiSNjT2zHcljHk3RLzTp&#xA;GMlgmmRrbQ29xFG6yC5uYyxkuqrUnlX7b0kevxjYZKRtiAmvmaGaTRbiS3QyXVoUvLaMdXltXE6J&#xA;/szHxPsciGTAPyt1y2n886/eyTqlvdxzXIldgqcTcKQSWpTZ9s1WnvxJfjq9l21ADR4q5Dh/3L0P&#xA;y7fWE+ua1HptzFd2L/V7syQusiJcTK8UsYZCV+zbo5HWrEnrmwkNhbyIO6p5mJsWtNfTYac5S+Pj&#xA;YzlVnJ8BEVSYnwQjvgjvsp709yLJ2KuxV2KuxV2KuxV2KuxV2KsP/M65/wCdd9Be95pxf/pPgoMy&#xA;NPH1W4+eW1PM/M/maK2imsrR/wDTQ3pTHcGMFFkqPmsgoR/DI9oarw48I+ou29nOyRqMniTH7uH2&#xA;nu+HVgbuqIzuQqqCzMegA3JOc8BZfSZSERZ5ByOrorrurAEHpsfniRSxkCLCGb4tVj/4rgf/AId0&#xA;/wCaMsH92ff+v9bjHfOPKB+0x/Uisqcp7d+XWrPqPleD1G5TWhNs570ShT/hCM3mjycWMeWz5t2/&#xA;pRi1RrlL1fPn9qa61LdcLSzs5mt7q/uY7eOdAhZEFZpmHqK6V9CJ+NVO9Myw6UKv+F7/AP6mLUv+&#xA;A0//ALJMHF5M+FCTeQzNI0kmv6kzt1NLH+FrkhmIYHECk/mryNBbeXb+5fWtQlaCIyQxN9SAeZN4&#xA;UqtqD8UgUZOOaRNIOKIFoK6Vl0+VWbmwhYM5ABJC7mg23zJcRjn5c2/p6M8h6sypUdwiD/mrNb2d&#xA;HaUu+T03tNM8WKH83GPt/sejrpgudKtwpCzKCyMehDEmhzK46kXn+C4hjGpNe2OrxxTyJFZ25gmu&#xA;lRecrQsXBYF/hEQkSOOQhSVD1JSgOSOSxsscfen0rX+teSjNbPE2qSwC4tPQqsaXcTerCn7w/wC6&#xA;5UVW5U3BqF6CnkW1IvLSfmRpYkt1v31mSUvJPPqkLIIqMOCpRohycOQwRmUcBSldz6Tz2SSRyTa7&#xA;138xbVI3lg07jLNBbrSOQ/HcTLCn/Hx05yCuNQ81EpeSI1XUfzM0vT5r+6t9PNtbgPMYoZ5WVKgM&#xA;/BJixCA8moOgyHFj82wY8hNAWSwvy9rVraxwW2mWnl+a4jSsb/o6Y3JUEbtxKvtsKkV233wceOR2&#xA;J+Ybsmn1GMeuJA8wXqWjea3Ol2zarb3B1Fk5Siy0+/aA1YheDNEw+zTq34ZTKO+yBLbdbfX+o648&#xA;uhQ2U2nJNCr6hc3Ri5i1mZ0pCkTy1kkEbD4ivD7R3opQAN1JvZk+QZOxV2KuxV2KuxV2KuxV2KrZ&#xA;ZFijaRuiiuEC0E0GAefXZ9BZ23Zr3Tyf+k+DMzENw4eQ7F4trN39c1W6uaCkjmlO6qAi/wDCqM57&#xA;VZePIS+q9laQafTwh1rf3ncpDqkyGWG2mDLat+8uJOLFCFPwxlgCByO5r2FO+OGOxI+rp+tdZMcU&#xA;YSvgO8jRrb+H49fIV1RUN/YzNxiuI5G/lV1J+4HK5YpDmC5MNTimajKJ+IWR76rcd+MEIHsS0hP8&#xA;MJ+ge8/oYQ/v5f1Y/fL9iKypyno35Sara241G1uZ44QxikhEjqtT8QalSK/s5stBkAsEvI+1OmlP&#xA;glEE8waHur9LPrLhe+avUVg8OmWmxG6mW8elQR+1HHbn6HzaE7PGCJB3TLzB9f8A0NdfUOYueI4m&#xA;Gnq8eQ9T0uQI9ThXhX9qmAc2RQflQz+hegG7Oni5ppx1ATC49L0o+dfrFJ+Prc+Pqb+Hw8cZKEh/&#xA;NzWlsdL0axDqJNV1eyg4nqUjmEzEf7KNR9OWYR6mGU+lJtb/AOONf/8AMNL/AMQOZbhBKPy7mS48&#xA;naddIjILhGk4t1+0QPwGY+mwnHDhPm7HtXWjU5jMbCgPkP1vVLVOFtEn8qKPuGVS5tMeTzzzT5v0&#xA;G6v1gvUvI7aJJoJEiihLTK0wSZfUaSojdYWQgKCa1qCBmGdfCJqi9Di9ms+SIkJQ3rqeov8Ampv5&#xA;L826Neia1jMq3DzPPIzxLHGWuJCQq8GkApULVj8R9zk8erhkNC3G1vYmfTR4pGJHkf1gfYzDMh1C&#xA;A1nkYrNVKh21Cwpy7hbyJmA678VNMB5FMebMWVWUqwDKwoyncEHscxnLBpg/5e+UdO0fWvMNzatz&#xA;VLr6nb1G8cYRJmTfrvIF9+OUYsHASe923aPah1OOET0+rzPL8e9nOXuoSa4pH5wsSNhc2F0jnbdo&#xA;Zrdox90khyXRHVOcil2KuxV2KuxV2KuxV2KuxVLtWn+zCP8AWb+GW4x1acp6MO89f8o8f+YzT/8A&#xA;qPgzIx/U0T5PF9V0q6067aCZCFqTE/Z1BpUH6RXOez6eWOVEbPqvZ/aWLU4xKJHF1HUH3N2Wha9f&#xA;xGaw025vIQSplhjLLyHUV8cOPSTkLA2a9T2zpsMzCUvUO4Er5vJXmeYcZvL13IPB4OQ/HLY6TKOW&#xA;3xcSfbuintI374n9SM8t/llPJd3cuoWeoaMqRIloILFplkZyxkLopUDhxXj8zmXDTSlGsm5vvdJq&#xA;+2YY8olpqEa39Ox37tvwSnN3+WM6WTyW+pTzzIjvHB+h7yOR3p8MRYu8aDb7e/8AqnANBDz+Y/Ux&#xA;PtPqO6Hyl/xTFk8qeb6KW0u9jfkfUiktbiSiiooGhg4+4PI7dstl2diI2NFrx+1GpjL1RjKPy+X4&#xA;LOvJWteYPLGly2SeWLy6knna4mn9O9SpKqgAX6o9KKg7++ZOLTxhER4uTp9drZajNLIY1xf2Mg/5&#xA;WR5l/wCpRvP+Bvf+yLJ+GO9xOM9zj+ZHmbt5Qu/+Bvf+yLHw4968Z7mD+eYPOnnjzBo066ddeXrf&#xA;Qw9xDeGzub3lPIyjiI2hgOwjB3FPfJxIhy3QQZc9kxm0nXYfJ+qR3V1rOs6/JHKtklvpYtYG5pxR&#xA;XWSJj9oksfUG3TB4pvpSPBjXm8y/Lzy1+cWi+YtKjvdN1WPQEuI1vbdkkkhWAtR6RjlSgNfhFcul&#xA;kFbFj4fk+lP0tb/74vP+kK7/AOqWYlNlPMfN/lfUZ7ovp1heXKmSR43FtOnGOVjIUYOimqyM1CK1&#xA;B7U31Wo0kruO73HZXbeEQAyHhIA6HptYrvFbd6beSNAn0iB5tQS6Rpmjllto7K7dh6JLIpZY6faP&#xA;Iha1oN+tb9LpTDm63trtiGc1jBPCCL/rc9vdt8/JmH+JrD/lm1L/ALhmof8AVDM+nmXl35yfnTDo&#xA;aWmnaCH/AE9HOlzKLu2liECIKoWiuEjJZiQV27V8MshivnyQZU8zP/OS/wCcBQr+logSahhaW1R7&#xA;D93TJ/lody+NJZd/n7+b6RwTPrCxC6QzJ6NvbxlgHMRZ+EYqeURG/hh/Lw7l8aSXXP57fmzcPyPm&#xA;O5jpsFiEaD8F/XhGCHcjxJd73f8A5x782/p7RhqXmq/u7nX4724t9Publ7oW7RehG3BOloZfif4f&#xA;t0FemYueFGgNm7HPbd7LJqsINEUv79BlIxlmcoXwajBKeJ+Bj0B6ffgMCExyAorIM3Yq7FXYq7FX&#xA;Yq5iFBY7ACpOKpBNKZZWkP7Rr9GZIFBxSbLHPPX/ACjx/wCYzT/+o+DLMf1MJ8mC+brkWsqTkkBr&#xA;K8hp/wAZHg+L6OOWakSOOQiLNNvZcoDUQMyIxEgST5bsHtNXvLVWSx1O5s0kbm8drdTQKzUA5FYn&#xA;QFqACuaEDU4xVSr+r+x9ByR7M1EuMyxykf6dfcWUeYNS1ex0Hy3Cmsah+kLy0k1C9lF9d8jFO4Nq&#xA;D+97JyB+WZeqzSxwH873fN0PY+hw6nUTJj+6HIWep2+y2M2HmPzNNAZX1zUzykk4H6/dfYDkJ/uz&#xA;+UDMPLq8gNX0HQdzvtN2LpZx4jDrKt5crNde57X5S02Sby3p817eX01zLEJHka9uqkOSy1pL/KRm&#xA;zwSJgCebxXacIQ1E4wFRia+Sb/oi3/3/AHn/AEm3f/VXLbcC3foi3/3/AHn/AEm3f/VXG1t36It/&#xA;9/3n/Sbd/wDVXG1t5L/zkLrGu+WdJ0i50LVr+xlnuJI5il3OwdQgYV5u3Q+GXYgDzYyJePav+aX5&#xA;k2WqXNtF5lv+EbBRWd26AfzE5d4ce5iJFMR+Zv5hnygbr/EN9+kfrPqep6zf7yACLp9n++bwx8OP&#xA;cjjNpdpH5vfmM2rWQufMV9JbGeITxmVqMnMcl+Gh3HgcBxx7mXEX13+ibf8A3/ef9Jt3/wBVcxLZ&#xA;279E2/8Av+8/6Tbv/qrja20+jWzqVM96ARQ0vrxT9BEoONrbCvzN1vQvJPlqTUZbnUJb+asWm2h1&#xA;TUf3kxHU0uK8E6sfo6kZZAcRQTT5Hv8AUL7Ubya9vp5Lq7nbnNPMxd2Y92ZiScywKa1GKKWaVIok&#xA;aSWRgkcaAszMxoAANyScVRmszRSXgjhYPBbRRQRsv2SY0Adl9nk5N9OKAgcUvsv8r/y/sfLvlTR4&#xA;7iOQ6lHELm4SSWVo0uZ1q5WBnMSuit6fNVBp8zmHOVlsAZxkEuxVONNnMsJVjVk2r7HplExRb8cr&#xA;CLyDY7FXYq7FXYqhNSm4W/EdZDT6O+TgN2vIaCT5e0JB56/5R4/8xmn/APUfBk8f1MZ8mBee4Xns&#xA;4okFWZLg07kJCZKfegzNgd3DmLiXl+n2Euoaha6fEaS3s0dvGT2aZwgP/DZk5JVElxcUeKQDJvzV&#xA;1CO788X0cBBtdPWKwtlXoiwIOaD/AFZWfKNLGoe9v1k/Xt0Yossq/Zdh8iRlssEJc4g/Bjj1uaH0&#xA;zkPdIoqPW9ajQRx6hcxoOipNIoFNuzDCMUaqg1SzTkSSSSfN3+IvNUNWtNbv4m68RdTFSfcFsjLB&#xA;E9EjNIdWV/lz+a/nKbzLYaPqU41C1vJhC3qqolTl+0rqFJp1PKuYmTEALcrFmkSAXvmYjmvDv+cq&#xA;v+Uf0L/mLl/5N5dg5sJPn7zFIX12/JXiRO6Ef6jcf4ZksAm0VhfR6ZZ+uS1tqmk3bWppQKtpdSzs&#xA;vv8AHbE1/wArACpDGAabjrhS+/LC5F1Y210KUniSXbYfGobv88wC2q+KrJ54beCSeZgkMStJI56K&#xA;qipJ+QxV8Wfmd59u/OnmmfUnLJYRVh022J2jgU7Ej+Z/tN93QDMyEaDUTbF7W1ubu5itrWJ57mZg&#xA;kMMal3dmNAqqKkk5NXvmj/ljbfl1+XurecNcAk8zi0dLKPZks5LgCGPj/NKGkHJu3QeJxzPiNDky&#xA;qnz9mQxZR+WvlKXzX5utdJQ8QUmndqV2gjaRRTf7ThV+nITlQtMRZfamn3aXthbXkf2LmJJkpvtI&#xA;oYfrzDLYr4q7FUw0ivOTwoMqyNuJM8qbnYq7FXYq7FUo1OXnccR0QU+k7nL8Y2cfId0Hk2CQeev+&#xA;UeP/ADGaf/1HwZPH9TGfJiWo/pNtWtHisDPa24k5SepGtWkUKCATXYFq5luKk3lXymum+fYdTuUW&#xA;DSrGG61Jo2YOUSCML2p9h5lI+WOfLcK6p0+Kp30YdfeWvNt1dT3tzp8rT3TvcTFQDV5WLtsCe5zJ&#xA;xyiAA4mWMjIlBSeXdfj3fTrkACpPpOQB8wMnxjva+A9yDe1uY4klkidIpQGjkZSFZWFQVJ2IIwgg&#xA;oIIU8KGX/k5oq3X5gRXhpwsreW4p/lkCEf8AJ2v0Zh6vYe9y9LvL3PoTNe7F4d/zlV/yj+hf8xcv&#xA;/JvLsHNhJ4B5nIPmXViDUG9uCCP+MrZksA9W8y6DHZ/lv+WWpuPThWR7a6bahj1BjMa0/wAkP9+V&#xA;QPqLKQ2eMSxPFK8Ug4vGxV18CDQ5axfcfkC6+t+RfL1xWpk020Ldfteiobr75hS5ltCfZFLHvzFu&#xA;Pq/kHzHMCQy6ZdhSOzNCwX8Tkocwgvh3M1rfR3/OMflDRzot15pmhEurfWZLS2lbcRRLGhPAU+F2&#xA;LsCfDbbeuPmkbplEIn/nKPXvq3lrS9ERqSahctPKB/vq2WlD7F5VI+WDCN7TJ80ZksH0B/zjl5Y+&#xA;p2kHm2dKG41JLOBjWvomGWBiKdnnnUfNMx8x6M4PcPLKmPRLe2Nf9CMllvX/AI9JGt677/7ryksk&#xA;zBB6GtNjgV2KpppCUSR/EgD6P9vKchbsQR+VtrsVdirsVadgiMx6KCT9GIUlI2MUjO55V+0dx3P9&#xA;uZDi7Fb+48G+8f0w7rshdW0uz1TSbqymaREnX0/UQgOjGpV1NPtIyhh74gkFSAQxKLR/NUQ9O4tr&#xA;e5ZNhcQylFkA/aMbrWMn+Xk1P5jmUMocc4ilmqS3llo3mO6ms3muQtvpqWUBEssikG6u0jpSrPau&#xA;DT/JyJkCQ2QiREpX5J85XHnE3J0rRruOG1oJbi5KRRlyacFarVYU3HbvlspgNIxlk0mh+abkiCOK&#xA;Gxjk2kvGl9R4wepjiVaM3hyYD59DWcoZDEUX50ktPL/5c6jHAvC3tLD6pbKd+PJRBF9xYZVDeQZ5&#xA;DUS+atPuDLEVY1dO57jNtCVh1MgyTyf5gk0DzDaaiCfRRuFyo/ahfZxT5bj3GDLDijTLFPhlb6Yj&#xA;kjljWSNg8bgMjjcEEVBBzTu3eK/85TxKfKujy78kvio8KNCxP/Ecuwc0SfPPmSNY/MWqRr9lLudR&#xA;XwErDMlrD6Y/Mjy80v5A21tGv77SbGwnj9vQWNZDX/jGWOYsD62w8nzR5kAOt3cwoFumF0gHQLcq&#xA;JlH3SZlNYfXf5K3X1r8rvL8la8YHirv/ALpleLv/AKmYeT6i2jkzbIJYj+bsjx/lp5iZDQmzdT8m&#xA;IU/gclj+oIPJ8VZmtb66/wCceLYw/lZp0m/+kzXMo6dp2j/5l5iZfqZx5PFv+cjde/SX5jS2aNWH&#xA;SbeK1FOnNh6zn51k4n5ZdiFBjLm8xggmuJ44IUMk0rBI0XqzMaAD5nLUPr3QNN1Gw8uW2g6U9g9n&#xA;oklpGomd42muLV4rqeUSr6g4tPyTjw6g/FmMRe7LipMG81NpNnqXrWklrNJcSTWPq8ZLcfWCGZ5p&#xA;4GljjjWZ3Zi5U8d6V2yPhlJmEwt/LWi20Cm1vWtdRPxXGpwSIks8rEs8kykNFKWYk/GhpX4aZJhx&#xA;I3Q9RvJ7i+s7qWG4eyZFW6gBQOHQPRoyXoygipDEGvbplco0zibZnZxelbop60qfmd8xZGy5cBQV&#xA;siydirsVdiqH1BgLZlJpy8PAZKHNhM7JQDGARvuKdvGuXtDisfANvuSKbdqf1xVwaPgV33INdu1f&#xA;64q1+7/yvwxQxbR/9LutNk+0soutZc9/9Kf0bEt/0as6/wCxyZSeSF/Kv/lG7v8A7a2qf9R0uGfN&#xA;iGYZBLyz/nIPWPq3lmy0xTSTULjmw8YoFqw/4N0y/Tje3G1MtqeD2Bl+txLGpd5GCBBuWLGgA+nM&#xA;2MqLgkWnLo8bsjqVdCVZTsQRsQcyGp7t+T/mT9JeXf0dM9bvSyIwD1MDf3Z/2O6/QM1mqx1K+92W&#xA;lyXGu5in/OUaM/lLR0UVZtRCqPcwyAZDDzciT521aOW88zXkY3lub2RRQV+J5SOg9zmS1h9v63pE&#xA;Wo+Xr/R6Uiu7SW0A8BJGYxufCuYIO9tr4h1tHMemzuCJJbUJLXs1vI9uAfcJEuZzU+ov+cc7v1/y&#xA;wtIq1+q3NzFStaVk9X6P7zMTL9TZHk9Nytkwb88CB+Vev1NP3UQ++4jyeP6gg8nxrmY1vsz8oVi0&#xA;78qNDeY+nFHaPcSMRQBXd5ifuauYeT6mwcnyF5g1ebWdd1DVptpb+4luGB7eq5an0VpmWBQa2cfk&#xA;H5VXXvzCtZJ0D2elI19OD0LJRYR8/UZW+g5DLKgkBG3ELQXEsLfaidkPzU0zYA26cilPCrsVew/8&#xA;482HrXOr3DD4V9BK+3xsw/4jmv18qAdhoI2S91zUu3dirsVdirsVS3Upk9X0yTstNhXc7+PtlsBs&#xA;05DugaR/zH7h/XLGpsmP0wtTsSeg7ge/tilTwoS/zDNLFot36J43MyfV7Yj/AH/cEQxf8lHXCFU9&#xA;Jhh/SOpSwqFt4Gi0+0p09GzjGw/1ZpZV+jFJ5pH+Vf8Ayjd3/wBtbVP+o6XJT5sQzDIJfOv59ax9&#xA;c85rYqax6bbpGR/xZL+9Y/8AAsuZmAVFwdRK5Uln5O6AdX882bOvK206t7N4Vip6f/JQrks0qixw&#xA;RuTJ/wA4PLP6M18alAlLTU6uadFnH94P9l9r78s0uS413MNVjqV96S+QPMf6A8zW127cbSU+heV6&#xA;elIRVv8AYkBvoy3Pj4o014MnDK2W/wDOTBB8t6CRuDqiUP8AzyfNdh5u0lyeD+WrddR/MzTIAKx3&#xA;OsQg/wCo1yCTT/Vy+XIsQ+28wm18afmjpJ07XtYswtBZ6vdMB4RXqpPAv/Aq2ZsDYDUeb2b/AJxb&#xA;u+fknUrUmpg1F3G/RZIIqCnzQ5Rm5s4vZcpZPP8A8/f/ACUuu/8ARp/1GQ5Zi+oMZcnx5mWwfVfn&#xA;DVP8O/8AOPdsikJcXGk2dhGOlXuIkSWnvwLtmLEXNmeT5UzKYPqX/nGnyx+jfJc2sypxuNamLISK&#xA;H0LcmOP73Ln5UzFzSs0ziHn/AJtt/q/mjV4QKKl5OFH+T6hK/hm0xG4j3OoyipH3pVk2DsVfQX/O&#xA;PFmI/Kl/dEUae9ZB/qxxJT8XOajtA+sDydv2fH0E+b1TMB2DsVdirsVdiqQXEnqTu/Yk0+XbMkCg&#xA;4sjZU8KHYq7FUq1eaH6/psMzBbeF5NQu69BBZxluX+xnkibCkc1Ty7DNHotqZ14XM6m5uUPaa5Yz&#xA;Sj/kZIcShIPyr/5Ru7/7a2qf9R0uSnzQGYZBLxnWvyS1DzFea75iTWYolW8uSUniYLxiFT8YY7Ka&#xA;r07ZcNSI0KaDpDLe2R/k75DuvLWl3F5fNG95qYidBGWPCEJyVW5KtG5OeQHgN8GXJxLhxcPNlPnH&#xA;y3F5i0C505uKzkepayt0SZfsnvQH7J9jgxZOCVs8uPjjTAvL35K2l75bvNQe6kudatvWjXTKCKMX&#xA;NuT+5lapcrJQUdePwsGGW5NcQaAoNeLQCrJtd+cGjz+Y/JflmTQLKS+QajZTQwKVDfV5InUA+oyi&#xA;pLIu565XCVE23GO1B5v+Xn5S+fNM/M7SbzWdGls7OGZ7uSR3hbiqhihIV3/b4jJyyxMdivARzfTu&#xA;Y7J4B+dP5c+aNb85XS6Dpkl+dWtbe85RtEoE1iTbvy9R06Rzp94+i/HkAjuwMCTsn/8Azjv5T81e&#xA;WYfMNjr9g9i3rWxiV2jar+mzOPgZuish+nI5ZCVEJAI5vYMqZMH/ADp0TUda/LnVLGw4+t+6mfmw&#xA;RfTgkWVySfBUrk8ZooIeC33/ADjf+ZljJaJcQ2im9mNvCRcKfjETzb7fyRNl0c8SiWMh6r+d/kfz&#xA;XrvlbRtM0WON7LS1ae+9SVY94YhHGV5UrRTJXK8cgDupDxyX8gvzShawMukosWouqW8v1m2pyaNp&#xA;aMvqchSONmO345aM0SpxkPrTRtKtdI0iy0u0FLaxgjt4vHjGoUE+5pU5ik2l4D+Z9v6HnrVFpQO0&#xA;cg9+cSMfxObbTm4B1WoFTLFsuaXYq+mvyRtfQ/LuwcihuZJ5T/yNZB+CZpNabyF3miFYwzzMRy3Y&#xA;q7FXYqlOq+YrKxeS3eG9kmC1Bt7G8uE+IbUkhhkT/hsnGNsZFj/+IbT/AJY9T/7heo/9UMv+Lj8J&#xA;7nf4htP+WPU/+4XqP/VDH4rwnud/iG0/5Y9T/wC4XqP/AFQx+K8J7nf4htP+WPU/+4XqP/VDH4rw&#xA;nuSDWdV+tXGoRDTdUdLi1t7CFv0VqO0VzORfsD9XoKQ8Dueq7YRXePmtHuYd+bPmr8231G2s/I2k&#xA;6omnpEJLm9TTZ+bylmHp0nh2VVAOw3rlmPg6kMSJdzz/AMt6j/zkXoMyfVtG1aW0E73E1nLpzmOR&#xA;pnMkvI+lyHNmJ+E7dsmTjPUI4Zdz6OTzHbMis1jqaMQCVOl6gaE9toMx9u9nwnueD62nne61zULm&#xA;LyXrZgnuZpI3FnNuryMymhQdjmvydn8RJ4o7vY6T2lhjxxgYS9MQPkHaNqn5w6Ld+tp+geYWgOzW&#xA;l1ZzXEIWhACqSCtORI4sB7HMrFjlEUZRdPrNTps0jIRyAnyB/T+zye1aF5xlv9OS41DQdX0q6JIe&#xA;zm068lYU7hooXUg9su+I+bp5R32unlP5gv5svvNl7cab5Q1m7sz6ax3S2Vwgk4xqC3F41bqKbjML&#xA;NovElxcQD03Znb0dNhGMwkav72MRW35n2d0t3p/lfzDbSqytQW1w6/C4kHEUBHxqrUrxqBtl2HBK&#xA;Arij+Px7/Nx9b2lp85s4538/lyI+fD/Reg6L5787oqz6j5N8zPfrGsTz/U5J+arvv6pj41O9AKZm&#xA;x4K34fg8/lieI8HFw+fNl+g+f72+nMF/5U8wabRS31mfTZjESKfDSH1n5Gv8tPfISEehCIiXUKXm&#xA;7zXfWjWdxpPl7XNSuV9RS9pp93E0SsFrUzJF9unbww4+HrSJRl0tj8P5iec4pXkHkjzI7yENKXsm&#xA;bkQAtWJNfsqBlh8PvDHhmyCy/MTVZtKu7q48na9b3lsF9CxaxmL3BY0Ppsqsi8ep5ke1cpIHQhsA&#xA;PUME8wed/wA1dXWW3XybrdpYyqUa3jspCWRhQh3Iqag70oPbMTJiyS5TiHfaPU6HEPVjnOXnVfK6&#xA;+9Z5Z80/mXaa0LzXfLPmjUbSHm1rC1vPLwZouANJCB1Lb+BxxaaUSDxg7d667tHT5oGMcfCTIUeG&#xA;OwoXy87VPMHnH8z9YSWBvKWvW1jKCjW0WnvRkYUKuxPJqjY9j4ZHJizS5TiPcf2Nuk1XZ2Eb48k5&#xA;d8ox+7ipEeRda8/t5qik8y6R5jbTk9RoJry1u5khJhC/ZUStVm5DYd8OLTygQTIHbfdr7Q7Q0+XH&#xA;KOPHwniBB4YihQ2287eqf4htP+WPU/8AuF6j/wBUMyvi6HhPc8h/M7Rda1bzQ19pei6pcW8kMYeQ&#xA;adeL8a1UijRKegGZ+nzQjGiQ4Go085SsBiTeUvOCkA+XtW38NPuz+qLL/wAxj/nBo/K5O5v/AAd5&#xA;x/6l7Vf+kC6/6p4PzOPvC/lcnc+h/ImtWOkeT9J065tNTiube3UTx/ovUTxkarOKrbkfabtmoz+q&#xA;ZI+93OAcMACynTddstRlaK3iu0ZF5E3Nnd2q0rTZriKJSfYGuUGNNwKYYEuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:B60C634F2048EA119453A3DC36AEC7C8</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:B60C634F2048EA119453A3DC36AEC7C8</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:2C990D09B136EA11BB77E29EB464931C</stRef:instanceID>
            <stRef:documentID>xmp.did:2C990D09B136EA11BB77E29EB464931C</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a4298c2c-b4f8-4449-adf9-74c6bd1fcc0c</stEvt:instanceID>
                  <stEvt:when>2019-12-29T00:49:23+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:01828aed-8095-0949-adb4-b67fee38e26b</stEvt:instanceID>
                  <stEvt:when>2019-12-29T14:07:57+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b0e1801b-de9d-4568-999a-860be9a7ed79</stEvt:instanceID>
                  <stEvt:when>2020-01-13T22:42:57+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Bridge 2020 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/metadata</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2C990D09B136EA11BB77E29EB464931C</stEvt:instanceID>
                  <stEvt:when>2020-01-14T11:50:36+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B60C634F2048EA119453A3DC36AEC7C8</stEvt:instanceID>
                  <stEvt:when>2020-02-05T16:04:23+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>2000.000000</stDim:w>
            <stDim:h>2000.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р‘РµР»С‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р§РµСЂРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB РєСЂР°СЃРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Р¶РµР»С‚С‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Р·РµР»РµРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB РіРѕР»СѓР±РѕР№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB СЃРёРЅРёР№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB РїСѓСЂРїСѓСЂРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=56 M=0 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>208</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=51 M=43 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>131</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>197</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=41 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>186</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>201</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -2000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2000 li
2000 2000 li
2000 0 li
cp
clp
2000 2000 mo
0 2000 li
0 0 li
2000 0 li
2000 2000 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
112.619 1611.79 mo
112.619 1611.79 279.507 907.744 466.165 848.509 cv
652.822 789.274 701.353 915.323 789.972 907.205 cv
878.591 899.087 1175.96 650.702 1282.19 552.15 cv
1463.1 384.312 1970.79 286.968 1864.88 542.099 cv
1776.23 755.687 1460.56 1093.61 1506.84 1186.35 cv
1515.84 1204.39 1708.12 1081.22 1760 1097.29 cv
1992.62 1169.32 1681.7 1612.48 1681.7 1612.48 cv
112.619 1611.79 li
cp
.843137 .913725 .956863 rgb
f
1736.15 630.397 mo
1633.15 630.397 li
1633.15 566.336 li
1736.15 566.336 li
1736.15 630.397 li
cp
1563.48 563.336 mo
1563.48 503.015 li
1674.15 503.015 li
1674.15 563.336 li
1563.48 563.336 li
cp
1917.02 630.397 mo
1739.15 630.397 li
1739.15 566.336 li
1786.02 566.336 li
1786.84 566.336 1787.52 565.665 1787.52 564.836 cv
1787.52 564.008 1786.84 563.336 1786.02 563.336 cv
1677.15 563.336 li
1677.15 503.015 li
1841.02 503.015 li
1841.84 503.015 1842.52 502.344 1842.52 501.515 cv
1842.52 500.687 1841.84 500.015 1841.02 500.015 cv
1526.99 500.015 li
1526.16 500.015 1525.49 500.687 1525.49 501.515 cv
1525.49 502.344 1526.16 503.015 1526.99 503.015 cv
1560.48 503.015 li
1560.48 563.336 li
1471.99 563.336 li
1471.16 563.336 1470.49 564.008 1470.49 564.836 cv
1470.49 565.665 1471.16 566.336 1471.99 566.336 cv
1630.15 566.336 li
1630.15 630.397 li
1602.99 630.397 li
1602.16 630.397 1601.49 631.068 1601.49 631.897 cv
1601.49 632.726 1602.16 633.397 1602.99 633.397 cv
1917.02 633.397 li
1917.84 633.397 1918.52 632.726 1918.52 631.897 cv
1918.52 631.068 1917.84 630.397 1917.02 630.397 cv
cp
1 1 1 rgb
f
234.344 1404.31 mo
234.344 1343.99 li
345.015 1343.99 li
345.015 1404.31 li
234.344 1404.31 li
cp
275.344 1471.38 mo
172.344 1471.38 li
172.344 1407.31 li
275.344 1407.31 li
275.344 1471.38 li
cp
436.504 1404.31 mo
348.015 1404.31 li
348.015 1343.99 li
381.504 1343.99 li
382.333 1343.99 383.004 1343.32 383.004 1342.49 cv
383.004 1341.66 382.333 1340.99 381.504 1340.99 cv
174.983 1340.99 li
174.155 1340.99 173.483 1341.66 173.483 1342.49 cv
173.483 1343.32 174.155 1343.99 174.983 1343.99 cv
231.344 1343.99 li
231.344 1404.31 li
122.478 1404.31 li
121.649 1404.31 120.978 1404.99 120.978 1405.81 cv
120.978 1406.64 121.649 1407.31 122.478 1407.31 cv
169.344 1407.31 li
169.344 1471.38 li
119.983 1471.38 li
119.155 1471.38 118.483 1472.05 118.483 1472.88 cv
118.483 1473.7 119.155 1474.38 119.983 1474.38 cv
305.504 1474.38 li
306.333 1474.38 307.004 1473.7 307.004 1472.88 cv
307.004 1472.05 306.333 1471.38 305.504 1471.38 cv
278.344 1471.38 li
278.344 1407.31 li
436.504 1407.31 li
437.333 1407.31 438.004 1406.64 438.004 1405.81 cv
438.004 1404.99 437.333 1404.31 436.504 1404.31 cv
cp
f
1144.66 1542.29 mo
1144.61 1573.7 li
1101.09 1573.7 li
1097.46 1543.9 li
1144.66 1542.29 li
cp
f
1102.53 1572.08 mo
1142.98 1572.08 li
1143.03 1543.97 li
1099.29 1545.47 li
1102.53 1572.08 li
cp
1146.23 1575.33 mo
1099.65 1575.33 li
1095.63 1542.34 li
1146.29 1540.61 li
1146.23 1575.33 li
cp
.054902 .145098 .286275 rgb
f
1146.99 1571.81 mo
1146.99 1571.81 1209.89 1591.77 1212.06 1608.22 cv
1099.28 1608.22 li
1099.28 1571.81 li
1146.99 1571.81 li
cp
.631373 .772549 .886275 rgb
f
969.244 1542.98 mo
968.056 1574.75 li
924.539 1574.75 li
922.477 1542.29 li
969.244 1542.98 li
cp
1 1 1 rgb
f
926.065 1573.13 mo
966.489 1573.13 li
967.557 1544.58 li
924.212 1543.94 li
926.065 1573.13 li
cp
969.623 1576.38 mo
923.013 1576.38 li
920.742 1540.64 li
970.932 1541.38 li
969.623 1576.38 li
cp
.054902 .145098 .286275 rgb
f
970.444 1572.86 mo
970.444 1572.86 1033.34 1592.82 1035.51 1609.27 cv
922.731 1609.27 li
922.731 1572.86 li
970.444 1572.86 li
cp
.631373 .772549 .886275 rgb
f
1039.61 1603.02 mo
1039.61 1612.48 li
919.788 1612.48 li
919.788 1601.66 li
1039.61 1603.02 li
cp
.054902 .145098 .286275 rgb
f
1095.76 1601.34 mo
1095.76 1611.43 li
1215.58 1611.43 li
1215.58 1600.61 li
1095.76 1601.34 li
cp
f
983.676 1548.76 mo
914.415 1548.76 li
908.51 993.618 li
1108.16 1028.09 li
1155.67 1548.76 li
1089 1548.76 li
1019.2 1202.83 li
1027.19 1126.98 li
983.676 1548.76 li
cp
f
936.575 1538.17 mo
936.562 1538.17 936.55 1538.17 936.538 1538.17 cv
935.64 1538.15 934.928 1537.41 934.948 1536.51 cv
945.175 1076.73 li
945.195 1075.83 945.966 1075.13 946.837 1075.14 cv
947.735 1075.16 948.447 1075.9 948.427 1076.8 cv
938.2 1536.58 li
938.18 1537.47 937.456 1538.17 936.575 1538.17 cv
cp
.631373 .772549 .886275 rgb
f
1104.7 1536.26 mo
1033.69 1132.72 li
1033.61 1132.24 1033.31 1131.85 1032.92 1131.61 cv
1036.78 1108.82 li
1036.81 1108.68 li
1036.81 1063.18 li
1036.81 1062.28 1036.08 1061.56 1035.18 1061.56 cv
1034.28 1061.56 1033.55 1062.28 1033.55 1063.18 cv
1033.55 1108.41 li
1017.6 1202.56 li
1017.45 1203.45 1018.04 1204.28 1018.93 1204.43 cv
1019.02 1204.45 1019.11 1204.46 1019.2 1204.46 cv
1019.98 1204.46 1020.67 1203.9 1020.8 1203.1 cv
1031.58 1139.51 li
1101.49 1536.83 li
1101.63 1537.62 1102.32 1538.17 1103.09 1538.17 cv
1103.19 1538.17 1103.28 1538.16 1103.38 1538.15 cv
1104.26 1537.99 1104.85 1537.15 1104.7 1536.26 cv
cp
f
1057.86 1063.18 mo
1057.86 1063.18 1057.19 1109.14 1049.19 1110.64 cv
972.689 1110.64 li
970.189 1108.23 966.189 1094.5 990.189 1094 cv
1014.19 1093.5 1021.33 1094 1021.33 1094 cv
1020.19 1063.18 li
1057.86 1063.18 li
cp
1 1 1 rgb
f
973.341 1109.25 mo
1049.04 1109.25 li
1053.14 1108.11 1056.02 1085.57 1056.44 1064.58 cv
1021.64 1064.58 li
1022.78 1095.5 li
1021.23 1095.39 li
1021.16 1095.39 1013.82 1094.91 990.219 1095.4 cv
977.888 1095.65 973.862 1099.38 972.656 1102.46 cv
971.568 1105.24 972.551 1108.08 973.341 1109.25 cv
cp
1049.32 1112.04 mo
972.126 1112.04 li
971.721 1111.65 li
970 1109.98 968.464 1105.51 970.06 1101.44 cv
971.575 1097.57 976.292 1092.9 990.16 1092.61 cv
1008.22 1092.23 1016.71 1092.42 1019.88 1092.54 cv
1018.74 1061.79 li
1059.27 1061.79 li
1059.25 1063.2 li
1059.09 1074.25 1057.91 1110.42 1049.45 1112.01 cv
1049.32 1112.04 li
cp
.054902 .145098 .286275 rgb
f
1150.58 695.519 mo
1150.58 695.519 1132.12 745.262 1134.69 751.996 cv
1137.27 758.729 1137.7 784.718 1137.7 784.718 cv
1087.59 881.057 li
1005.38 850.409 li
1022.93 762.572 li
1022.93 762.572 1069.81 741.463 1073.85 735.639 cv
1079.45 727.58 1092.15 679.944 1092.15 679.944 cv
1150.58 695.519 li
cp
1 1 1 rgb
f
1088.32 882.979 mo
1003.61 851.395 li
1021.58 761.492 li
1022.3 761.166 li
1040.99 752.751 1069.8 738.775 1072.59 734.76 cv
1077.96 727.012 1090.54 680.021 1090.66 679.547 cv
1090.88 678.724 1091.73 678.233 1092.55 678.455 cv
1093.37 678.674 1093.86 679.519 1093.64 680.342 cv
1093.12 682.297 1080.8 728.332 1075.12 736.518 cv
1071.12 742.289 1031.63 760.332 1024.29 763.651 cv
1007.15 849.423 li
1086.85 879.137 li
1136.15 784.354 li
1136.08 781.105 1135.54 758.515 1133.25 752.547 cv
1130.6 745.622 1146.02 703.38 1149.14 694.982 cv
1149.43 694.184 1150.32 693.777 1151.12 694.074 cv
1151.92 694.37 1152.32 695.257 1152.03 696.056 cv
1144.97 715.077 1134.41 746.935 1136.13 751.444 cv
1138.78 758.352 1139.22 783.62 1139.24 784.692 cv
1139.25 785.083 li
1139.07 785.429 li
1088.32 882.979 li
cp
.054902 .145098 .286275 rgb
f
1170.48 590.235 mo
1180.48 594.81 1204.91 605.609 1198.7 624.159 cv
1191.62 645.316 1178.94 671.324 1172.02 684.936 cv
1169.29 690.309 1163.05 692.866 1157.34 690.957 cv
1093.46 669.577 li
1087.61 667.618 1084.16 661.575 1085.45 655.525 cv
1089.77 635.163 1099.29 592.17 1103.71 586.687 cv
1118.75 568.031 1154.65 582.993 1170.48 590.235 cv
cp
f
1093.78 685.052 mo
1091.53 680.313 1094.9 665.673 1099.92 649.367 cv
1100.06 648.896 1099.95 648.389 1099.64 648.026 cv
1096.28 644.124 1092 636.747 1094.86 628.781 cv
1097.34 621.881 1101.88 625.021 1105.08 628.579 cv
1105.65 629.214 1106.68 628.977 1106.97 628.147 cv
1113.81 608.748 1120.61 592.007 1120.61 592.007 cv
1196.52 617.413 li
1196.52 617.413 1190.55 634.756 1183.29 654.016 cv
1182.96 654.88 1164.21 700.336 1160.97 703.936 cv
1159.21 705.897 1156.67 707.165 1153.6 707.858 cv
1153.6 707.858 1147.39 710.212 1119.8 700.978 cv
1093.78 685.052 li
cp
1 1 1 rgb
f
1150.88 709.676 mo
1146.64 709.676 1137.53 708.544 1119.31 702.446 cv
1118.5 702.175 1118.07 701.297 1118.34 700.487 cv
1118.61 699.676 1119.49 699.239 1120.3 699.51 cv
1146.41 708.25 1153.03 706.412 1153.1 706.393 cv
1153.26 706.348 li
1156.14 705.697 1158.35 704.537 1159.82 702.902 cv
1162.73 699.662 1181.15 655.271 1181.84 653.467 cv
1187.8 637.654 1192.94 622.978 1194.54 618.385 cv
1121.5 593.938 li
1119.75 598.298 1114.08 612.649 1108.43 628.662 cv
1108.1 629.586 1107.34 630.25 1106.4 630.438 cv
1105.48 630.619 1104.55 630.313 1103.92 629.614 cv
1101.79 627.245 1099.87 626.015 1098.66 626.262 cv
1097.55 626.479 1096.78 628.037 1096.32 629.305 cv
1093.46 637.259 1098.51 644.34 1100.81 647.016 cv
1101.48 647.791 1101.7 648.839 1101.4 649.821 cv
1093.65 674.972 1094.18 682.274 1095.18 684.389 cv
1095.55 685.161 1095.22 686.084 1094.45 686.451 cv
1093.67 686.817 1092.75 686.489 1092.38 685.716 cv
1090.23 681.18 1092.21 669.163 1098.42 648.979 cv
1095.74 645.849 1090.02 637.688 1093.41 628.258 cv
1094.46 625.316 1096.03 623.622 1098.06 623.223 cv
1100.34 622.771 1102.92 624.048 1105.73 627.007 cv
1112.43 608.058 1119.1 591.591 1119.17 591.425 cv
1119.72 590.078 li
1198.49 616.44 li
1197.98 617.917 li
1197.92 618.091 1191.92 635.502 1184.74 654.562 cv
1184.57 654.998 1165.71 700.981 1162.13 704.97 cv
1160.23 707.079 1157.5 708.553 1154.01 709.353 cv
1153.64 709.466 1152.71 709.676 1150.88 709.676 cv
cp
.054902 .145098 .286275 rgb
f
1140.39 647.687 mo
1140.08 647.687 1139.75 647.628 1139.44 647.505 cv
1138.08 646.976 1137.42 645.45 1137.94 644.097 cv
1138.55 642.556 li
1139.08 641.204 1140.6 640.536 1141.96 641.064 cv
1143.31 641.593 1143.98 643.119 1143.45 644.472 cv
1142.84 646.013 li
1142.44 647.052 1141.45 647.687 1140.39 647.687 cv
cp
f
1171.93 659.638 mo
1171.64 659.638 1171.35 659.592 1171.07 659.493 cv
1169.7 659.018 1168.97 657.52 1169.44 656.147 cv
1170.08 654.303 li
1170.56 652.931 1172.05 652.201 1173.43 652.677 cv
1174.8 653.152 1175.53 654.65 1175.05 656.023 cv
1174.42 657.867 li
1174.04 658.955 1173.02 659.638 1171.93 659.638 cv
cp
f
1128.91 631.88 mo
1128.38 631.88 1127.84 631.679 1127.43 631.274 cv
1126.6 630.458 1126.6 629.126 1127.41 628.298 cv
1135.41 620.189 1148.77 624.526 1149.34 624.714 cv
1150.44 625.083 1151.04 626.274 1150.67 627.377 cv
1150.3 628.478 1149.12 629.071 1148.01 628.708 cv
1148.01 628.708 li
1147.9 628.671 1136.55 625.021 1130.41 631.253 cv
1130 631.671 1129.45 631.88 1128.91 631.88 cv
cp
f
1154.51 670.166 mo
1153.53 670.166 1152.68 670.093 1152.18 670.037 cv
1151.21 669.928 1150.5 669.052 1150.61 668.079 cv
1150.72 667.105 1151.61 666.407 1152.57 666.512 cv
1155.32 666.812 1158.06 666.362 1158.38 665.78 cv
1158.84 664.764 1159.55 658.444 1160.12 653.366 cv
1161.22 643.657 1161.96 637.628 1163.02 635.786 cv
1163.59 634.794 1164.52 634.171 1165.72 633.983 cv
1170.98 633.155 1180.43 641.473 1182.27 643.147 cv
1182.99 643.806 1183.05 644.928 1182.39 645.652 cv
1181.73 646.377 1180.61 646.431 1179.88 645.772 cv
1172.02 638.631 1166.83 636.985 1166.11 637.536 cv
1165.32 638.914 1164.31 647.85 1163.65 653.763 cv
1162.66 662.539 1162.18 666.239 1161.49 667.497 cv
1160.26 669.723 1156.95 670.166 1154.51 670.166 cv
cp
f
1177.4 620.259 mo
1187.38 622.963 1207.11 625.362 1211.59 605.404 cv
1216.07 585.446 1209.98 591.198 1209.98 591.198 cv
1209.98 591.198 1204.54 594.178 1202.95 593.848 cv
1201.36 593.518 1204.16 595.643 1204.29 577.903 cv
1204.29 577.903 1190.66 570.37 1181.39 577.454 cv
1172.13 584.537 1169.31 577.964 1168.45 572.599 cv
1167.72 568.041 1159.94 571.09 1157.46 574.681 cv
1153.74 578.408 1132.2 568.75 1124.51 569.905 cv
1112.34 571.735 1107.99 572.773 1103.71 586.687 cv
1102.89 589.361 1098.53 616.613 1098.53 616.613 cv
1115.9 592.212 li
1115.9 592.212 1161.09 615.84 1177.4 620.259 cv
cp
f
1157.04 680.975 mo
1157.56 682.279 1155.53 686.248 1151.88 684.662 cv
1142.53 680.594 1136.29 670.541 1138.4 671.912 cv
1139.23 672.449 1144.8 676.139 1148.68 678.108 cv
1153.95 680.785 1156.45 679.494 1157.04 680.975 cv
cp
f
1076.05 737.51 mo
1076.05 737.51 1139.28 759.859 1141.78 760.015 cv
1144.27 760.171 1102.42 1046.4 1102.42 1046.4 cv
969.531 1003.73 li
1076.05 737.51 li
cp
.886275 .278431 .294118 rgb
f
987.961 840.834 mo
987.961 1075.29 li
987.961 840.834 li
cp
1 1 1 rgb
f
987.961 1076.9 mo
987.071 1076.9 986.35 1076.18 986.35 1075.29 cv
986.35 840.834 li
986.35 839.944 987.071 839.223 987.961 839.223 cv
988.851 839.223 989.572 839.944 989.572 840.834 cv
989.572 1075.29 li
989.572 1076.18 988.851 1076.9 987.961 1076.9 cv
cp
.054902 .145098 .286275 rgb
f
1169.96 890.965 mo
1174.73 899.458 1278.13 823.574 1279.67 817.792 cv
1283.19 804.542 1274.71 792.267 1275.67 788.353 cv
1277.17 782.215 1289.9 801.51 1292.65 807.118 cv
1293.12 808.075 1293.87 808.15 1294.8 807.63 cv
1305.96 801.4 1335.46 783.545 1337 789.761 cv
1338.42 795.458 1308.94 809.566 1309.17 810.958 cv
1309.78 814.646 1312.48 828.146 1297.67 834.125 cv
1288.1 837.987 1262.16 930.17 1212.2 920.428 cv
1162.25 910.685 1165.19 882.471 1169.96 890.965 cv
cp
1 1 1 rgb
f
1277.31 788.539 mo
1277.31 788.539 li
1277.31 788.539 li
cp
1278.1 817.364 mo
1278.1 817.367 1278.1 817.371 1278.09 817.374 cv
1278.1 817.37 1278.1 817.367 1278.1 817.364 cv
cp
1169.36 892.665 mo
1169.58 893.541 1170 894.675 1170.74 896.045 cv
1173.42 900.969 1182.84 913.044 1212.51 918.831 cv
1247.68 925.689 1270.82 879.733 1284.64 852.272 cv
1290.89 839.861 1294.03 833.841 1297.06 832.617 cv
1310.28 827.282 1308.27 815.431 1307.62 811.536 cv
1307.56 811.225 li
1307.3 809.667 1308.24 809.121 1315.5 804.869 cv
1319.77 802.367 1325.08 799.254 1329.24 796.285 cv
1335.67 791.683 1335.42 790.168 1335.42 790.154 cv
1335.29 790.081 1333.33 789.129 1321.83 794.696 cv
1314.73 798.138 1306.5 802.836 1300.5 806.267 cv
1298.64 807.328 1296.98 808.278 1295.6 809.05 cv
1294.66 809.572 1293.78 809.707 1292.97 809.454 cv
1292.44 809.29 1291.71 808.875 1291.19 807.834 cv
1288.38 802.096 1280.13 790.383 1277.22 788.928 cv
1277.14 789.96 1277.95 792.338 1278.73 794.643 cv
1280.7 800.398 1283.66 809.096 1281.24 818.21 cv
1280.07 822.62 1245.54 847.905 1232.33 857.276 cv
1217.72 867.645 1182.63 891.899 1172.4 893.193 cv
1170.94 893.379 1169.98 893.099 1169.36 892.665 cv
cp
1219.63 922.786 mo
1217.12 922.786 1214.54 922.541 1211.89 922.024 cv
1174.9 914.81 1166.13 897.452 1165.88 891.373 cv
1165.77 888.697 1167.13 888.017 1167.72 887.849 cv
1168.46 887.64 1169.89 887.651 1171.28 889.999 cv
1173.78 890.59 1188 884.448 1226.51 857.401 cv
1253.8 838.242 1276.57 820.18 1278.11 817.3 cv
1280.25 809.165 1277.59 801.381 1275.65 795.693 cv
1274.49 792.266 1273.64 789.791 1274.09 787.966 cv
1274.58 785.973 1275.96 785.613 1276.53 785.551 cv
1276.61 785.542 1276.69 785.538 1276.78 785.538 cv
1282.26 785.538 1292.84 804.113 1294.01 806.21 cv
1294.01 806.21 1294.01 806.21 1294.01 806.21 cv
1295.38 805.442 1297.04 804.497 1298.89 803.442 cv
1319.93 791.418 1332.19 785.269 1336.71 787.2 cv
1337.67 787.608 1338.33 788.378 1338.58 789.369 cv
1339.63 793.613 1332.19 798.864 1317.14 807.676 cv
1314.7 809.107 1311.97 810.701 1310.9 811.478 cv
1312.76 823.374 1308.52 831.5 1298.28 835.633 cv
1296.25 836.453 1291.82 845.238 1287.55 853.735 cv
1274.32 880.027 1252.79 922.786 1219.63 922.786 cv
cp
.054902 .145098 .286275 rgb
f
865.401 1019.26 mo
865.401 1019.26 949.935 758.563 985.369 734.867 cv
1020.8 711.17 1032.09 715.049 1061.07 715.276 cv
1090.05 715.504 1090.47 790.872 1081.23 816.569 cv
1069.51 849.209 1008.38 1051.44 1008.38 1051.44 cv
865.401 1019.26 li
cp
.631373 .772549 .886275 rgb
f
1074.35 1066.29 mo
1074.35 1066.29 1104.41 860.503 1116.67 818.786 cv
1124.37 792.589 1131.59 737.321 1146.74 742.124 cv
1179.42 752.487 1198.23 869.254 1198.23 869.254 cv
1263.77 815.577 li
1303.11 871.646 li
1303.11 871.646 1238.85 978.651 1190.08 978.168 cv
1168.59 977.956 1142.98 919.569 1142.98 919.569 cv
1123.98 1077.46 li
1074.35 1066.29 li
cp
f
993.722 833.146 mo
987.961 1083.22 li
1061.08 1084.23 li
1065.12 815.833 li
993.722 833.146 li
cp
f
1062.8 1086 mo
986.171 1084.95 li
991.973 833.106 li
991.994 832.14 992.792 831.346 993.762 831.397 cv
994.728 831.42 995.493 832.221 995.471 833.187 cv
989.751 1081.5 li
1059.36 1082.46 li
1063.37 815.806 li
1063.39 814.849 1064.17 814.083 1065.12 814.083 cv
1065.13 814.083 1065.14 814.083 1065.15 814.083 cv
1066.12 814.098 1066.89 814.893 1066.87 815.859 cv
1062.8 1086 li
cp
.054902 .145098 .286275 rgb
f
1142.44 911.396 mo
1142.37 911.396 1142.29 911.392 1142.21 911.382 cv
1141.26 911.258 1140.58 910.381 1140.7 909.423 cv
1150.64 832.34 li
1150.76 831.382 1151.63 830.702 1152.6 830.828 cv
1153.56 830.952 1154.23 831.829 1154.11 832.787 cv
1144.17 909.87 li
1144.06 910.753 1143.31 911.396 1142.44 911.396 cv
cp
f
586.982 1351.62 mo
408.365 1351.62 li
384.389 1351.62 364.953 1332.18 364.953 1308.2 cv
364.953 941.088 li
364.953 917.111 384.389 897.675 408.365 897.675 cv
550.111 897.675 li
574.087 897.675 593.523 917.111 593.523 941.088 cv
593.523 1273.29 li
630.395 1308.2 li
630.395 1332.18 610.958 1351.62 586.982 1351.62 cv
cp
.631373 .772549 .886275 rgb
f
408.365 899.425 mo
385.392 899.425 366.702 918.114 366.702 941.088 cv
366.702 1308.2 li
366.702 1331.18 385.392 1349.87 408.365 1349.87 cv
586.982 1349.87 li
609.706 1349.87 628.239 1331.58 628.639 1308.95 cv
591.774 1274.04 li
591.774 941.088 li
591.774 918.114 573.084 899.425 550.111 899.425 cv
408.365 899.425 li
cp
586.982 1353.37 mo
408.365 1353.37 li
383.463 1353.37 363.203 1333.11 363.203 1308.2 cv
363.203 941.088 li
363.203 916.186 383.463 895.925 408.365 895.925 cv
550.111 895.925 li
575.014 895.925 595.273 916.186 595.273 941.088 cv
595.273 1272.54 li
632.145 1307.45 li
632.145 1308.2 li
632.145 1333.11 611.885 1353.37 586.982 1353.37 cv
cp
.054902 .145098 .286275 rgb
f
488.984 1286.48 mo
488.974 1286.48 488.964 1286.48 488.954 1286.48 cv
414.47 1287.75 li
424.383 1166.96 394.841 986.998 394.541 985.19 cv
394.382 984.238 393.481 983.587 392.528 983.752 cv
391.575 983.91 390.931 984.811 391.089 985.765 cv
391.389 987.569 420.918 1167.45 410.955 1287.81 cv
395.075 1288.08 li
394.108 1288.1 393.339 1288.89 393.355 1289.86 cv
393.372 1290.82 394.151 1291.58 395.104 1291.58 cv
395.114 1291.58 395.124 1291.58 395.134 1291.58 cv
489.013 1289.98 li
489.979 1289.96 490.749 1289.17 490.732 1288.2 cv
490.716 1287.25 489.937 1286.48 488.984 1286.48 cv
cp
f
533.823 1576.89 mo
517.271 1576.89 li
517.271 1372.11 li
527.789 1369.96 535.643 1361.61 535.643 1351.62 cv
488.293 1351.62 li
488.293 1361.61 496.146 1369.96 506.665 1372.11 cv
506.665 1576.89 li
490.112 1576.89 li
473.674 1576.89 460.348 1590.21 460.348 1606.65 cv
460.348 1612.48 li
563.587 1612.48 li
563.587 1606.65 li
563.587 1590.21 550.262 1576.89 533.823 1576.89 cv
cp
f
854.446 1493.64 mo
883.183 1565.59 li
833.238 1565.59 li
808.615 1519.67 li
854.446 1493.64 li
cp
1 1 1 rgb
f
834.392 1563.67 mo
880.336 1563.67 li
853.475 1496.41 li
811.204 1520.42 li
834.392 1563.67 li
cp
886.03 1567.52 mo
832.083 1567.52 li
806.026 1518.92 li
855.417 1490.87 li
886.03 1567.52 li
cp
.054902 .145098 .286275 rgb
f
885.924 1563.27 mo
885.924 1563.27 958.107 1587.72 960.597 1607.86 cv
831.164 1607.86 li
831.164 1563.27 li
885.924 1563.27 li
cp
.886275 .278431 .294118 rgb
f
691.823 1526.42 mo
685.979 1566.18 li
638.709 1566.18 li
643.709 1522.9 li
691.823 1526.42 li
cp
1 1 1 rgb
f
640.873 1564.25 mo
684.314 1564.25 li
689.614 1528.2 li
645.412 1524.95 li
640.873 1564.25 li
cp
687.645 1568.1 mo
636.545 1568.1 li
642.006 1520.84 li
694.033 1524.65 li
687.645 1568.1 li
cp
.054902 .145098 .286275 rgb
f
688.72 1563.85 mo
688.72 1563.85 760.904 1588.3 763.393 1608.44 cv
633.96 1608.44 li
633.96 1563.85 li
688.72 1563.85 li
cp
.886275 .278431 .294118 rgb
f
768.104 1600.79 mo
768.104 1612.37 li
630.582 1612.37 li
630.582 1599.13 li
768.104 1600.79 li
cp
.054902 .145098 .286275 rgb
f
827.119 1599.44 mo
827.119 1611.79 li
964.642 1611.79 li
964.642 1598.55 li
827.119 1599.44 li
cp
f
693.573 1580.17 mo
692.823 1580.17 692.127 1579.69 691.887 1578.93 cv
691.589 1578 692.104 1577.01 693.035 1576.71 cv
717.989 1568.74 li
718.92 1568.45 719.916 1568.96 720.214 1569.89 cv
720.511 1570.82 719.997 1571.82 719.066 1572.12 cv
694.112 1580.08 li
693.933 1580.14 693.751 1580.17 693.573 1580.17 cv
cp
f
706.05 1588.13 mo
705.3 1588.13 704.604 1587.65 704.364 1586.9 cv
704.066 1585.97 704.581 1584.97 705.512 1584.68 cv
730.466 1576.71 li
731.397 1576.41 732.393 1576.93 732.691 1577.86 cv
732.988 1578.79 732.474 1579.79 731.543 1580.08 cv
706.589 1588.05 li
706.41 1588.11 706.228 1588.13 706.05 1588.13 cv
cp
f
723.34 1596.1 mo
722.591 1596.1 721.895 1595.62 721.654 1594.87 cv
721.357 1593.94 721.871 1592.94 722.802 1592.64 cv
747.756 1584.68 li
748.689 1584.38 749.684 1584.89 749.981 1585.83 cv
750.279 1586.76 749.765 1587.75 748.833 1588.05 cv
723.879 1596.02 li
723.7 1596.07 723.519 1596.1 723.34 1596.1 cv
cp
f
887.228 1576.88 mo
886.479 1576.88 885.782 1576.4 885.542 1575.64 cv
885.245 1574.71 885.759 1573.72 886.69 1573.42 cv
911.644 1565.45 li
912.575 1565.16 913.572 1565.67 913.869 1566.6 cv
914.167 1567.53 913.652 1568.53 912.721 1568.82 cv
887.767 1576.79 li
887.588 1576.85 887.406 1576.88 887.228 1576.88 cv
cp
f
899.705 1584.84 mo
898.956 1584.84 898.259 1584.36 898.019 1583.61 cv
897.722 1582.68 898.236 1581.68 899.167 1581.38 cv
924.121 1573.42 li
925.052 1573.12 926.048 1573.63 926.346 1574.57 cv
926.644 1575.5 926.129 1576.49 925.198 1576.79 cv
900.244 1584.76 li
900.065 1584.81 899.883 1584.84 899.705 1584.84 cv
cp
f
916.996 1592.81 mo
916.247 1592.81 915.55 1592.33 915.31 1591.58 cv
915.013 1590.65 915.527 1589.65 916.458 1589.35 cv
941.412 1581.38 li
942.344 1581.09 943.339 1581.6 943.637 1582.53 cv
943.934 1583.46 943.42 1584.46 942.489 1584.76 cv
917.535 1592.73 li
917.356 1592.78 917.174 1592.81 916.996 1592.81 cv
cp
f
638.813 1194.32 mo
638.813 1194.32 797.459 1187.29 801.459 1226.07 cv
805.459 1264.85 708.209 1539.17 708.209 1539.17 cv
631.959 1528.34 li
631.959 1528.34 686.818 1327.19 684.442 1312.76 cv
675.043 1255.68 455.788 1186.35 455.788 1186.35 cv
638.813 1194.32 li
cp
.117647 .321569 .447059 rgb
f
427.121 1164.07 mo
427.121 1164.07 408.055 1289.25 499.218 1296.96 cv
591.274 1304.75 679.6 1303.36 699.637 1323.02 cv
705.505 1328.78 808.818 1539.17 808.818 1539.17 cv
880.983 1510.71 li
880.983 1510.71 760.247 1250.38 750.98 1237.86 cv
734.297 1215.31 721.665 1203.15 638.813 1194.32 cv
563.983 1186.35 427.121 1164.07 427.121 1164.07 cv
cp
.180392 .419608 .6 rgb
f
644.669 828.623 mo
644.669 828.623 628.099 877.48 631.107 883.854 cv
634.115 890.226 656.463 905.335 656.463 905.335 cv
588.942 1010.58 li
502.389 984.903 li
516.086 899.342 li
516.086 899.342 563.487 876.763 567.37 870.953 cv
572.743 862.915 583.467 816.363 583.467 816.363 cv
644.669 828.623 li
cp
1 1 1 rgb
f
589.614 1012.39 mo
588.503 1012.06 li
500.652 985.995 li
514.692 898.298 li
515.423 897.95 li
533.602 889.291 563.431 874.071 566.088 870.096 cv
571.245 862.382 581.858 816.479 581.965 816.017 cv
582.156 815.188 582.984 814.668 583.813 814.86 cv
584.643 815.052 585.161 815.879 584.97 816.709 cv
584.529 818.621 574.119 863.63 568.652 871.81 cv
564.803 877.568 524.899 896.836 517.48 900.385 cv
504.125 983.81 li
588.27 1008.77 li
654.356 905.764 li
649.274 902.264 632.495 890.406 629.713 884.512 cv
626.597 877.91 640.409 836.385 643.209 828.128 cv
643.482 827.322 644.358 826.891 645.165 827.163 cv
645.971 827.437 646.403 828.312 646.129 829.118 cv
639.8 847.78 630.504 878.963 632.501 883.195 cv
634.82 888.11 651.208 899.921 657.326 904.058 cv
658.573 904.9 li
589.614 1012.39 li
cp
.054902 .145098 .286275 rgb
f
651.414 726.792 mo
662.184 730.23 688.461 738.269 683.97 756.689 cv
678.848 777.7 668.461 803.909 662.729 817.654 cv
660.467 823.079 654.298 826.134 648.227 824.846 cv
580.227 810.417 li
573.997 809.096 569.824 803.619 570.526 797.682 cv
572.889 777.699 578.281 735.469 582.272 729.776 cv
595.853 710.406 634.362 721.348 651.414 726.792 cv
cp
f
582.146 825.26 mo
579.342 820.921 581.302 806.529 584.8 790.378 cv
584.901 789.911 584.736 789.435 584.376 789.115 cv
580.517 785.687 575.351 779.007 577.48 771.078 cv
579.325 764.209 584.32 766.792 587.98 769.905 cv
588.633 770.461 589.671 770.134 589.888 769.309 cv
594.941 750.01 600.222 733.271 600.222 733.271 cv
681.027 750.416 li
681.027 750.416 676.658 767.655 671.161 786.86 cv
670.914 787.721 656.258 833.202 653.298 836.972 cv
651.686 839.025 649.199 840.486 646.104 841.448 cv
646.104 841.448 639.954 844.304 610.586 838.072 cv
582.146 825.26 li
cp
1 1 1 rgb
f
640.011 843.654 mo
634.711 843.655 625.588 842.838 610.265 839.586 cv
609.428 839.409 608.894 838.587 609.072 837.751 cv
609.249 836.915 610.067 836.376 610.907 836.558 cv
638.799 842.476 645.431 840.05 645.495 840.025 cv
645.645 839.969 li
648.568 839.062 650.733 837.731 652.08 836.016 cv
654.708 832.67 669.144 788.232 669.674 786.43 cv
674.156 770.769 677.926 756.265 679.127 751.596 cv
601.281 735.079 li
599.934 739.427 595.558 753.766 591.385 769.701 cv
591.148 770.607 590.467 771.317 589.563 771.601 cv
588.659 771.886 587.692 771.692 586.977 771.084 cv
584.479 768.959 582.312 767.966 581.044 768.365 cv
579.933 768.711 579.306 770.25 578.976 771.479 cv
576.868 779.326 582.77 785.617 585.405 787.958 cv
586.182 788.649 586.53 789.701 586.313 790.705 cv
580.928 815.566 582.206 822.5 583.446 824.419 cv
583.91 825.138 583.704 826.096 582.986 826.56 cv
582.269 827.025 581.31 826.818 580.845 826.1 cv
579.853 824.564 576.836 819.893 583.256 790.19 cv
580.149 787.405 573.456 780.097 575.985 770.677 cv
576.759 767.795 578.151 766.023 580.124 765.409 cv
582.432 764.691 585.258 765.683 588.538 768.355 cv
593.499 749.475 598.693 732.972 598.746 732.806 cv
599.168 731.465 li
682.923 749.236 li
682.527 750.797 li
682.484 750.969 678.09 768.278 672.649 787.286 cv
672.525 787.721 657.803 833.742 654.515 837.928 cv
652.784 840.132 650.132 841.807 646.631 842.905 cv
646.101 843.115 644.318 843.654 640.011 843.654 cv
cp
.054902 .145098 .286275 rgb
f
617.643 784.923 mo
617.393 784.923 617.137 784.887 616.885 784.811 cv
615.494 784.393 614.705 782.926 615.123 781.534 cv
615.585 779.996 li
616.004 778.604 617.47 777.815 618.862 778.234 cv
620.253 778.652 621.042 780.119 620.624 781.51 cv
620.161 783.049 li
619.819 784.188 618.774 784.923 617.643 784.923 cv
cp
f
654.845 792.916 mo
654.63 792.916 654.412 792.889 654.194 792.834 cv
652.786 792.475 651.935 791.043 652.293 789.636 cv
652.76 787.803 li
653.119 786.394 654.551 785.546 655.958 785.902 cv
657.367 786.261 658.217 787.693 657.859 789.101 cv
657.392 790.934 li
657.089 792.124 656.019 792.916 654.845 792.916 cv
cp
f
626.606 774.039 mo
626.187 774.039 625.763 773.914 625.394 773.653 cv
625.32 773.602 619.848 769.839 612.961 770.855 cv
611.81 771.025 610.742 770.229 610.573 769.079 cv
610.404 767.93 611.199 766.86 612.349 766.691 cv
620.962 765.426 627.552 770.023 627.828 770.22 cv
628.775 770.893 628.997 772.207 628.323 773.154 cv
627.913 773.731 627.265 774.039 626.606 774.039 cv
cp
f
619.767 810.22 mo
618.059 811.708 623.109 819.116 630.756 820.411 cv
643.235 822.525 648.991 815.438 645.867 815.363 cv
644.643 815.333 639.581 816.758 632.141 815.359 cv
624.115 813.849 620.912 809.222 619.767 810.22 cv
cp
f
635.134 807.294 mo
635.049 807.294 634.971 807.294 634.899 807.293 cv
633.92 807.282 633.137 806.48 633.147 805.501 cv
633.157 804.528 633.95 803.747 634.92 803.747 cv
634.985 803.746 635.048 803.748 635.112 803.748 cv
637.973 803.748 640.616 803.065 640.931 802.48 cv
641.559 801.116 641.597 801.034 640.274 792.754 cv
639.978 790.903 639.62 788.665 639.198 785.937 cv
639.181 785.791 li
639.137 785.163 638.794 779.558 640.456 776.117 cv
641.059 774.868 642.441 774.019 644.563 773.596 cv
649.989 772.513 659.313 774.216 664.01 778.392 cv
664.742 779.043 664.808 780.164 664.157 780.896 cv
663.506 781.628 662.385 781.692 661.654 781.042 cv
658.216 777.986 651.155 776.509 646.592 776.892 cv
644.563 777.062 643.751 777.543 643.626 777.698 cv
642.601 779.831 642.616 783.962 642.714 785.469 cv
643.131 788.156 643.483 790.365 643.776 792.195 cv
645.157 800.833 645.269 801.54 644.15 803.966 cv
642.749 807.008 637.17 807.294 635.134 807.294 cv
cp
f
591.609 730.275 mo
591.609 730.275 590.958 709.891 604.625 712.339 cv
618.291 714.787 620.595 701.244 633.399 703.636 cv
646.205 706.029 639.024 709.477 652.145 713.454 cv
665.264 717.432 672.283 710.328 675.388 720.957 cv
678.494 731.587 689.032 729.53 693.25 736.844 cv
697.467 744.158 695.523 752.276 688.86 754.583 cv
682.198 756.892 691.86 763.072 686.258 768.578 cv
680.656 774.084 658.604 772.159 655.364 763.343 cv
652.124 754.528 650.48 748.554 642.288 747.633 cv
634.096 746.712 623.872 750.355 618.389 748.436 cv
612.906 746.517 605.685 740.1 602.554 741.462 cv
599.424 742.825 595.936 747.767 592.95 747.183 cv
589.964 746.599 581.211 736.253 591.609 730.275 cv
cp
f
604.45 733.243 mo
604.45 733.243 600.795 743.041 596.825 747.279 cv
592.854 751.517 587.453 754.228 587.539 761.292 cv
587.625 768.356 570.692 757.542 575.394 750.239 cv
585.081 735.194 570.475 730.747 580.073 723.283 cv
585.804 718.827 595.868 719.585 595.868 719.585 cv
604.45 733.243 li
cp
f
604.45 733.243 mo
604.45 733.243 600.795 743.041 596.825 747.279 cv
592.854 751.517 587.453 754.228 587.539 761.292 cv
587.625 768.356 570.692 757.542 575.394 750.239 cv
585.081 735.194 570.475 730.747 580.073 723.283 cv
585.804 718.827 595.868 719.585 595.868 719.585 cv
604.45 733.243 li
cp
f
542.153 869.574 mo
524.56 860.499 413.593 937.169 382.236 1038.26 cv
347.042 1151.72 476.039 1119.86 476.039 1119.86 cv
456.116 993.265 li
423.95 1175.11 li
630.76 1194.32 li
652.495 1059.22 li
652.495 1059.22 642.88 1118.99 719.719 1120.28 cv
753.561 1120.84 801.46 1120.28 801.46 1120.28 cv
806.983 1068.6 li
720.769 1056.33 li
720.769 1056.33 712.955 958.896 678.812 923.533 cv
662.697 906.843 649.439 897.018 642.484 895.322 cv
621.549 890.219 631.493 915.656 542.153 869.574 cv
cp
.886275 .278431 .294118 rgb
f
665.338 1099.26 mo
706.312 1094.91 li
719.624 1098.38 li
721.561 1103.32 li
721.561 1103.32 699.667 1102.03 686.732 1105.97 cv
673.797 1109.9 663.976 1108.65 663.976 1108.65 cv
663.272 1105.68 li
665.338 1099.26 li
cp
1 1 1 rgb
f
658.528 1112.64 mo
640.338 1111.08 562.397 1121.62 562.397 1121.62 cv
568.97 1079.52 li
568.97 1079.52 653.996 1093.99 660.425 1092.14 cv
672.5 1088.67 688.504 1086.56 702.776 1086 cv
721.653 1085.26 739.274 1089.78 738.989 1094.91 cv
738.836 1097.68 713.412 1095.48 706.899 1098.09 cv
688.507 1105.47 671.493 1113.76 658.528 1112.64 cv
cp
f
570.729 1081.96 mo
564.924 1119.15 li
579.261 1117.25 642.251 1109.14 658.709 1110.54 cv
658.709 1110.54 li
669.083 1111.43 682.807 1105.74 697.342 1099.72 cv
700.222 1098.53 703.149 1097.31 706.111 1096.13 cv
709.649 1094.71 717.331 1094.58 724.758 1094.45 cv
728.675 1094.39 733.758 1094.3 736.234 1093.93 cv
732.548 1090.6 718.5 1087.5 702.859 1088.11 cv
687.802 1088.7 672.158 1090.96 661.01 1094.17 cv
654.727 1095.98 588.84 1085.03 570.729 1081.96 cv
cp
559.869 1124.1 mo
567.21 1077.07 li
569.325 1077.43 li
601.857 1082.97 655.194 1091.31 659.844 1090.1 cv
671.296 1086.81 687.317 1084.48 702.694 1083.88 cv
718.949 1083.25 734.749 1086.38 739.451 1091.16 cv
740.911 1092.64 741.154 1094.08 741.102 1095.03 cv
740.915 1098.42 736.206 1098.49 724.829 1098.68 cv
718.446 1098.79 710.501 1098.92 707.688 1100.05 cv
704.74 1101.24 701.828 1102.44 698.961 1103.63 cv
683.936 1109.85 669.746 1115.73 658.347 1114.75 cv
658.347 1114.75 li
640.601 1113.23 563.458 1123.61 562.681 1123.72 cv
559.869 1124.1 li
cp
.054902 .145098 .286275 rgb
f
669.393 1101.64 mo
711.836 1095.39 li
709.877 1096.02 li
709.877 1096.02 750.175 1102.7 690.839 1107.6 cv
677.232 1108.72 666.229 1107.43 666.934 1108.84 cv
667.328 1108.06 li
669.393 1101.64 li
cp
1 1 1 rgb
f
675.143 1112.46 mo
674.105 1112.46 673.2 1111.69 673.05 1110.64 cv
672.886 1109.48 673.692 1108.41 674.849 1108.25 cv
679.741 1107.55 684.167 1106.52 688.071 1105.62 cv
692.837 1104.51 696.953 1103.55 700.548 1103.51 cv
704.909 1103.45 717.893 1103.29 720.153 1101.75 cv
720.137 1101.72 720.119 1101.68 720.096 1101.64 cv
719.138 1100.32 710.708 1097.09 702.33 1097.03 cv
692.737 1096.94 684.111 1100.22 684.024 1100.25 cv
682.932 1100.67 681.711 1100.12 681.293 1099.03 cv
680.877 1097.94 681.422 1096.72 682.513 1096.3 cv
682.891 1096.16 691.784 1092.8 702.035 1092.8 cv
702.143 1092.8 702.25 1092.8 702.359 1092.8 cv
710.429 1092.86 721.798 1095.91 723.814 1099.62 cv
724.842 1101.51 724.46 1102.92 723.959 1103.78 cv
722.276 1106.65 717.037 1107.54 700.6 1107.74 cv
697.463 1107.78 693.555 1108.69 689.03 1109.74 cv
685.04 1110.67 680.518 1111.72 675.441 1112.43 cv
675.341 1112.45 675.241 1112.46 675.143 1112.46 cv
cp
.054902 .145098 .286275 rgb
f
524.027 873.546 mo
553.079 859.111 li
600.637 890.751 li
579.968 907.205 li
524.027 873.546 li
cp
.886275 .278431 .294118 rgb
f
657.759 903.109 mo
644.045 881.016 li
600.637 890.751 li
611.905 912.1 li
657.759 903.109 li
cp
f
643.041 883.41 mo
654.346 901.622 li
613.042 909.722 li
603.799 892.21 li
643.041 883.41 li
cp
579.799 904.635 mo
528.425 873.724 li
552.925 861.55 li
597.047 890.904 li
579.799 904.635 li
cp
661.172 904.597 mo
645.05 878.623 li
601.056 888.489 li
553.232 856.672 li
519.628 873.369 li
580.136 909.775 li
598.461 895.187 li
596.458 928.217 583.611 1130.95 567.147 1184.15 cv
566.836 1185.16 567.399 1186.23 568.406 1186.54 cv
568.594 1186.6 568.784 1186.62 568.97 1186.62 cv
569.785 1186.62 570.539 1186.1 570.792 1185.28 cv
586.986 1132.95 599.646 938.109 602.106 898.069 cv
610.769 914.479 li
661.172 904.597 li
cp
.054902 .145098 .286275 rgb
f
453.822 1045.66 mo
598.933 1071.65 li
582.031 1121.62 li
582.031 1121.62 481.534 1124.53 460.019 1121.62 cv
419.968 1116.21 377.149 1080.93 377.149 1080.93 cv
453.822 1045.66 li
cp
.886275 .278431 .294118 rgb
f
582.92 1120.96 mo
582.711 1120.96 582.498 1120.93 582.288 1120.86 cv
581.256 1120.51 580.702 1119.39 581.052 1118.36 cv
596.314 1073.23 li
462.983 1052.09 li
500.901 988.234 li
501.458 987.298 502.667 986.989 503.605 987.545 cv
504.542 988.102 504.851 989.312 504.294 990.248 cv
469.346 1049.11 li
601.551 1070.07 li
584.79 1119.62 li
584.511 1120.45 583.743 1120.96 582.92 1120.96 cv
cp
.054902 .145098 .286275 rgb
f
1660.54 1137.65 mo
463.549 1136.04 li
456.949 1136.04 451.549 1130.64 451.549 1124.04 cv
451.549 1122.64 li
451.549 1116.04 456.949 1110.64 463.549 1110.64 cv
1660.54 1112.26 li
1667.14 1112.26 1672.54 1117.66 1672.54 1124.26 cv
1672.54 1125.65 li
1672.54 1132.25 1667.14 1137.65 1660.54 1137.65 cv
cp
.921569 .956863 .996078 rgb
f
463.547 1112.14 mo
457.759 1112.14 453.049 1116.85 453.049 1122.64 cv
453.049 1124.04 li
453.049 1129.83 457.759 1134.54 463.549 1134.54 cv
1660.54 1136.15 li
1666.33 1136.15 1671.04 1131.44 1671.04 1125.65 cv
1671.04 1124.26 li
1671.04 1118.47 1666.33 1113.76 1660.54 1113.76 cv
463.547 1112.14 li
cp
1660.54 1139.15 mo
1660.54 1139.15 li
463.547 1137.54 li
456.105 1137.54 450.049 1131.48 450.049 1124.04 cv
450.049 1122.64 li
450.049 1115.2 456.105 1109.14 463.549 1109.14 cv
1660.54 1110.76 li
1667.99 1110.76 1674.04 1116.81 1674.04 1124.26 cv
1674.04 1125.65 li
1674.04 1133.1 1667.99 1139.15 1660.54 1139.15 cv
cp
.054902 .145098 .286275 rgb
f
422.705 1612.48 mo
397.301 1612.48 li
514.412 1136.23 li
539.816 1136.23 li
422.705 1612.48 li
cp
.921569 .956863 .996078 rgb
f
399.101 1611.07 mo
421.599 1611.07 li
538.016 1137.64 li
515.519 1137.64 li
399.101 1611.07 li
cp
423.812 1613.89 mo
395.5 1613.89 li
395.93 1612.14 li
513.306 1134.82 li
541.617 1134.82 li
541.187 1136.57 li
423.812 1613.89 li
cp
.054902 .145098 .286275 rgb
f
1656.3 1612.48 mo
1681.7 1612.48 li
1611.65 1137.65 li
1586.25 1137.65 li
1656.3 1612.48 li
cp
.921569 .956863 .996078 rgb
f
1657.59 1610.98 mo
1679.96 1610.98 li
1610.35 1139.15 li
1587.98 1139.15 li
1657.59 1610.98 li
cp
1683.44 1613.98 mo
1655 1613.98 li
1654.81 1612.7 li
1584.51 1136.15 li
1612.94 1136.15 li
1613.13 1137.44 li
1683.44 1613.98 li
cp
.054902 .145098 .286275 rgb
f
898.263 559.023 mo
898.263 612.42 854.976 655.707 801.579 655.707 cv
748.182 655.707 704.895 612.42 704.895 559.023 cv
704.895 505.626 748.182 462.339 801.579 462.339 cv
854.976 462.339 898.263 505.626 898.263 559.023 cv
cp
.631373 .772549 .886275 rgb
f
801.701 560.731 mo
743.885 534.01 li
743.133 533.663 742.805 532.771 743.152 532.019 cv
743.5 531.267 744.39 530.941 745.144 531.287 cv
801.458 557.314 li
866.657 515.079 li
867.352 514.626 868.281 514.826 868.731 515.522 cv
869.182 516.217 868.983 517.146 868.288 517.596 cv
801.701 560.731 li
cp
.054902 .145098 .286275 rgb
f
1000.98 956.004 mo
966.087 1097.29 li
762.289 1097.29 li
803.549 956.004 li
1000.98 956.004 li
cp
.921569 .956863 .996078 rgb
f
764.29 1095.79 mo
964.913 1095.79 li
999.067 957.505 li
804.673 957.505 li
764.29 1095.79 li
cp
967.262 1098.79 mo
760.289 1098.79 li
802.424 954.505 li
1002.9 954.505 li
1002.44 956.364 li
967.262 1098.79 li
cp
.054902 .145098 .286275 rgb
f
701.208 1110.64 mo
965.905 1110.64 li
965.905 1097.29 li
701.208 1097.29 li
701.208 1110.64 li
cp
.631373 .772549 .886275 rgb
f
702.708 1109.14 mo
964.405 1109.14 li
964.405 1098.79 li
702.708 1098.79 li
702.708 1109.14 li
cp
967.405 1112.14 mo
699.708 1112.14 li
699.708 1095.79 li
967.405 1095.79 li
967.405 1112.14 li
cp
.054902 .145098 .286275 rgb
f
881.539 1013.75 mo
873.876 1013.75 867.166 1021.18 866.335 1030.86 cv
865.911 1035.81 867.072 1040.58 869.606 1044.3 cv
872.075 1047.93 875.557 1050.11 879.411 1050.44 cv
887.476 1051.11 894.764 1043.47 895.63 1033.37 cv
896.497 1023.26 890.631 1014.48 882.554 1013.79 cv
882.215 1013.76 881.875 1013.75 881.539 1013.75 cv
cp
880.42 1053.48 mo
880 1053.48 879.579 1053.46 879.154 1053.42 cv
874.385 1053.02 870.113 1050.38 867.127 1045.99 cv
864.206 1041.7 862.863 1036.24 863.346 1030.6 cv
864.354 1018.85 873.068 1009.95 882.811 1010.8 cv
892.536 1011.63 899.627 1021.87 898.62 1033.63 cv
897.655 1044.86 889.625 1053.48 880.42 1053.48 cv
cp
f
1238.19 1110.64 mo
1238.19 1110.64 li
1213.89 1110.64 1194.19 1090.94 1194.19 1066.64 cv
1194.19 1039.94 li
1282.19 1039.94 li
1282.19 1066.64 li
1282.19 1090.94 1262.49 1110.64 1238.19 1110.64 cv
cp
.886275 .278431 .294118 rgb
f
1272.68 1095.5 mo
1272.04 1095.5 1271.4 1095.48 1270.75 1095.44 cv
1270.96 1092.44 li
1280.56 1093.1 1289.29 1088.3 1294.94 1079.32 cv
1299.91 1071.4 1301.29 1061.72 1298.22 1056.31 cv
1297.12 1054.37 1295.63 1053.27 1293.66 1052.94 cv
1287.55 1051.92 1278.24 1058.69 1275.18 1061.39 cv
1273.2 1059.14 li
1273.69 1058.7 1285.39 1048.52 1294.16 1049.98 cv
1297.03 1050.47 1299.28 1052.09 1300.83 1054.83 cv
1304.47 1061.25 1303.09 1071.97 1297.48 1080.91 cv
1291.61 1090.26 1282.65 1095.5 1272.68 1095.5 cv
cp
f
1223.52 1097.89 mo
1223.31 1097.89 1223.1 1097.83 1222.9 1097.73 cv
1203.07 1086.79 1205.46 1053.29 1205.58 1051.87 cv
1205.63 1051.16 1206.27 1050.65 1206.95 1050.69 cv
1207.66 1050.74 1208.19 1051.36 1208.13 1052.07 cv
1208.11 1052.4 1205.76 1085.34 1224.14 1095.48 cv
1224.76 1095.82 1224.99 1096.6 1224.64 1097.22 cv
1224.41 1097.65 1223.97 1097.89 1223.52 1097.89 cv
cp
1 1 1 rgb
f
1216.32 1032.91 mo
1215.94 1032.91 1215.55 1032.76 1215.26 1032.46 cv
1214.67 1031.88 1214.68 1030.93 1215.27 1030.34 cv
1223.05 1022.62 1225.29 1020 1225.16 1011.18 cv
1225.04 1003.24 1221.37 999.869 1217.5 996.305 cv
1214.46 993.516 1211.32 990.631 1209.73 985.613 cv
1205.95 973.729 1220.64 962.668 1221.26 962.203 cv
1221.93 961.708 1222.87 961.851 1223.36 962.515 cv
1223.85 963.18 1223.72 964.118 1223.05 964.612 cv
1222.92 964.714 1209.46 974.86 1212.59 984.703 cv
1213.94 988.962 1216.65 991.456 1219.53 994.096 cv
1223.7 997.934 1228.02 1001.9 1228.16 1011.13 cv
1228.31 1021.11 1225.51 1024.41 1217.38 1032.47 cv
1217.09 1032.76 1216.71 1032.91 1216.32 1032.91 cv
cp
.054902 .145098 .286275 rgb
f
1255.42 1032.91 mo
1255.04 1032.91 1254.65 1032.76 1254.36 1032.46 cv
1253.78 1031.88 1253.78 1030.93 1254.37 1030.34 cv
1262.15 1022.62 1264.39 1020 1264.26 1011.18 cv
1264.14 1003.24 1260.47 999.869 1256.6 996.305 cv
1253.56 993.516 1250.42 990.631 1248.83 985.613 cv
1245.05 973.729 1259.74 962.668 1260.36 962.203 cv
1261.03 961.708 1261.97 961.851 1262.46 962.515 cv
1262.96 963.18 1262.82 964.118 1262.15 964.612 cv
1262.02 964.714 1248.56 974.86 1251.69 984.703 cv
1253.04 988.962 1255.75 991.456 1258.63 994.096 cv
1262.8 997.934 1267.12 1001.9 1267.26 1011.13 cv
1267.41 1021.11 1264.61 1024.41 1256.48 1032.47 cv
1256.19 1032.76 1255.81 1032.91 1255.42 1032.91 cv
cp
f
1234.52 1024.98 mo
1234.14 1024.98 1233.75 1024.83 1233.46 1024.54 cv
1232.87 1023.95 1232.88 1023 1233.46 1022.42 cv
1241.25 1014.69 1243.49 1012.07 1243.35 1003.25 cv
1243.23 995.309 1239.57 991.941 1235.69 988.377 cv
1232.66 985.588 1229.52 982.703 1227.92 977.686 cv
1224.14 965.801 1238.83 954.74 1239.46 954.275 cv
1240.13 953.781 1241.06 953.924 1241.56 954.587 cv
1242.05 955.252 1241.91 956.19 1241.25 956.685 cv
1241.11 956.786 1227.65 966.933 1230.78 976.775 cv
1232.14 981.034 1234.85 983.528 1237.72 986.168 cv
1241.9 990.006 1246.21 993.974 1246.35 1003.21 cv
1246.51 1013.18 1243.7 1016.48 1235.58 1024.54 cv
1235.29 1024.83 1234.9 1024.98 1234.52 1024.98 cv
cp
f
1303.83 1524.02 mo
1308.94 1573.59 li
1352.32 1573.59 li
1358.93 1520.52 li
1303.83 1524.02 li
cp
1 1 1 rgb
f
1310.4 1571.97 mo
1350.89 1571.97 li
1357.08 1522.27 li
1305.62 1525.54 li
1310.4 1571.97 li
cp
1353.75 1575.21 mo
1307.48 1575.21 li
1302.05 1522.51 li
1360.78 1518.78 li
1353.75 1575.21 li
cp
.054902 .145098 .286275 rgb
f
1306.56 1571.7 mo
1306.56 1571.7 1243.86 1591.6 1241.7 1607.99 cv
1354.12 1607.99 li
1354.12 1571.7 li
1306.56 1571.7 li
cp
.886275 .278431 .294118 rgb
f
1443.92 1518.65 mo
1433.57 1572.57 li
1476.95 1572.57 li
1484.73 1520.31 li
1443.92 1518.65 li
cp
1 1 1 rgb
f
1435.54 1570.95 mo
1475.56 1570.95 li
1482.86 1521.86 li
1445.25 1520.32 li
1435.54 1570.95 li
cp
1478.35 1574.2 mo
1431.61 1574.2 li
1442.59 1516.97 li
1486.6 1518.77 li
1478.35 1574.2 li
cp
.054902 .145098 .286275 rgb
f
1431.19 1570.68 mo
1431.19 1570.68 1368.5 1590.58 1366.33 1606.98 cv
1478.75 1606.98 li
1478.75 1570.68 li
1431.19 1570.68 li
cp
.886275 .278431 .294118 rgb
f
1361.06 1602.76 mo
1361.06 1612.37 li
1480.51 1612.37 li
1480.51 1601.38 li
1361.06 1602.76 li
cp
.054902 .145098 .286275 rgb
f
1357.63 1600.97 mo
1357.63 1612.37 li
1238.19 1612.37 li
1238.19 1600.14 li
1357.63 1600.97 li
cp
f
1455.69 1602.87 mo
1454.87 1602.87 1454.21 1602.21 1454.21 1601.38 cv
1454.21 1579.6 li
1454.21 1578.78 1454.87 1578.12 1455.69 1578.12 cv
1456.52 1578.12 1457.18 1578.78 1457.18 1579.6 cv
1457.18 1601.38 li
1457.18 1602.21 1456.52 1602.87 1455.69 1602.87 cv
cp
f
1331.06 1603.89 mo
1330.24 1603.89 1329.57 1603.22 1329.57 1602.4 cv
1329.57 1580.62 li
1329.57 1579.79 1330.24 1579.13 1331.06 1579.13 cv
1331.88 1579.13 1332.55 1579.79 1332.55 1580.62 cv
1332.55 1602.4 li
1332.55 1603.22 1331.88 1603.89 1331.06 1603.89 cv
cp
f
1503.98 1174.03 mo
1397.71 1274.1 li
1374.98 1540.92 li
1296.12 1542.88 li
1296.12 1542.88 1301.52 1267.62 1309.98 1241.82 cv
1318.98 1214.38 1451.27 1049.04 1451.27 1049.04 cv
1633.97 1026.65 li
1633.97 1026.65 1656.79 1099.95 1642.17 1135.4 cv
1627.54 1170.85 1493.65 1546.56 1493.65 1546.56 cv
1404.98 1541.99 li
1503.98 1174.03 li
cp
f
1504.98 1175.27 mo
1504.87 1175.27 1504.75 1175.26 1504.64 1175.23 cv
1503.9 1175.04 1503.46 1174.29 1503.65 1173.55 cv
1520.99 1106.88 li
1521.18 1106.15 1521.92 1105.71 1522.66 1105.9 cv
1523.4 1106.09 1523.84 1106.84 1523.65 1107.58 cv
1506.31 1174.24 li
1506.15 1174.86 1505.6 1175.27 1504.98 1175.27 cv
cp
.631373 .772549 .886275 rgb
f
1506.84 811.549 mo
1523.52 799.008 li
1541.15 809.436 li
1533.41 823.409 li
1564.88 1010.84 li
1542.65 1062.02 li
1516.05 1014.53 li
1517.67 824.226 li
1506.84 811.549 li
cp
.886275 .278431 .294118 rgb
f
1520.8 629.007 mo
1530.99 628.319 1555.7 626.33 1558.82 644.171 cv
1562.38 664.521 1563.52 691.29 1563.88 705.427 cv
1564.03 711.006 1560.06 715.843 1554.56 716.806 cv
1492.98 727.589 li
1487.34 728.577 1481.86 725.179 1480.24 719.687 cv
1474.77 701.201 1465.08 661.376 1466.26 654.961 cv
1470.3 633.134 1504.69 630.097 1520.8 629.007 cv
cp
.054902 .145098 .286275 rgb
f
1554.27 721.993 mo
1554.27 721.993 1560.85 769.966 1566.03 774.661 cv
1571.21 779.356 1595.47 787.862 1595.47 787.862 cv
1528.52 848.509 li
1475.23 809.909 li
1475.23 809.909 1497.56 795.071 1498.75 788.383 cv
1500.39 779.129 1491.7 732.949 1491.7 732.949 cv
1554.27 721.993 li
cp
1 1 1 rgb
f
1528.63 850.443 mo
1472.59 809.856 li
1474.4 808.656 li
1482.82 803.056 1496.48 792.529 1497.26 788.121 cv
1498.84 779.24 1490.31 733.687 1490.23 733.227 cv
1490.07 732.411 1490.61 731.624 1491.43 731.471 cv
1492.23 731.317 1493.03 731.854 1493.18 732.671 cv
1493.54 734.568 1501.9 779.229 1500.23 788.646 cv
1499.13 794.824 1483.49 806.075 1477.85 809.951 cv
1528.42 846.575 li
1592.6 788.431 li
1586.29 786.135 1569.43 779.774 1565.02 775.776 cv
1559.71 770.957 1553.89 730.299 1552.78 722.198 cv
1552.67 721.375 1553.24 720.616 1554.07 720.503 cv
1554.89 720.392 1555.65 720.965 1555.76 721.789 cv
1558.28 740.126 1563.56 770.394 1567.04 773.546 cv
1571.11 777.23 1583.04 786.479 1589.71 788.817 cv
1593.45 791.721 li
1528.63 850.443 li
cp
.054902 .145098 .286275 rgb
f
1532.29 742.362 mo
1515.18 747.444 1492.79 747.961 1485.68 742.969 cv
1481.51 740.042 1477.63 726.255 1474.42 710.313 cv
1474.33 709.853 1465.78 652.842 1465.78 652.842 cv
1543.89 639.164 li
1543.89 639.164 1546.75 656.409 1549.39 675.849 cv
1549.5 676.721 1550.53 677.12 1551.21 676.555 cv
1554.92 673.445 1560.27 670.498 1561.7 677.695 cv
1563.48 686.663 1556.41 693.673 1552.61 696.344 cv
1552.21 696.621 1552 697.089 1552.06 697.569 cv
1553.53 711.347 1554.29 723.353 1553.14 727.849 cv
1552.52 730.299 1550.89 732.527 1548.53 734.521 cv
1532.29 742.362 li
cp
1 1 1 rgb
f
1503.63 747.971 mo
1495.58 747.971 1488.57 746.831 1484.82 744.2 cv
1480.81 741.388 1476.93 730.401 1472.95 710.61 cv
1472.86 710.148 1466.3 666.448 1464.29 653.065 cv
1464.08 651.613 li
1545.13 637.42 li
1545.38 638.918 li
1545.41 639.088 1548.21 655.996 1550.78 674.958 cv
1554.25 672.191 1557.16 671.195 1559.43 671.996 cv
1561.33 672.667 1562.59 674.485 1563.17 677.402 cv
1564.88 686.004 1559.08 693.593 1553.56 697.512 cv
1555.33 713.995 1555.67 724.039 1554.6 728.221 cv
1553.92 730.878 1552.21 733.385 1549.5 735.67 cv
1548.87 736.207 1547.92 736.127 1547.38 735.492 cv
1546.84 734.857 1546.92 733.908 1547.56 733.372 cv
1549.78 731.499 1551.17 729.516 1551.69 727.477 cv
1552.35 724.876 1552.69 717.604 1550.56 697.73 cv
1550.45 696.706 1550.9 695.702 1551.75 695.112 cv
1552.81 694.363 1562.11 687.508 1560.22 677.988 cv
1559.98 676.75 1559.47 675.198 1558.43 674.833 cv
1557.17 674.39 1554.89 675.437 1552.17 677.708 cv
1551.44 678.321 1550.44 678.488 1549.54 678.144 cv
1548.66 677.8 1548.02 676.998 1547.9 676.051 cv
1545.74 660.123 1543.4 645.516 1542.65 640.908 cv
1467.49 654.07 li
1470.46 673.895 1475.76 709.225 1475.9 710.046 cv
1480.84 734.582 1484.69 740.435 1486.55 741.737 cv
1493.05 746.303 1515.07 745.906 1531.86 740.92 cv
1532.66 740.684 1533.5 741.136 1533.73 741.934 cv
1533.97 742.73 1533.51 743.567 1532.72 743.804 cv
1524.01 746.391 1513.1 747.971 1503.63 747.971 cv
cp
.054902 .145098 .286275 rgb
f
1489.19 695.917 mo
1488.15 695.917 1487.22 695.176 1487.02 694.115 cv
1486.68 692.287 li
1486.46 691.09 1487.25 689.939 1488.45 689.717 cv
1489.65 689.492 1490.8 690.284 1491.02 691.481 cv
1491.36 693.31 li
1491.58 694.507 1490.79 695.658 1489.59 695.88 cv
1489.46 695.905 1489.32 695.917 1489.19 695.917 cv
cp
f
1524.18 690.14 mo
1523.12 690.14 1522.18 689.374 1522 688.294 cv
1521.7 686.459 li
1521.5 685.258 1522.32 684.124 1523.52 683.925 cv
1524.73 683.729 1525.85 684.541 1526.05 685.742 cv
1526.35 687.576 li
1526.55 688.777 1525.74 689.912 1524.54 690.11 cv
1524.42 690.13 1524.29 690.14 1524.18 690.14 cv
cp
f
1515.01 676.681 mo
1514.43 676.681 1513.89 676.295 1513.73 675.708 cv
1513.54 675.003 1513.95 674.275 1514.66 674.082 cv
1515.1 673.962 1525.48 671.162 1531.48 673.652 cv
1532.16 673.933 1532.47 674.707 1532.19 675.381 cv
1531.91 676.055 1531.14 676.377 1530.46 676.096 cv
1525.3 673.951 1515.46 676.607 1515.36 676.634 cv
1515.24 676.666 1515.12 676.681 1515.01 676.681 cv
cp
f
1493.51 679.141 mo
1493.51 679.141 1487.26 677.018 1478.82 682.563 cv
1493.51 679.141 li
cp
1 1 1 rgb
f
1478.82 683.887 mo
1478.39 683.887 1477.96 683.676 1477.71 683.29 cv
1477.31 682.679 1477.48 681.859 1478.09 681.458 cv
1486.97 675.626 1493.65 677.793 1493.93 677.889 cv
1494.62 678.124 1494.99 678.875 1494.76 679.567 cv
1494.52 680.256 1493.78 680.626 1493.09 680.396 cv
1492.85 680.319 1487.28 678.592 1479.54 683.669 cv
1479.32 683.816 1479.07 683.887 1478.82 683.887 cv
cp
.054902 .145098 .286275 rgb
f
1506.74 709.761 mo
1506.72 709.761 1506.7 709.761 1506.67 709.76 cv
1505 709.696 1499.45 709.239 1498.26 706.044 cv
1497.37 703.643 1497.51 702.956 1499.2 694.552 cv
1499.56 692.745 1500 690.56 1500.52 687.897 cv
1500.7 686.981 1501.6 686.389 1502.5 686.564 cv
1503.42 686.744 1504.02 687.633 1503.84 688.549 cv
1503.31 691.217 1502.87 693.407 1502.51 695.218 cv
1500.87 703.366 1500.9 703.451 1501.43 704.866 cv
1501.65 705.46 1504.17 706.276 1506.81 706.382 cv
1507.74 706.419 1508.46 707.205 1508.43 708.137 cv
1508.39 709.047 1507.64 709.761 1506.74 709.761 cv
cp
f
1551.96 696.126 mo
1551.96 696.126 1550.05 698.834 1546.02 704.441 cv
1541.38 710.914 1489.02 716.986 1485.05 715.781 cv
1476.31 713.126 1477.15 705.731 1474.25 706.867 cv
1470.65 708.275 1481.2 744.271 1485.97 748.755 cv
1490.74 753.24 1528.7 748.445 1548.18 740.777 cv
1564.37 734.409 1551.96 696.126 1551.96 696.126 cv
cp
f
1544.71 643.197 mo
1544.71 643.197 1489.35 670.254 1459.39 654.362 cv
1429.43 638.47 1471.19 630.291 1496.83 628.443 cv
1522.48 626.594 1558.71 625.513 1544.71 643.197 cv
cp
f
1350.71 876.739 mo
1373.22 878.375 1476.99 796.684 1489.57 796.896 cv
1490.62 796.915 1522.72 800.145 1523.45 799.679 cv
1530.72 795.092 1536.34 794.904 1540.58 798.197 cv
1556.97 793.153 1579.51 785.128 1580.55 785.318 cv
1627.02 793.808 1679.2 923.299 1682.18 932.174 cv
1692.89 964.141 1652.97 980.83 1652.97 980.83 cv
1652.61 984.427 1665.49 1075.24 1665.49 1075.24 cv
1519.14 1080.05 li
1519.14 1080.05 li
1421.26 1084.42 li
1421.26 1084.42 1432.32 926.379 1429.21 880.525 cv
1427.68 857.961 1391.68 976.241 1359.37 929.405 cv
1319.47 871.547 1333.89 875.517 1350.71 876.739 cv
cp
1 1 1 rgb
f
1580.59 786.847 mo
1580.59 786.847 li
1580.59 786.847 li
cp
1427.98 876.089 mo
1428.15 876.089 1428.32 876.108 1428.49 876.146 cv
1430.48 876.581 1430.67 879.271 1430.74 880.42 cv
1433.65 923.278 1424.09 1065.49 1422.91 1082.81 cv
1519.07 1078.51 li
1663.73 1073.76 li
1661.63 1058.9 1651.09 984.186 1651.44 980.676 cv
1651.54 979.767 li
1652.38 979.413 li
1653.95 978.753 1690.85 962.891 1680.72 932.663 cv
1679.57 929.221 1665.79 894.314 1646.33 859.349 cv
1621.92 815.48 1599.15 790.426 1580.47 786.866 cv
1579.13 787.129 1572.26 789.427 1565.61 791.652 cv
1558.14 794.152 1548.83 797.265 1541.03 799.665 cv
1540.27 799.9 li
1539.64 799.41 li
1535.75 796.394 1530.73 796.906 1524.27 800.978 cv
1523.56 801.424 1523.3 801.593 1496.24 799.045 cv
1492.82 798.723 1489.87 798.446 1489.53 798.432 cv
1489.51 798.432 1489.5 798.432 1489.49 798.432 cv
1484.65 798.432 1461.65 813.865 1439.41 828.792 cv
1404.17 852.449 1364.19 879.264 1350.6 878.271 cv
1349.77 878.211 1348.96 878.145 1348.15 878.079 cv
1342.5 877.621 1337.16 877.188 1335.74 879.647 cv
1333.03 884.329 1341.18 900.319 1360.64 928.532 cv
1365.6 935.725 1370.91 939.235 1376.45 938.926 cv
1391.68 938.114 1407.26 909.418 1416.56 892.272 cv
1423.04 880.348 1425.48 876.089 1427.98 876.089 cv
cp
1419.6 1086.03 mo
1419.72 1084.31 li
1419.83 1082.73 1430.75 925.854 1427.68 880.628 cv
1427.65 880.246 1427.62 879.942 1427.58 879.702 cv
1425.81 881.682 1422.36 888.041 1419.26 893.738 cv
1409.03 912.595 1393.56 941.091 1376.62 941.994 cv
1369.93 942.343 1363.72 938.407 1358.11 930.276 cv
1331.72 892.023 1330.49 882.598 1333.08 878.11 cv
1335.47 873.967 1341.46 874.453 1348.4 875.017 cv
1349.2 875.082 1350.01 875.147 1350.82 875.207 cv
1350.82 875.207 li
1351.02 875.221 1351.23 875.229 1351.45 875.229 cv
1364.72 875.23 1405.13 848.105 1437.7 826.241 cv
1466.2 807.111 1483.99 795.36 1489.53 795.36 cv
1489.55 795.36 1489.57 795.36 1489.59 795.36 cv
1489.92 795.366 1491.55 795.518 1496.52 795.986 cv
1504.36 796.725 1520.41 798.216 1522.93 798.193 cv
1530.04 793.793 1536.07 793.229 1540.86 796.502 cv
1548.47 794.146 1557.41 791.156 1564.64 788.738 cv
1578.86 783.979 1580.02 783.662 1580.82 783.807 cv
1600.75 787.447 1623.69 812.361 1649.02 857.854 cv
1668.9 893.576 1682.41 928.04 1683.63 931.687 cv
1693.71 961.755 1660.68 978.915 1654.53 981.81 cv
1655.07 989.407 1662.14 1040.68 1667.01 1075.03 cv
1667.25 1076.72 li
1519.19 1081.58 li
1419.6 1086.03 li
cp
.054902 .145098 .286275 rgb
f
1523.45 798.381 mo
1516.59 1064.62 li
1523.45 798.381 li
cp
.886275 .278431 .294118 rgb
f
1516.59 1066.06 mo
1516.58 1066.06 1516.56 1066.06 1516.55 1066.06 cv
1515.75 1066.04 1515.12 1065.38 1515.14 1064.58 cv
1522 798.344 li
1522.02 797.547 1522.7 796.902 1523.48 796.938 cv
1524.28 796.958 1524.91 797.621 1524.89 798.418 cv
1518.03 1064.66 li
1518.01 1065.44 1517.37 1066.06 1516.59 1066.06 cv
cp
.054902 .145098 .286275 rgb
f
1506.88 812.15 mo
1523.57 799.609 li
1542.46 808.259 li
1530.62 824.936 li
1542.55 991.838 li
1520.32 1043.01 li
1493.72 995.526 li
1517.72 824.828 li
1506.88 812.15 li
cp
.886275 .278431 .294118 rgb
f
1574.71 871.32 mo
1574.71 871.32 1596.48 919.454 1591.48 928.017 cv
1586.48 936.579 1483.75 945.824 1483.75 945.824 cv
1489.34 988.499 li
1489.34 988.499 1589.19 998.751 1644.03 979.53 cv
1574.71 871.32 li
cp
1 1 1 rgb
f
1549.03 992.602 mo
1516.09 992.602 1489.71 989.968 1489.2 989.915 cv
1488.08 989.8 li
1482.15 944.54 li
1483.62 944.407 li
1483.88 944.384 1509.59 942.059 1535.57 938.719 cv
1583.74 932.526 1589.6 928.412 1590.25 927.299 cv
1593.63 921.523 1581.72 890.258 1573.42 871.906 cv
1573.09 871.19 1573.41 870.347 1574.13 870.023 cv
1574.84 869.701 1575.69 870.017 1576.01 870.733 cv
1578.27 875.729 1597.93 919.795 1592.71 928.734 cv
1591.76 930.363 1589.23 934.69 1535.92 941.543 cv
1513.46 944.431 1491.2 946.562 1485.35 947.105 cv
1490.61 987.19 li
1501.74 988.229 1592.75 995.996 1643.56 978.188 cv
1644.29 977.928 1645.11 978.318 1645.37 979.06 cv
1645.63 979.801 1645.24 980.613 1644.5 980.873 cv
1617.88 990.202 1580.47 992.602 1549.03 992.602 cv
cp
.054902 .145098 .286275 rgb
f
1523.45 798.381 mo
1555.35 814.955 li
1593.98 786.413 li
1573.08 778.124 li
1523.45 798.381 li
cp
1 1 1 rgb
f
1523.45 798.381 mo
1502.27 817.942 li
1472.14 805.474 li
1483.32 792.915 li
1523.45 798.381 li
cp
f
1527.03 798.545 mo
1573.08 779.745 li
1590.91 786.813 li
1555.21 813.187 li
1527.03 798.545 li
cp
1500.18 816.184 mo
1473.61 805.924 li
1484.03 794.919 li
1519.6 799.441 li
1500.18 816.184 li
cp
1597.05 786.013 mo
1573.07 776.502 li
1523.19 796.86 li
1482.76 791.721 li
1468.21 807.092 li
1500.85 819.7 li
1523.55 800.131 li
1555.49 816.722 li
1597.05 786.013 li
cp
.054902 .145098 .286275 rgb
f
1496.71 851.209 mo
1497.35 860.305 li
1463.75 862.722 li
1463.1 853.598 li
1496.71 851.209 li
cp
1 1 1 rgb
f
1464.71 854.992 mo
1465.14 861.114 li
1495.75 858.912 li
1495.31 852.816 li
1464.71 854.992 li
cp
1462.35 864.331 mo
1461.49 852.204 li
1498.1 849.602 li
1498.96 861.697 li
1462.35 864.331 li
cp
.054902 .145098 .286275 rgb
f
1271.41 821.48 mo
1306.31 962.764 li
1510.11 962.764 li
1468.85 821.48 li
1271.41 821.48 li
cp
.921569 .956863 .996078 rgb
f
1307.48 961.264 mo
1508.11 961.264 li
1467.72 822.98 li
1273.33 822.98 li
1307.48 961.264 li
cp
1512.11 964.264 mo
1305.13 964.264 li
1304.85 963.123 li
1269.5 819.98 li
1469.97 819.98 li
1470.29 821.06 li
1512.11 964.264 li
cp
.054902 .145098 .286275 rgb
f
1571.19 976.118 mo
1306.49 976.118 li
1306.49 962.764 li
1571.19 962.764 li
1571.19 976.118 li
cp
.631373 .772549 .886275 rgb
f
1307.99 974.617 mo
1569.69 974.617 li
1569.69 964.264 li
1307.99 964.264 li
1307.99 974.617 li
cp
1572.69 977.617 mo
1304.99 977.617 li
1304.99 961.264 li
1572.69 961.264 li
1572.69 977.617 li
cp
.054902 .145098 .286275 rgb
f
1390.86 879.221 mo
1390.52 879.221 1390.18 879.235 1389.84 879.265 cv
1381.77 879.957 1375.9 888.741 1376.77 898.845 cv
1377.63 908.948 1384.89 916.584 1392.99 915.912 cv
1396.84 915.581 1400.32 913.403 1402.79 909.778 cv
1405.32 906.059 1406.49 901.283 1406.06 896.332 cv
1406.06 896.332 li
1405.64 891.382 1403.68 886.874 1400.55 883.639 cv
1397.77 880.766 1394.36 879.221 1390.86 879.221 cv
cp
1391.98 918.955 mo
1382.77 918.955 1374.74 910.341 1373.78 899.101 cv
1372.77 887.349 1379.86 877.109 1389.59 876.275 cv
1394.35 875.87 1399.01 877.74 1402.7 881.553 cv
1406.31 885.281 1408.57 890.439 1409.05 896.076 cv
1409.05 896.076 li
1409.53 901.712 1408.19 907.179 1405.27 911.468 cv
1402.28 915.852 1398.01 918.491 1393.24 918.9 cv
1392.82 918.938 1392.4 918.955 1391.98 918.955 cv
cp
f
1348.2 979.301 mo
1348.2 979.301 1344.45 954.517 1339.08 953.263 cv
1333.7 952.008 1335.43 975.304 1334.9 975.415 cv
1334.05 975.594 1334.49 948.093 1329.52 946.512 cv
1324.54 944.932 1325.17 972.007 1324.69 971.947 cv
1323.98 971.858 1325.45 954.527 1320.82 950.854 cv
1316.18 947.179 1318.17 969.654 1317.25 969.294 cv
1316.65 969.056 1318.79 954.19 1314.08 953.398 cv
1311.15 952.905 1307.73 970.329 1307.73 970.329 cv
1307.73 970.329 1305.79 981.428 1317.93 983.992 cv
1321.11 984.663 1344.35 990.304 1348.2 979.301 cv
cp
1 1 1 rgb
f
1314.06 954.835 mo
1312.81 955.99 1310.59 963.019 1309.1 970.598 cv
1309.04 970.965 1307.58 980.382 1318.22 982.628 cv
1318.77 982.747 li
1334.51 986.194 1344.42 984.916 1346.76 979.151 cv
1345.01 967.775 1341.48 955.256 1338.76 954.62 cv
1338.65 954.597 1338.62 954.604 1338.53 954.674 cv
1336.39 956.373 1336.41 968.142 1336.42 972.01 cv
1336.42 976.007 1336.42 976.52 1335.19 976.779 cv
1334.56 976.911 li
1334.02 976.513 li
1333.3 975.964 1333.25 975.425 1332.92 969.766 cv
1332.11 955.869 1330.83 948.498 1329.13 947.854 cv
1328.14 948.486 1326.86 952.586 1326.33 968.228 cv
1326.18 972.435 1326.18 972.515 1325.61 973.004 cv
1325.14 973.402 li
1324.52 973.329 li
1323.12 973.154 1323.1 972.256 1323.03 968.476 cv
1322.95 964.217 1322.77 954.273 1319.99 951.979 cv
1318.98 953.733 1318.96 961.532 1318.95 964.567 cv
1318.93 969.163 1318.93 969.87 1318.09 970.44 cv
1317.48 970.854 li
1316.75 970.593 li
1315.67 970.172 1315.69 969.398 1315.78 966.522 cv
1315.99 959.34 1315.41 955.413 1314.06 954.835 cv
cp
1333.65 987.43 mo
1329.56 987.43 1324.48 986.852 1318.17 985.471 cv
1317.64 985.356 li
1304.34 982.547 1306.34 970.213 1306.36 970.089 cv
1310.04 951.299 1313.25 951.844 1314.31 952.023 cv
1315.33 952.195 1316.11 952.742 1316.72 953.546 cv
1317.11 951.189 1317.78 949.811 1318.89 949.278 cv
1319.4 949.034 1320.43 948.771 1321.68 949.761 cv
1322.95 950.769 1323.83 952.482 1324.43 954.614 cv
1325.03 949.806 1325.98 946.673 1327.57 945.554 cv
1328.28 945.054 1329.12 944.925 1329.94 945.183 cv
1332.4 945.966 1333.75 949.887 1334.63 956.794 cv
1335.1 954.803 1335.79 953.287 1336.79 952.491 cv
1337.55 951.888 1338.45 951.687 1339.39 951.905 cv
1345.24 953.269 1348.66 973.06 1349.57 979.093 cv
1349.63 979.435 li
1349.51 979.761 li
1348.17 983.599 1344.19 987.43 1333.65 987.43 cv
cp
.054902 .145098 .286275 rgb
f
1499.72 722.851 mo
1498.79 724.108 1499.86 728.953 1504.23 728.271 cv
1515.45 726.523 1524.99 717.452 1522.33 718.335 cv
1521.29 718.681 1514.25 721.087 1509.53 722.116 cv
1503.1 723.516 1500.77 721.423 1499.72 722.851 cv
cp
1 1 1 rgb
f
1662 1380.23 mo
1703 1313.23 li
1775 1346.73 li
1766.9 1401.23 li
1662 1380.23 li
cp
.823529 .921569 .988235 rgb
f
1664.4 1379.18 mo
1765.65 1399.45 li
1773.35 1347.62 li
1703.58 1315.16 li
1664.4 1379.18 li
cp
1768.15 1403.01 mo
1659.6 1381.28 li
1702.42 1311.31 li
1776.65 1345.84 li
1768.15 1403.01 li
cp
.054902 .145098 .286275 rgb
f
1573.58 1381.32 mo
1587.49 1339.38 li
1685.14 1369.74 li
1665.88 1407.68 li
1573.58 1381.32 li
cp
.823529 .921569 .988235 rgb
f
1575.5 1380.31 mo
1665.1 1405.9 li
1683 1370.64 li
1588.45 1341.25 li
1575.5 1380.31 li
cp
1666.66 1409.47 mo
1571.66 1382.33 li
1586.53 1337.51 li
1687.28 1368.83 li
1666.66 1409.47 li
cp
.054902 .145098 .286275 rgb
f
1561.18 1374.35 mo
1783.9 1374.35 li
1757.23 1612.41 li
1586.52 1612.92 li
1561.18 1374.35 li
cp
.180392 .419608 .6 rgb
f
1847.88 1613.98 mo
82.9834 1613.98 li
82.1548 1613.98 81.4834 1613.31 81.4834 1612.48 cv
81.4834 1611.65 82.1548 1610.98 82.9834 1610.98 cv
1847.88 1610.98 li
1848.71 1610.98 1849.38 1611.65 1849.38 1612.48 cv
1849.38 1613.31 1848.71 1613.98 1847.88 1613.98 cv
cp
.054902 .145098 .286275 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.0
%%For: (\702\750\762\740\753\750\751 \702\750\752\762\756\760\756\742\750\767) ()
%%Title: (Three man having business meeting in the office.eps)
%%CreationDate: 2/5/2020 4:04 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6bH>5CFsT%"T`3oE!<K$O.s9io,,/lj\<":;)(J4VP.G3q%3e6<9%bDV6l%5^4RuumZiNr2GiXEGT!mC8iC:H@?c`'gn$Ua'
%ER)+_/@&A/%rCfgR<eKhn$?NEI]U6BGCJ`CobX6Lo]jnth7`e@IWVpPr%N'DG/HPQmsjeMIcm?:qT6pQJ&OS^Y<VsEPF%njr[2Vj
%J,&Tt5JM^Hn`r+us3]*i04'$PoA^WOZerF*q9NDsr:0*f^Ua7:`J8qYa5$Y[qr%"pa"JNA^\Qs0k;OhSgF,elK=`dCIJhJ7IIYEd
%]mTFHRsehib6L/qTDdP?B4o6!.ISAV_'^T+l-%C;\,3LinqMVaqfh4M_*-iA#Cl:;IsLpPDu]4Zs6K&:r:7ULq[[WF_qY4_m6CNl
%hi0/!H2ZDD0AcWocen>Qq#-i!r8b2F?[Vj9D^!ePT!b%0qVToL35?Ss484u2D-O1:qeH/tV,_m'0qQX[kKOO,rG-1#T(I8u0E:Ij
%bJ4))bs-RNihMiYr2nehq>@.or_%SEWE-Vkroq2oaVQ&6I.M!C^A?WV@&Ii+[Jfmn7k[*8,E>\bIf+e9Ma-J$e+`Xd(N4crnoO^!
%Y<W$Go2i+[rR&kl=0YQmLG+,H&mmWo7K3(gQ_49Al[R3LrS_)L>iTFC<qi*5lkX66'\H3f?_tIhRuT`3j>[gu'3FDmS:>!TplF=F
%qUqoFJ$du+I[H#M9`O&Fhn8gLq"R#0%/n"tGrAFtchQDdg"sO-T>1:\*l8W[rl6BDg7J9<VmuHl:HuF?r<Y[.c`qciddFtolf6S]
%oA:T.r10D<MpM<0./;_]?J>La5/iAns1LYFn&>T^o'mOibMRg@qMW]!i7#GirVc3`i:`qtJ+`BpT>1<no@IpI"+PFaa+*ccCu]_X
%Idi[MkJ&SFp6VW0s*N2oD3M'g-F_mAN8NOV(Ua,ndW&[6Fu+Em5/#^]fCb`KGkKbYI`9Rb4+$Si7_c?@\S6Qn2?*S9a$767CE)`_
%$3%5H=ndRGlJ$;s/`B!q5D9!K(]1]?hs69Ip&*:RHhm3tcZ&jXkKSo\5J$Y,0A_*MFme?e5(<%dM`3Tm`G]uOs25DUpY:[VSC>OD
%rC.k2)`WWqB76n3@TWQH=+=k,o>3?FCYcE.MpLaZnK@8+*oSVn3;r,X?0]DlIq&][jej4!r&9*kWTug`)#W3!s7HkDWNUAU5Q/PK
%J+`Zu=$Q_<pQbY_cL7@6:_/!3ZO`XEh6Tjfs5["e3K95u>N7FI^IU<(OQ0KMp:s$rQaP(UB&2+kI(u;gI.QSEJ#X=`k)5l3c-;lp
%If8eTrj$T*/-+R^.q$!nC*b^@D9$GXr":nHk_B*:nH<XjDtWO^>MbrW"1)m,-iEE#rU0,]I/NN8T=oO?g#'I=nCrAAI'U4iF3A8%
%Xa]_IP>^&n?hnYJEkbu)@"$+Yo(4A0B_]\iEP(On0r*rh_r0%K=8kg>mdFSSZJGXVd6!]ms4!%>l+)*=d4=fq^18_kQ2CLOmpCJA
%iSWGgiN'_>oA\#qQX;K;5cOe[eYhPbhu*,)=.d6l>F)FqV8hTaY=,]e4_^R)@5$s:ET5$fM3$D)+..D#Fru5/_dDe5cC;FAc[5Th
%Rhm0[1=,V`2a@)D:Hs9tM><B#F4!^fCV3GXIWN66qrmq7qhsommm$XIpGVu:[_.m-DU!Y(X`%^=p2dk%D>2f&p,m1@V/3D297,r<
%UmZ,L?+NfBl$7U!>>@3AP&%MI..=_0Oj+@8:X<+h2/j:8VttOX-!WrA_Z+emmEr)8CDQfX>ke-QZRbY$?ZCeo5L&lVe^&Yh/ma+T
%`[bl<aQ)=@o>cX,qo?=hgW0+L*rG!sfH0?gH-D?6EI7][r;#r>kP*<kT&2^Rchm>4H$`kiQfn0iHG2O)5!4=>Gdr75HanKk&*(Lc
%Sqm9<4k,6"O7@!kiV**FWiObeloMZ!='X_-Y48)6>d%R;R(<L*:iCgGK=a(l/.9Q6qs=du/Z?!_+l<(Rh;@!ji,oYQ]3^0ClgE^K
%2kg+UHT^rp%g\)UdUbi!GJCWUIquVLm&*cDWp*,6S_:GA]E?WX44>QjeM-sUWG.WdQa\5ON0jP#o>I'Bk8JfPS`b<>[aY%oB0'Ci
%n`d_-GBQ.(e+6/?+!0fEP'u:u?b4tchX.ocqu4(%#PY)+cV6&6+)U)+Q5%f6ApVp#J#;JXX_H7tBpJ&s[qOLc?s7S7l[-tR-"hW"
%I!8rXN*l=,(G.Kp:eJLUSo&P;IC"F=1sDZ[6E`<1g#$DhbgP61g).Ah[^]@5e)`LB8[lI*o0M!;;\CAs]3L*=QgaL7NgBV"_31G9
%*bMihN:U>cX7k$1G5LNJ_g^b(Xo7&2h:p8nh/iGtVO7,B52/l<T6fD]B><p0j*o_./U%'kp[7M=+7AN3g)%Y+@"[tm585o;eVn&q
%A(Jo_$o9uS<!lQ^:_NZfabF645BEmMk308.s5!Yop/5P8[0tjMU37a0*n-3]_o%5VT(fg#^rdbsfCuh:msf8j`T-<.PP`8sB\Kn;
%)g:'8k$GZj\G&2akdU8,fBpTS@uRB=7b2t&ZV>cco60-.1$t?BkI3OQp/>S3*uiTc?;4_GF$/9_G@L%1epcbsIs.*^S$n\1+*A:p
%Yo2,o$HDjN[pd(qhqN#'g!*4If!*o8-g=uLrP,f.2p;4I1RNTbA9R.`521^<^cVF\diP4;Rqq_kMgb/,<pB/Bq0V7\I@gh@U<^K6
%i@8]6)B7Ee)_.<dT_FLtDg"+\f/#L-gFs%/8u;"B:p[5"fZtf-I)01QW8Dh6NqX(%nT<&sn)l463-mc$YNPE8mOs%Eac"?Oq9F`]
%6[iorFYd[Sm$i:3brjcYB">=Cr(ruS`SKmV\Q['TpY+peh7bb1n6kk0j#__DENe?'2?/NF5'r!]]B9hQc?D24fj#B.iP,4K4ONQ<
%4$>eET?ViSD"2Ul5!IqP]ZG9d-kDqj5C'EAb?NgPk$?g+_t?dV?/knPpPC!JA\<M=deMe7l@.c2j'117IT)="/%ro?2P/1#hj]bC
%2$5e]q!9mB<1=<e?$]t&cM)Uue+:8En+M.Dk;tS53o0IGpn+&ret$19rI"A&qr\VtmP<Y]off#'l'$IRGH8?8pM2tk`F"We%bmt0
%NjjGMl_jJoGQ*WQI/h.bQ(C9D^9X.b'f[RhhZerb2@%NUQQ_hUZ+SQOgbSjMS'=i<Aq5C&F8_t:ZFnd[QD_I>3D)GqW/H'c>I^4^
%:0-fN>ru\+Ut0^pG-H2bZ?U!(')do$Sk,\*@d_+P_BcTE@12,Am!n;-H.egoPf8,IgNLS_q.]0@G-\3T><@4ePFhpNqE0_Namad8
%q!E,L$Y^Y68q"4_2`L7"G+()5Dti!uYGmo:9c!4\g*hHDF*,$K@9Q%bE=K5Z%Q+^(#^tkSFF=V2k/MuTd"\1kfJ#u;L,'f2fu!oI
%j8BmZ1*dj,]T`!+7k$;+p_$dhVeX5)%o%dRO4q'$^XPjT7Rq6aVVG@0F(8BOZ^4ZDC@K%rjk>*=U[ej(r_5oBqa9`LNH.dTV]<t1
%XOB2uAE2@_[RTo$hTC*hcR5KtSAt#?m$cdMjD*HoEk"K\^h=lqUeiX<0Q5FQpfk`C&#Ol<E!\'Va;,j?3nV^U*p/8'2Rr5L;GC"1
%c!aCih2Ai6eK"GAr:FDmr\R^Vc><H3.5djNbo@UgVd^eNJsY;@HL*OAN'K(*"-UJ("p/7=3$AURN/atA;e.,Tfm)6`S03ir&VqP,
%a2#p=jZO?N",]tR`ct5jSYE^>aKBc0L\S#tN/&gbH_cF!07Ifj&-&slhYYWOs7e:^HdpBna:dnk9,P811dbC&d1PI/%P;sujo7*N
%p<]*Q<o7^[rY7JXE9P`<iEC<cdH9JH1o3?k0bIh\K5ObLq&J824'E>EjI/K#-V[4_UuIhR\n'dYThWt56_iM9;gmo\Uk6*o_&,eR
%9Zoc7dRh?P@u$@Ac_P8f?+W76SH"!:Hdob#cboG=f@#Mf96:iP60Q5*C,!+5G2oY9n+-[rQ60KqnZG?75%N9#X%#>r%ZQQ6KLU?S
%:4uZ$FU@pXHLZ7-$X"=B%!Es/#'JtQN9;#%84u#SrRbC?Y1iD2b9QsFXO"?Ij'<+.-TsJ3jeOW.'8PFLFltZik+*@[>P[afeMF)O
%ce5ch2#A1s]#D!3^2*8q;i,KU#G$U/P<M@'V9@4rc%>WmbB'9XTtAZV=L(G#Z-&$Y/N"8'ZGP:4RRTK.-6iJdbh%8mDVA,ba821#
%AbY5qBi6\1l)$-.o=<\+2@\=+Hf!GcIPeB9bTq@1UH?[&(,0Cm-]nL1rf=TSB)Tl)c0@2`qC1#4$/h*Jr>$&NQf<s0q4%8umg4\&
%Zi3#BYbqem+tQCuDOqbG>&Xt`7o'Fl-3KGZ!gNo$AHEG-^Lm0@q9!6.s.e81#I>k'2?]pP(Yrn&A*,Ql'5B_WUY2IKAk?pc!"A!b
%)fr""Wc%LWCtjSVb+7e?1p-#>43d,aH+9_ES&NIpbrX^NL>A;iffbecgeI7;BjWbMh"%6)j+D(-SS@7D*URHeRqZ\Ic=8[)s7rMj
%ntc+k,N8/ac(o]?_eURUl,7d,nXWF&V\<E1-S@]6D]?UUh;7?Dr5Y*@U<bFYeMCrI''"IoK7?=PmqX9@IZ72&mJlhP+5d(p\,Z6H
%s5r^`q;qWqoCi4`jhH9Amsk/j,@:DU?eIm52166X1]CI%)@gjP-)m/1+8fYjV:UbR45B-,AnIXh),[Ei4RI=i,lXE\HMq"A^](;5
%Vgb(iD#Dc38DtNe?d=4J$erc(Jh&K5*_q)d+^HA`mS=>jdhKS\gidbc2nJB+'Ah.hHG3X+"`8;(l'-P9?Tcu%5lWhbDn+PFh]CXl
%_1%1Ce2Qo?e!L!BYA%W3H^r]f`fVK.4A]U"_@KYB(%F5436oAo>q,f=M2OK$MCdQ*_*+k>gtbT`.l!&HA0f27lb;ikPpF\W#B-1`
%O(:9;mJTYFhm/]pZoNW#oS3mYX?4<4gRD"?J/3Fl+FY>(rH7J6Q[eJ<Nh-/q<r2^N459#@ieA<Q3(,'s."\G:'L2?Xk@+<OJ*0<j
%-u)Ae(n1X^"`OO9nV?@aiSWJTbN.R.fZVd6Tr4<6OZ*s";-@SdTDp5Vr[\#tqfl_VF":2NpZIK1'4]J5(pl*E]O_9UfrmnECZ-(u
%@i)$&(':n*LfgVMX-!<k"Q_<8q6KPcmTlGKiAZ/ZU\_%=]LK,r;'T1Q2o_oh,VA#sGW*magf(QJ(k3bOn'pgkqONrpElW,>g>/^`
%VVA!$(rgdLC,<c)eV+"%8(6W_dq*352'(Q;B>D\-^GV;O\cMfP7==`2i,c)+_I:+O]&4V!:6RoB%n;6aDIc]Qo23L]@sF4mmOna&
%EKi*8l8H!W;`p3'M=f[c!VjACi0P^QmH$PsV>c_3ffc0QX(9M'r\[V)?`)'9SSCpKc-r:4e,?n==AF%ONi6VV<,BmhIH9d#8$iRe
%c['c6jtu&<-_K`a43sqBPT:"]S$%*[S^G72/3UI'cUX&pR16*7/]2t21[+\i1_56u\s\K0oan>MrHsnoc(0o,dr=4!EO+0^/YpkO
%HopM4f/:3H0/Arb`IFnlZlWpFCZ\c)IG/'"aC!QPrL`!H_qY4Ym6CO>^OH&%hYuOGhu<(`E.@]@RckjNr]@^(^N,*N[;('>O9(iN
%QJ0Bd0VnJ5[])CVS8nDV&8IWBDqY?8a$l\E$@[5jJH+-X2f\Ia*;j@k`c#l5.FU4=_maV%^]$b$?g[ag=8G,SWU0N[C]AYJrP`t,
%`pZNYhj#%n.kuKS@f3CIpg&aH]+X.J--#CG#N(f1^=.r-FQ,BQpo_R1gF+fUR_A#t^(S&@](Q`rs,V*uO15/OmD"#FD].1L>;rr7
%dfA+(q.q\t6rV@%F/q5[c"Ena7CR`H^]+0"nb3jR8H(l(rX3TCBD1eDA^\?&ZebQSjtH_qG4X,UH.5Wo6X2*9I.IYkO.TbIjps-)
%F^ooG50*Psf2J>ps+B4@IIm9PWt.M0p#=4LDLSC)kMNmurVGQD+5HjH^S26,D",9sM\#j=?6o?d555FEU])JXnK6ePp#Q/F$_?BF
%O8[,U6N,+p%s,[NV5Y;=8@]1.E$]LEoZ:+@CAdl8*`h"$%3,kk![o,Y"B#UPDS#d`_sIX0)m1%[$q^m%U_Mm1o-'0qj&m;66(1;&
%2;:&SrHMAlS0kI!eFH$$e"W(rHQKVnB;XVcAu')5@dWN)Iob!0kF$Me^"DHCZ_#p#1Wm&+No?<\WP/"!ksS==#o`6d"?G.Q'T@q:
%;YGB"CnoKhWhcsG'l/D%\cef#.7)(re$[\Jp0)=Bet8cAQEpH,Gi8:)T>9=&bk@3T5?lm7buPI1PAd,I_q&f`qm0Oh)9"M_elu_k
%JR@apY'\TJV+sT#^PYVJDYHk^=m4nmL,5<`Y6TZnV6'W!m?0;sgPg+lQ_2r$9?<(<L7NKO`uOfPG(*)jWVEU/ip+SNe_Z.2\cfIS
%]&O0BmZt:jQU&I+DP+KSgu\O:>IY88mV!`K\%%E1B%3M*oi[a>%Sb]a<9tVk1%p`Q8m8MRr*efI*Wol#YW_eT1'qD$Qf&hianOhE
%+W_9BXVU><0o6o:C;9"7[;RB`[W1\ik%EN0GD]>mmu=ftm>`R%iPLq4"4N22]3Sjg]",D?Js[06CO*+2,rQ>E8gYWf9@$(%Tfk:X
%m,%Agb8>EfdHpTh?FYtsh!M???+7ZEaNpuH69O`PnTo90\RXClI<0?;N.X8dZEN"?0g?>jNOr>,=EK+KpB$1s#aD]*s6p-2Zb56a
%im[3#p7+8\C.I1*I\`+R$t#_-]0/YHk((_!d&kTU2=!&f>WW&j3hJ@<gdCsTaOT*b'iL'5PA[^NmZtJad'VEHNdD&)KdJMB,G0uH
%p1ok8HXf0bZ(X*bPm4]V;h&Z9GeRn#Y1Td6WHgJs7]1[eBm436CMj0EcCSOu)rNC/,MG6,>Jeou`6@Un<\Vne>F)gf+RLogqtYY<
%MMd6^W?`$k33<L'Gi1QNUb'<Z?r&)/CO0]Vg:P.D\'sn1d!Z8jRW5lL2KGhk<Hm0^Z5($r@E-mdZJ)d?RC'G>F3).6_]\`lR5'B_
%Qr,]<W:;;(AZ+5%KE-]aqa\\":2r-^m4CZI;$TD'(U=pqm\s(a6](2Y]b;'V4=6oD&)5H4FW<<`HJ.]*M*Hr;^mV"9lI\J_'CX2[
%R8#EH_g:'-m,n135V)8`QZToYk.50'MCARN0K\Eu%<'ANWnio\X8rS#\fS.hOIBl3g'puL#rn.>Nc60JcA-8Mnmi[]VJ05R:1\MS
%J0Elsl[$'WG,eM(ngFfOap'!\gR`ShcqD![MJ_+q^/ET0)iGSXhX-;2H8'c_1ha&<hI2Z8(VHdD2^`YNWL_5pBYJG%oBHm'Yf^S2
%krP44&]J2IHT)t#FMN.f)JhAAK0f*^WN?IR>3;.$jh,;WRmV")[tgcc@/=H+9]a0'(jK.PZQZV&ps/$#6S2lLW%^:tDsOXDG.ERX
%D,Xh$1Zu)eGNH)D!cs]&M&BP>]A(n99hVD/89k.OZ0iKs[-66[o=(r`U,5)E+,PRYF"6m6)-[Ti*3Kr/C(t&R_V&-8&gWE8F("@:
%*LGNX)'YPgbS_lmrNN4,K:m.om>53&A*i@Hq8:mDQ("'ST@Le+4'l[L0GVIJ_iQ`gE6$K+iGo.m&05q%E%fLWh<i0C4sU[9CH8:'
%b=fouOIm\HF"c"<'stLuD,p0l3fL>#^U]@""@q"1&!$fi)l0hW'Ne`GJNPCf35h!H[3+#QP\g2*hholFjqp4BrLL8W!I$aSpb2aM
%c+L<N]j/:cgglCC1G@-\`g^G`T41FQ+MqA=FYciG3_1,E&a%#[dm#T/.)jq!.5fJJiLXkidALj1pmjpO2>+h=`k7YUKebs1@*H.H
%+V-$RcL]W8@P"",`u1i6&XoFI3gli`NHZDt6XOdm[2)oPRgMqJ_\9FbgGc\mp9Z`&ko3V1p@1mOc'IBj[(f2A#"Qc<48+H&E1#@(
%h<^ut34":YEHAHp")73bNj4TNBN9<t^/Cr!/,f#)[VTQ18_NTe+IHd,DX;:#3a#Jd"!#VA@<=I_i@89g6XV&Y"Cko:mdQJHkL@&G
%J-8d*]o>C/S?,9nJjq-AhUjC5@llgH/fca;,dV!A<D:G-76><(#<9@_]C-cOEZ^<*hfeVda[.d&Wi"e^887-7CogdcC.$&d^c2g@
%anB`m;&#Fd#!-B9,:-iYPi7o/Nbjd&=6*1Cf^X'lD>$AE22hYO,YkA/Jt@,;B!6p;;_.6)!n^uR$58q9*/>EP"T'nfm%ucW3)T#b
%aHe(!/3Xr-$;LKoRP5pu=_>rYU!9St'^!LIo=Gt]U-oq%XdN4C5Zb;^buo#QAr]9u1e+f.jBtnfg=_f\-D6fjgt4"6Lk2,4b[6jc
%NsTl_.BhQV=cNod4e!n%ri%'6f*27U1Vre>9/JqgPIHRA(g&-8-\c"f/'>>R=WAgS;Z_4&I[p:Lp?d.;.:q?h/I/@o7\"2UJZXZt
%d`XJ6F#W->G>9Cun%3)<pR'XH,@pj/NuqEOUq@\C*2%Rj#(p;kNljm!oI$t.K_XVOp4UV(Y=q7-:]d0-AfM/tHCJMGC$qY8#YsoL
%GD)'Tiq.I*JSE0=B&FsU*_>FeJVmhOG-l)R[V=J2g>/g;'>b_.2N\M0"PEum#qHchA2b@HQ_]gH"GiG.68L-tJ3Bu$18b9#?JRGf
%,J4.i"QjnT&"s6*1;"<K'\CR&5gH1fG:T=r]E/,h"fh@]Zkn+<laYC9L(Q=_)i7(4'_oNZ+9mO,GSm]Mj9V5::c<bPF!k_23P_C?
%-B0\lOd,qIm686E#CV0@/e-"W1c2g7NtKAO"-Yb2EYs#RN!HXK0Q@XXkl_%C=2YGee)g)OlaRB>(t+AH#Jk9rAV)\<EdR_CV<`g#
%nbOqPg--E,5OPk"3$QVR0H!G3]2)AF,8.dn<s6mfVb9W(g"WIHD,g:t2Rh>r]J6m)QqHkp,tp>#Vp1dcF'R)/MNMCdcE([7Zs\fp
%et?mrI21N)'sAF/_4f0D!k3Fp7aI%=(N^);`CnC:0S.Y>[kb9-@A;j1j<E?@C=BlK/!q1fF[^&=d1=k>WtNj>L_Aq]bYrb-aZgg'
%&an3k[]H!R8Z>N5XZQLJ,^2:l2kglA;fi1UlS)%o(nU60C6JRb5dN5C8"eZ\3&I_RT0pai0j-8SVm/bu+l'-Ul$6m[ODB$iW3gp9
%D(q$*#d5F&8&mD1?aR7CG_B2cfEi^Tbsp#UR\+BMX>UN`+65ba>Nr$;qrEDo?.YZ/hM5m<D0f`).2Ai<-^*0g*H4<mcLb"PE5JI=
%'pEO421^VGbOTlc;?[/Ab7Xa:l7!R;JO.npGoe,i;[*in*V0O'!8\M;juc2_M^]kr^h$*C`T'=U&R\oTbqU`VIHXM-!b[ZR9R%!n
%3UKi6#S]'o)*&s9N1BIENV)'jg!A>;O'6KWmca15"of1S>/n4ZiCHno"SK`niEWrB/.B0N4bfpA,WSkk&4]ku1EWrbI]-&+'I*]U
%$&9?='j<j/iZq6eqrsi6>;/Ral=3&hID"HjF4l`kGZ5N1A$5]'-f;jS"<0c&EA;E?UN&PRnUk=c+do=b9"3.in@>i(1Y^DKX,bqB
%hB[<;(!OrF=k4"*@aY6n9(cDABGM&P^23@pF+KKdcCYLVrGFPigHl=$$AgOHGS%B<Pi/uB;UiIAUk]4q6X\/[0gmX=+de4-:#nPf
%0u]1-XWI&"XMP0V5i!FsUt.>V#pqaHm/cBrA_T&E0\J,bM)6*UMQ'0mOBSDlQ?F!K5)b/aCa?srcJ9CE*2WsFQ\>*jr#j#;3jOc?
%@]%Yb@n-$I)8WCim[W<3_JujO;YnUL/SnHY]\US%Nkh041;]^B#s<XeI;%:$B#a1k!d9VM!E.g-\hoTi!5*l"eH_1'XY,;h!eGCR
%a:rZhSk3Wl:AqNFj%+CH9h^mu\td6T*Z8<WG]c"=F3S?rarh#3ap9&Uq8L(KG/@T0$X5"-gbd;b!V$A%3:./1XhYIi!?0X&jQW&Y
%[<KF!g6'')LRlkP9OX[WSVSGQD\(=B3LF.J0_1C5,=-3jK6A/G@?ML?"89P6$'gV:#/eu/;_iMS\J6"]HrZ:6K*MLI!@khp*!\W4
%cC4%f0[)OCY8K&jj@;,@QVCDobR3sm"ZoUjO=&7@W6j19SfY79J<[,A)Wo^qgl=K%MJ3>BGp7KC-7F3m'JSiJ5rt"+d1VM`8GD$C
%W@cS7K!7rX2XSLsM0obe/V;3WH(Hs5)NJ<kOiMgRX*,S555La84-RN(@2nu:DPM:X_5K7;+i)H0LFL_(H5.4K-pQ*V1P:]r%uW:g
%3$l>afF2i+:a]hA%i^Cq)kM2'_<,hqMrK$^G,C)**"o%Q$o?.5<sl>lbu[Wk=sXf;E",@sc0+T&EK?<Q/FVQl\X\\S!s32k.sGJm
%dfeu78=F\m#P4CDOZ%dt@%J9?#g\CN<>ZB[`+Q;fZcFZJ@E=1&IG07>&-A:T'/48q5sp'4.jH')0t<ZP"\>3hhLc-u`pme7:IQ#@
%O2J.q@81Yqg]H7V'6pSu'RDmC/O7d2jN9#mZPR.e4YcCKZ%o!6+)/6_e4aX[`L<e[qrNpbDDVa'Tc?Ef_I/Lb74RXh`L]]#+,=8a
%U56uq"D8f_KB#?&aj-+rb?W*Z-*Q^*(hdMF&AU+Z72mk9JC=q/.UZ,eKC>^Q@.F&j'jVcuQ%];r$T8$0`H'2(l&pCRA-D<0K+n&8
%9kKmcS!6=GQUSc6W9VVSAfd<e@i5A,Nc,2)Ab$Ltj/PY$nFd^I@B`gW.*SDY,pN:ILD#p@q)'g>D]\B*5]eu3N(e`-HYO5^s&et5
%[<6&5D"o-8!@=3d#,eKlES`h_UB`hi,)!H8H=9r&X3@Xo$ftO*#b?6c?]aoV$NWeKPVkHnP2?JeB((BRV[*;-]gef6qQ'r'NWIYJ
%oQo9'WeglcZf[:=4ZFhU*U/T4g%-IB%`pi$rM3;B]$TlcEPgF8ldg%p>SK_m:GVtToCNAd2m8A2V\fZZ0uuVo#I>$-JlJ[PjbC#A
%LoLj\q0ge.4i(@Yi+-DMc-jbli(so7I"md2(0-CNHIWDV2hlFQZSD"%:]t-.;+N8]JX!a$6Bio.'6MSU'P1YqWNH&;&8-s1H'6MW
%9ZQs8XQdQ9i2d0*Tq`H5%L:_aQqt`'<g<o&#&>?E1>CaAmL0gj0X9)[7:OhmDYp\uJ8i2\O<jpYde$,b@Ld]?^^a2q6f@F;aD3eZ
%b=WB$a'iOp#qAiro6Bp@@a^$WZ00aD^E1N2W5g]sYOe]t63qfEABg&+qekj87D$j3JSE*#r]8AN*(Ws#S=VXUB`L`@<!Bse^skW$
%,DeR`+9@S0`](+U7T0AR!2#9^#kA"&'N#VHLoG*\W^`@GJQXSc:0?ZD\34msJE=VSje%uYXUW^pW6#1d8"0Zk.R/'*:'d0#"Y"6%
%g#JJa<Rg&FQ#rK/8J`ATXY53.i`91gg6IM/I.[b'RH>NZ.Q-_!0Y6^?+Y2'ZI'HtDgQZnK(rb/8V#[!,pf8.3K>L#"B3H@2\s3Tm
%cA1/=rdnOL%cbKfe2gMEJ0Ft&JA%C0OVkrL:BeWV^;iVG:.Zq"`s5pb<NV+](@N*4\?3mq^ce(.=HR'YaeLDs5`Aod5IfH_55\O9
%/`)_k)p53m=/DBMP3qD!VQ"#<[!gVB8hlm)(S[i=!k>CuMHS7QC7P(sH<rm*JJ#^Q*f!1]mB?h"!-C+&`pK1K@VW!WqTM(!b02#J
%;c"2YY2(Y=@K8=ea[(UaNY4[Y65rr9ZbmbXOUK6IRiguC.PirqP/0/'e\igXIX&n%_;o]W?U=Afo.bW%9F-@"_Qn/PA[fsO%ZO<O
%Cp#Rq"21NBTWZaFbSJ([\44J6FMU+QA93Ie.lX1d]kj]c_nX5>6BKhOLr=1;Z`\li+^#,LF@A&<JLT]89d2*T^dOG(`@E+T:1[AJ
%bX/[j>E]-7fej:::cLt5-BE:S<e_O')!*(O3pJ^dPp7Nha^/1;ah5%Aksf:p<eYB!PcDFlkl?*o5?NTHnZX@>O:E`%7gKg/H*B`Q
%'LGIZOdEtCUa?/Q/H+OF1m,kd&6G,;+Go)<5,KF2a\OLX/9d*uQhbi)O`rp[qrJOjdm)lb(Bc?uS"8p/gLaq=?PeSZ/H[g+NY9!t
%[p6T*Jm`1K&AB:pN,Tn'=]1PKG6_)%7@:TSda(J^_7^;oMABp`!TQR#Nh;T7f21F-KmH]nRZXn,_c>d"0Xt<6C<QJ9E/p=rXd<S"
%8NFUej;SZ&(GFCkQ(P-MSCU>ZZ7>`]67-PoG!H?V@(d^Uq@nleL63<2S=TG[KPD04,,BbJS"mIs8$P`R!:ODkcoH_gJX`B+$G=3C
%"PTOXf6h`YbHhoS$Fc/Y#J<F'd7l)b]LP`;@72\YchKc@p]^f0n.`[$+NoU$qnpKE#a^\OX@U\]Q!'!-7JKOb`GA)B"^F=,c2Pu#
%-pgX97'T\Y9'1%daZ2UfNg)%ZBCr!XHh7Tu?m^sEec=A;Je2Bi:V!8ra'C]ANZ)NDgaI+HAd:9FXH18TLi[6Bo"6R2+KZ-V`aQA+
%SaL\^M+5K(jWbo-_XpG$*-Kc_FNh<`^ePi6_no2/0s`=;aNYqsA?U7(;r:O&h8JmpIS:O'!+\O'3q#C5_Q2^Shmo74H'"3b*A<Q]
%-9rsQao]t$M/Zja:gK=7>K=.7ZT^Y:?Kc@e2U*fVV=G#a<Nj:uMm2u!R;<*^F./.nP/j3t/n-&CLA(Ln*J_/%jHpuLIHlt8'&>]n
%Lp=Lu'3l*`ja`'^h`WWLER$#:]4VEH5F*5l.:*3T@[l?s<fr;E*=/%8VdS&mHD_jAOti0Y"'Is[*6cuR:-lr$2Bi8,*,p3^TY)sG
%i+-rYgSVL]7<d8[;2o'#*>glj$!e$=p`ojnZ/gJ1*R\5HF]KN<OcLO@o<#n9:On\tDM.Q4L&5CP%Ka/r`-j7.[WS:J=qS-$=>tIb
%809OfJKWD2&fgE?GXH$b"?;>e!Z9QD6Y?WN+m'#crIcZDarKik!S.fU$&$D$=pB-]K!A:6LrMP"AO7s\R0^=ikr@BKT(tWgmP4eY
%E&QLbiWS11,3..aVWR#alor8m?E[B'Y5g1D)A70aQ9+c;!$1"[[c1ae4)rWiT^4jT!T?^j$I1c[1X9!=ga8!CXqUlE)'CK?-Nm_b
%m,^IYI4&2;lmJaVp*$W"M*(u*aSD5/e>ABLmV@+pA+q5qbVO;mJE`f$9Q2`7TN1b"2e#K>#1eM$]<1>o0LASW#abXJ?mV4"J4"0u
%6HEE^k*^XfLC&=Q#.b^Xct-flUBEiA"bJ-R+G1Cpod"4Hl1*S?mW;/RYUW*7#Sp5J59^QV=U#5ak,DGm(K'H2C%b7ul2j(\Db@hn
%_#4+=PTq"[muAE>40S`G"+a^s_WhuH(]Ft47[K3WL,&f$P#*.ZgF9'^nOdPtF7!_a_::%k+?M,`<R$T(iI+X>fCSG-dM'1=/1=;o
%7946Oooe&IG<l0<V%6+BqSK56Gp_Gi2t9Gl]s$2W#<r@&38(50h4*=!l/utkIJU:>+5G].Ie_k<TD[dCk:a(2dl'#&mF%OJ$mU%)
%`?ufE8-*2q>$[7>-,dT8%]!Q_G%$;rKd26Q@b;PjG/"5i[$5C`otpjc;1g-e!0oHSpN]aS;%Zr+cQP(A$]2J8]>-,@IZpdm,1j!%
%bKF;*)Sb_#0SQ%\Rpq&&^l.l3)nJ_H0\`Qj6(gU9$J:MoT^W:Iq.g%P5`f4pE;5VA2bg=a'Bhdi4*c/EJL%Y$5XKh*_EIR1%I"o$
%T2#h&U4`OB2A#Ja0?YU&*/#dSj,;th*u*e)InSoQd'U,GB1Np2c7\#u"AG+KOSmQ?Vh=$fR]kaRN1XDK4poq$B?pg1,mBjoS;[@1
%&.I8#*+!-u6o:@3k`OYTksAtu;qZ^Tft8[G&70OpD!l"I$H1Sp!%1$af1O*1ho*c,.NS9/!FU6<\o0(:@#$W21$6H6d2^?d<FeKn
%"Kr<iO]4g19R"6<@(\P]=]k=@=kt5'LhCBPla!C>F&OL"Nao:N]VNBJLq.L@0/GjtYW2N'cD_Tb9CJ>hbMq&3m)DiCqF;^qOY6Ti
%eS*,\nZcYkGjIoo!(f5C#LiY>e$pL.q$V*^]**eh"31ZP(>_",&sA:E_YiAInunRSVsL'Si_p`p>^\/W^hYN-ec)rq-="cUk"M_>
%%&X8tJej+&lstQpo.c?R7kq9tVa/dsdr$\Y@'[+V4^@TMd1M!E/fb1"pUW?$D$2np9+fcqF:aQFkPPSd!oVH`POUW@>O;b=<qVUs
%i(0;WEgqr+qW8'tC''o=n'%9c?)$IOA@=YU?<!\0*?W)t1-c`!:NSh:?RREeYJi.rKme\@9jgu@L&s?qE$Ghm;"_+K!Zo4D\D*g0
%hiMKJfr7S>pi2;%c7G2K1Q>`Y\T)loX;^oCH&qU_r?)o&iXh0fppVV2a-fJ=@CqRY)?@>3[]S@X;r+Q;.ejQK7I>Po91P1pB%A6o
%oE5\4*/%XmqD%:cbl[/>TLX$ifWK,Y)n:fBAj`d'S&9bq=X"O[MqgCRC=N7pnsFr13u7AE;_`6]VrJVLiG@;)UB+^ICJY"+K$SUB
%08t+"f-p..#ZHn2Md-70(4<p>h"cAGD0f@;$digD;ScR-2_,+D``?$[ID$..?p$?io6^nOd*Q0:diE&t<9C$;-M,GP9%A5';R+Jl
%W61I%J?XR(&7[jA,7h/G6N9k!A:_[H!(#*7WFsfer98B8W#S3Z3M4)/pi1CRm4B%egL/u"+X7R/GJ`b!A0l.(+5m3jW@X&^*PC4f
%NOL<oO2FOUDMkPj&5+gSmj*aj;\EOG;(,e&*m_pY><$*/+q?%0-%+"tbrV)ZY^WSpDo4A9LkQ+ip-(-]qXFEQn/&U1"<,GA,6Yt"
%n%@4q/D`lk`8ne56S.%c.b7G36:^U2+-.Zc$#/pM^e?j\8[K?L%pr_mAZVIs!iD#$Y]Obp,D)'B"1f/9==]@9C?.sK6On?oGBU'e
%<iCFWm.aZ_i"74?.-%H5R/5B>E2;*=me>Nq7o:O`#O>NE5[oaP?`/g+n(`U(-C+D'MXPfRhgR8p[K1PI%D<U$n"h;Z$s[7n,(Pkh
%f#dkG4<?'a^-H%V@Pj_i[t/Ib4iKeH$N"mf\HeQ*,5maggn(J%Cr3M$)$^U(X=6[o&A*cDU)_3.4*DV,@9&h(!`k0g[um"e'8&si
%@@o)2:=i?.5?MaCb/ro4!1V#I]8HB^Hm"V60E;A@Fa.*[nrbWFcG>?Ag6b$49-r"OKqhp:QE4+'7THLaUdZ^`.3LnE"fl$6j`bMs
%NJ<j6S1fZAGiSE>2@oSKa'B1+/hhnO0G/P=H3QWu&DLR2Ih9;GB^I7u"CXUpW1bL+oI^I.7PKuENDO65!#'sP8WS"]V^t,>dFb:`
%"bk^h8E7!5B`sWEioo4!%fAS)Jtb2sqa!0"`*IIm:n_#-555L.`luH^E:tgC698gh<i[UY2O*$X[Qe<_OAu)8L@QbX,V[W>:["M5
%FVP8%[qd^'cq]I=0/IfgeT?%Zo]lU!ZU!T.:&@J\7;<9+MF>"dMamg9&iG<5:<,s+gJQ7.9T[+T0fK;)p+Dn#;JZ314nq.FnjUZI
%[I>H1`K[\$9P'LOkNo>O_DFA<5`EjbDk^[^q4,PGRt/A;Z;qLK7"KYpKoJJ7!%+3hXUpQqlB/DVW$l=Qkr;oi-Xs<R8rDg&Wgmj8
%qXsEso:4Zpft:>(D=r=)4JhP%A'X;]0_<S;'MIkMA4f%>bUi9oNe*ECCE`cdX#OB:.W37!<[-PE3!/)@ZMH%P'7>YDDg-Yh;A?Y:
%[nB<tQX*JLdAgGnHYO+'JX!=3T!#XD;hBW+ku`W(7HmXSW5+.STg3R&NN^&aBE%<_A+?d`H_@#4]P!l8F;uXW1;+iXpML]O#dciU
%1U>9Eb@3sS*WB$+%`3#LJeYCJZ;DZQ`9\Et?iKT.O@_6i`.l0lf=^Dk\49L:Rl@MH.,Pd>[GdOD\dPjmL1&gKTWm+^$[*PfBQQZ:
%d8&t]VOAJ`0jQ\MfC5QH\lG3:T\58llpni7WtSU.#oBAm5@%=)AQ@1gpVO;Vln-FqnSE.0k<(td3XBG=;m^Yc@0dFKZO6gKG9C"E
%2+XeAP'^Bf#DXES7q:,]@#lDL/BM##%M`L$-6`U4,\/&j&eA!4RR2eGBCj,*c<i#GUI//j8]PBV:I2,C38$b'+U+5Od&/,dBjm;;
%gS`5;Ypbi-4>Q@UPa_0'^hm#BL[_/.i=tDL!@L,;$TpmQhBc?PGCmp;G$8#d3dJf6US>pQH;"IkqWsJ&#cQWP0$QG;M$>d`<c8E*
%h8#kjg*SADGRL0+3(`t&W'oKUF-ojK5,PFLZ7*O@pPkCnlpD\+f;/4S1Jr:Nmm_j,H27Qg7?A1d5XE1j;t=(HK!,*iF-ieFM5sun
%9#4AIAtZIjg*qA8A3JaF`E0NAs,I#,i+puG?=bjbqX2,c;KMI`PGJC8D(mqh[h\<\X!c$oqDXdJ>o[0o9Z:YFcKb$f\hq_S'iLtt
%GI^EqCD+&,'X3>oQ@q+(f3q'*TIjr'*[WQbhP?gmHKqg9(8:jIl(g!Q\R[):1KB'*NT)l0oOki@4kSm6g*S9ST)po6#uZG0Ij;o<
%ms;1opU5FL-TSX3M$]+c#Z><U?n*%,D]rLWYFWNTS=NM$$K"P6K/*R@$09h(ihBb9RLL/H(,godc<Z*EHt\`l1T]g^NDrHe!e)!g
%YP\EO=6m-Gm/C2<9T.=AP7d$FBT[4-`:+;cic2iO?;PCtr_O75nfL5:,UJc-;4McaG@IlGaAef#7KG%LcEdKdW8Jh@koOW;l%%1L
%-0E-6jQoOt^<*&2ZhD9+-rU^P#b;IAW0bD,$E++c*d?3cqh[?Q2@&N=G(L:8T4aVK5nt0I:&%\f<X<-K"PX5n[\RF-W="J`@%p/5
%]FCb[)>RM]`ihrZjMW&Q!:`+U(euL#aMqNafHN5KiLm6i+jmfhqAsXiSe$AoB:=Cs6qDmiA(qqb!T5!>H3#-5ZGa,AdS''mOb>55
%H)AIj_2QIfN(mH=REPbj6R`3a^(md#<+slhZ*;IYd00>$>,V*%FK_D>Obm_h2EOI,pV>`M#>:=D/>t?Z=U6W=7R"o&EF,/!I$opr
%\3al+^]p_GHA`bY5Yu":)9>S@9"HhKl;pZbI`(>s*XB$)A3CtA!d]gC43H/pI+=<f,%iPLDMJpP=ke2Jd8-!R8G'+i(-H;GYH7::
%0a!V]K'uc4%u3CE"$/dg`!VN:"D<f=%B$X"p-A'o]XMbfT8r/tTn5En>*O!k@dBa98ENd)F+$b6nO9KP[,mlSdoEODD]]-fTI4qt
%Q6<EU+QgR8KYSZaGs4ZFmMq;BY1?O^3uE1;,7KDJMXEdOg(@=(g+h_2LI9O]J`5fF,(uM4:69cU'(7QWXtJ`uNkXcl@!is-eVZV"
%jYl9DOh9,VA!6^/LnLoX\ip@oCU#:"mjaCcFRGS'=_@A^J8oiDr]J,+UBum-7MrCVW@4EZ*ni`l+hs*PI?9mIa>&c@mGe=6o'Z8;
%^IKh$]$.1S/iec%':<:3m5U?fDrHpHHD5!skGdDm1jK(FZm-E1BEp<3C9HEk^&g?&3Em0XV2j5MZTo.&!+l5YT)q7MU&pZ)9%C$B
%XTa4u4-GCcL-!F"TpN!/>XtfKi^>0tWVMZI3GdsPrmA;%.Y-q3\bYU/HN*KSJTf^H#Eb.0]%_>&d8RO=r`aTjKM_ZVcM"(^HOku'
%+8l%hT=k*gjbqGlIe813iMV#%N^&!_lI-:3?[qd-%po8nfoLX_c0I#HH[>@1o7Pr6q=B)eJ%j*Rr!b*9TCPGrd6%)CAO+9!9h<qt
%?lkUi#Mh+T<hNUr5Lu8%\A7,BqdMd-aj9>7a7*eo><-aH,;('L/F$_u[W^cOI#Jo$27ta80gNfj4ETFiCu]Dcp))P+29rSL4@h(*
%dq1R\&!#[&]^pM;GmnMcqafDVf&UcaiGet:%)_hXG7=+fWb'QuULSBZ8;*?EG*"arn\KBrQBK:t_JauW$*N;lS7D:[F^0QU3N.rg
%*;!JGVW1k0<Hk9#Xq%saVIS\*)fAPIa3A8N$e$j"TOJXVU14tuCH@93OTpt;3:e+7'9Z!PBTCK5b7[*?MhhnbisEg^huKa9KB'Iu
%-Zh'_F*iDRDbT,[#JDie6e[N-2oaD%?D!;u2\b%\rl&^_gh&kM(>Qn8m)1r)VD\o\lXDd/SH+$L)\\lGT$SB#<[a!/iq1s::pWH&
%N-X.SLCaEBe+l0<7cQ[.%+5u3dFi[h1la1?k;,S[*,U#K)>Bd^]<E0j,utK+ac-,dQnPt.HhF!&1R2tSj@:mA>7e\O9b81<Dq;Pi
%(o+9V#UdT5P&3"i'eIAW:?0K*N+:N=/ILP&N<7C5$uZOQqLu_0lmdhrIkaDMK%HYK`k<VF\?HbO9SPeWaG\_"$j.+&`LJ3qPBS1&
%hV=;(nm]n.c9b4qiWX\@O;AT'7Og`C3o)XEY?D4?M7jlF19b%-DK$EPockb%gr1%MYiL50/tNPp$0G]VCf%u0F"q<I,gJ$d`KJNX
%#_jLqo<9mbZ:u?b([>Jp%8n1k>YHMX+.&aih7O:8:J[bjD_]<cLg4s7/K,:+^QK@.omd9YEC<U==?J`:FWi;j&;)M.MNOPs:-Ifu
%E?EFSDV$UK0!:BQ@iQV#%HoG6I>$[QW/;ssl.-VK0pThefSPJ?S\dt4n.^L%(=?72'XoM`hk2E9:4[Fo.;fVu%$k@A4CF6T8MMV7
%Y[kY*UUYSU/LZM(pl$^,75;50d>8p7KrBt>!0j%IQiQt<(-aPO$@)D[H=HGeV6S[0G?$&DRi"//kg+sPR!lu$%VfIgVgKItk4>1*
%$ScYoY,*6f#)?Gb])n*4j;HanQ'N75K.;agROF7Bm&_m<@Vg6#?6B!5?n;^Y@b+S1q%FumXm-J2&/#d<SA@^S`&IOqSW4ON(RBcg
%YRr[mRO-%2ZVO617JtZ'47\sQBuVtnnpY-o7e6ib8E(cscNXc4BqbA,CcTrU#HL=u&@5%Y#!9PJ*0g-nUSYI\^bmNrE@$eI410#p
%1I%b61BB3l6KUR4bg'fUZ`.^Qj`:PIBD,c@j<Hu$nmSo6lYR4=M#pc``:;&6gcYLXU1)j#5sl&>[>I`S?l]Hp1if-Q3fNHs/8WHT
%@%6P`B?FYIs1oEhN5HXCBRCDUi7^<b%AR>C'3<Hh>O4f8Y@&;ea:tZEoH5)BeK%s_E".HAGSaqqqAG_]4>'=Fn9a)2#15,@$qhtn
%1Q:5O@pE]%Rs6!+A/HUS\F.0fgsAKTgQc4b6D)kCVm$Wj*sBKc.eUq:$m1H3X\LJW3$H:3E!q;j#38&dC11(,EPp'Q%!^l-GnCEc
%?^fuk.nlbX<Yqkl:_1hr9(N0(?l8>?WA%F*dI%pC_@.H([n\@\&l9)+1SZXCF/A$<-qqe0eeXr5[^#JCKhj[(;<7tPE)r,VaFnP,
%BiceC;P`'m,`FLeR?U,c>`.C\Kh!!1].@uG.e,-#JOL*^@tj8p,nWW>,F9\YE.m1Y:^D!hKJK/r#b1ONF$pGRQjWMcgb5lL\^i/#
%_4+L"=R<j0*O^EY#B-W??Fb\SC=i>K*P@6V,)Ck1R_K5I0]k!`]n/*Ype=F-M`&"">e"_WKD?>T`hEmue@`:.K;[@jY(XWiiba,6
%"euU,0!aF%8A`QgMlJ6jC2a>tVihRji$gYMPps5d7P1?BFS-f%$_H;/^<d"<0N`q)Z3/DP$NaAIlt;>d1mik',^)KCT_^_>>\j41
%&0/RF#=amjcF`:k?0*^*^lt&M]#]Fg2ZSU[\:HRCe/H"*p2XT8Jf>Od'R#B>2t0;(>8^L[@#S0L=Z\Y5%rkb"f/c"_`[9\EY3`sf
%LaCCoaFW<*Q+jbZR@8$\8du2(8anMr1U-*QD;ufEAjfssn,h?X`J=f21=2)d`Y#SnYSp3;>\J]Y9'NiRO24;3DIEV1U2EYQ4CJC/
%?WfE\JN"tD$Vk**Dp#Rf![C?tXApqU"4b:A>nI.U)Ju>r(Hu5#3.Npk*AEitfIRb36:aM0E[:h5^5SD"!OM*]oEN/5?lP^'KaB_c
%eLcT-;=52_P=&09dRIjf?oW&fbmbS!]P8V$Psu!X''Yqp$#g0&!uO"`1",%]k$'!UaU&=c=;973(k@0;J8ku!@/QU$A7ku%i]4I*
%s"3*j*q[34!"_M?C;M2s2sMP]rX0?i8bNb<_'r'-mnEZfrra)cR"&Q75T(T<^(%%E*.2AtV6aM=+Y2Ftk24h*0`Nc!1]K@,*Ha!o
%hktA[i<LSPmHeIuia8g01)B=sWnpFXLjoGmQibI$Ljr@nipn;m`I=m)"S"-G;q">Z(ZJeZ#qun`?:\%\$0'j\#0B"m+oVX;K-0,5
%Eqf)?]YB^#FtUGBW<<TQnG\<TeZ%"sTcqnfR&^V`0<*k51(s%/N`:]XG^i:rgOm]EJDidF$<ZKi`BT+/QfuW^+09KgBRe"p>K]>0
%b6K;I.;45,X5nBE#?+_GhF8?h^T<$(D'$(!r'3*7(YW5\W`0XQg0_KC'i9MU=":uugmRl&,s"@rSb8=CZV1ullS"S8@$:0!qMQj0
%M]Jn6\0[F*K(YHXA[;%sqjVV&$O5uO@9OqW%GG/]W:Lh^?QL]LRe-MV63q&ir^+KiN@XHN$$0AW8Ge=X.,2HOnLsKlX;IOSIp&c"
%\8pS9VN4]8o8u&&")BR.^L4&iNWMRY%2qi*7YCCNbEHYF]JJmBCsd4fUqb]e[tF8g-XnaJRIM*h+F`5kr+4STI3d,6MapXtm_\c]
%Vn_ksr11rl%)M^sZ:&`-rIaSUfgsPD#N>,jkfr,aKn.tN(V8Ld*K1eN^CZ3bdE-j4G&l^@72pU>#Lb?tF2ca*oL-Cq3Nl,kHu=O`
%KBeeqE-P,R$cs,p5;,^FPJ*AZo8?9Z'5LA7Mf!^`B9loGMTC(2iPGngMfk%ent'ad9(AB/B5@s5?RFs8=&H6BlmNpu1WM09)X4P[
%j-O\U=_m3qjibMZ/f_W"j7fi-I^ooS0dqK"E,+<`i`@G!eec</C,@_"MI0D(^tNb$pr-OfpBc^a2B$!J%uO^VM7?L1'YdnG!dTX\
%pk?]MaDm5I^)-JPSk4A[`>%bd^MG)a^,nl7+^k!&6LkLuE!,PIJ6e@=OSi"l2<iC3^I2uATbA]d>i;G-LFrE+=:?lb>ZcH/kHsOY
%b:e'LA#Qa3VP#9I&H+r<\jd80#4,8N^POd<j%AnN+]4Cgo1K*rp7V5XJ8>.SH%'2F7:>IE^KQJ&m_SLQW]G"LL$'7M"qAE?$NWh%
%K'/I%G.O<6IO2C'&PTr%&N_\;knaDE]NghQ\V^Q^,+*i0)1kInFfXu3*F+t\[@GrW(=Op;,3#C>9YWi8(FSB/R!snb(?)_V*n@6V
%S`lEp<:;Wj0;U-TM//H6nY/'r]T!iRrth866,^+p*Q4+[>poCJ_=P:ch\Vkk3e/-H:@sG\jd?6!qF.<4rc'+XKij_G+Spf1V_9Fo
%V1eYq$dilr$W&h/0@*(eal)sumXIuMJie4+nY#HmK'/K,[Hb`VL^+`PQ,3pV0@<q<[KOo0%TI(JnGM9WL^E(Xo*^r"o+sL702tUF
%a5Hbfc.<Q@o),df.*RjIeOWgMK&\u.FP]SLF6<:pPeLJnr(>tX+fFcL\,R-T^s$\J_]M:],+$Af&cKT7&khU[^J]]p?\s4\L#Wq:
%^Gn:Ug-P?=!N3%-d4\/f6ehhhdFk%15)=Y6kk.R?MsIXb*CRX^,pMrVgP*2U$/Z6.*D1bD8-t_lek'pd*54+'@kUo\?Pk^TFA`C-
%+TU>gkBD^KfufTB(W+GmG_c!$Kh!E'J/uPN4ELF@=[JsIREF9Tqoe`Mk3V>)nB3\U<DXgA@s<f:BC<au_X1b.Q2BTX>:p$-&T1p:
%qo8>tgipl1girP[*2L7jZ=TBNRG,,s0D4$jI+,ptl^MNfh[hfGYMD<\'@,i(2Z@i2oGue3+,mpDo1FkW!JWDW>ki]%G=)V-0@#LH
%?-rD-9ko&aoBj9);3:Ts`rH@20/se><HtD3-*M)9Moh=?W@fB%,eIJ-/j-iZ6Ks-B(Yd<(@.?ZTS2@un'&UEKA^j;!OTS*2/3&$F
%'@5o8iOc]\&IcAjIip9P#2^IP5F`%-6-H[^ZM8dOU_-4E6/T:e5mu!)]p+B:R&+U="%7<OpOZ,=Bk=o1`!#O2g"U!(7<(3XlGUBo
%*:(.@H$]jC6p%U$p7bfn71Mb4_V.?@=41EXI*2_!EV?,V@"93O.=6%V)(X[;)1-Wbi&#MlhVD\]i9MZm)_b*$\m@;,_)s_^03dG/
%B27$)SE.W=]@JTWWnpiTHs8tmM0_JV_>K@tkJ4(>q0,=[JoYJf"Vsg,UV>2VckRP6:+:?pkU#m,)#RpKYmL.^#^V+gjMK5)S.%CP
%Gld>G/!n`VJoDQ-r5-`@PtPHE]EhfREecSLa7bpiGKHAC(OS4gUHK1Y9ZWi?H)Hkn"=l.b3ThK'DCRub[6WB\apY16dn5E.L!gH3
%?3VlS[sM<&'V&*<k6N.4Gd/fC?a6qI%mk$WXLsqaBUXR=(X?\+N?aoBLY(]BS@jZf:b3#M?Ja/.]mQNWX<+/F-SPE+4E,91b-_eQ
%YlhgiNSt6mn+&)_P8=:d^k.c:!k*HJ3I0k`n`HC+QS]C]36jO0hf2Q^QiHX2jQ'mL%VFb<a\+)+rm&Wdr*AQFJsTV#1A.8"H'r`)
%b7gDYABj&s`Q:34.cE_9MaqF8+-aDg[Z!s^Ut6G&?7:*,.]0iucQ[Z;@9pF]?&h:cU^isk,:Ig^Go)FPCjX+V>o7jT^4Le<,;6A2
%#hsrnQe;sOe'EucbH5kU?7I5?=>9:elX$)!H-]BbY<99*N4e5mB`1QE98J!rAQde/,Xp",&b6u*+D4#I_B(G,#9g:lf\0G\]_IYK
%R4a0*BM_!")N;>mYp,=#RX_59::\aA!`e?@i&#oPB=!IT4u0Ds;04/FAMSs6-dK^^.'6P%:4frd>,M`GYCr\Y(-[lD&M%&WBkC_4
%o?>4TC`lqj]R+COjk<,Cb;<6p=$Bq9H4[am*UdtE(2UYM*6IeE`p7GGcG\I-E!+3GFZ$:,G^(A^C=sjbYBsbrYjcfX()ITi!:7c\
%V+a:$!n3h#mBO+RR=VjE_EC3#gUfE2]!<H46d#3\r@Z[\J@uEch&R!fQ59?Mfg4eM-/SmB'0/[THl!2f[C*ue91Gk/A_u6Q9aq^'
%m`ahslgF10`XD#`_'idPAT](fP[q3#CDEls[[dff0%[6q^!7L>fq=qV,2B;\o"+>X&dpDjU>*ZXOarZ!gFd/->COGtMa/!<[343m
%7'M`_\9>+d[/,Jk(B>;T>i8;f>TYDS7C3G3fQq,^7<^.pWBmiEcs4.!FofJ]lMX&R$XmuNin"?]VmX6PEWPVp:ig'sD9O?O7BYCP
%hWX2@]CBlPejUZD1$['`615iAU%@QDV1s6^1T`8H41Mk[Zg'GU(cY'/d1-:'kmOCAKLhpCV_7o4,`$Xu"6_"C7U;\C!Ub(sh<)t@
%!E'&o6I>iq#Q"t%GL!e`F:fT\DhCb#/[[!>>f_#ba%*tB4+1h?T[F!KRIkf<.U=0*Ofo9B?/Vaqcj,[cnCL5&SU#;ZW#[_+drX]g
%U5SEKcskC65l_E4/@ptS%hd^W+T;b(/t*Roa#]"DF>h+2d%-an^+ecF)F9>7*_C0dF:T5VU<^>(kYd:h*t5`;e>@LD#$iS'ZP;>j
%d,d%I82CI(/uF&/r.76o`MsSa$Jj`QHZ\ki9ahM;Ft=d#HK!3s#6T$"cCrG@//M`=%UIVBCV=cPdQup)*rY:'jIFXnbGJSc]-AEk
%/[OY9:HMfQFD!-@mhE?(p(ktqdNQH>T:AgR!8pNuMHg"hF2f,*:7mI)=N.hTkH\s2.Nq@Rh!)Ma6&DYDS3*&BFfq/W>!D>0KtCIB
%%J&;L^iX27V$HILLcP\O/oa%u)U*QE??9PjA\p.*rnTA]UPKM+V$=nbp<J4m@k"?teJC'kc/R$FKQKHqmT^fa5n_t`Hu?HXcCMSU
%0AO+^,EqT3\T?<D4QbYKAM($Abk=F-[!>Uhgpmsr7^]aIkpqZ*pXFQs-OYrD;!0%uc_Wo0=H"8XR!K;.>i&GZM`E`8Z4OjBbD$1f
%fF)aQV&\ddHYdS7S2lpJ%\r@,S4ha94Lna8^H8G]S-oAdm_YL;a;"C:e@@tS+I!<">agV6YKXNc<:St"3>W%Jkqe]J<UD@/b+)+V
%%Xe7`c;jO#Vo>3bdK!Y>KfbVP.I:egmT^#7!X<kO8d]FMEp"'NJM^>Fk>G-pQ+L&"7'nIc/o#]Yi@V)";\<(bk@0M7XnW-B/l3EZ
%.0aiG97OInTYq"MVjs,r]m)823F@-LbMZP1:7R6r$PhbiS-pdhH#hHO\jZQ[Quc+O@clplS4h]t`2peF$NY=:_44.!r07Y2/t%g$
%;V&]HO;\FcJhuT\3-P1hR<'$]fsNBn>dOT7G;usE!1/7,2Y4kWX")h((3;+s]?+j8g.B8/eh51WOQpl3S=<.B*[GCDV#V+aKfKrI
%!ptS"Qb2c>3--^uS=C,`TE,,XNeqO!0Z,7bmPVLqQf(3%HUs\j(T1n`,A;'1dF4psflL$6A^YD^Q9G'Np=r#SB$Xc2@*_P5OV[;o
%Tplkhgf4$eS'*F"6p\YYbDM`h1,tqY'M`pp)UKn1+e/km>h6iN171RE#F3$g"#MlS,Br=X\bn$!bR8>A.E+"=JiB%X6*7^:@=.^N
%Z4h./knuG*''.;kC'gRG]X]"c?J%Fp+&_>c3,pQ/8Keqh\Id+8\e+$k8n`#pk>L4GfEsqK!=S:-k$5W<3.T;EbGoLA2rt@1h&"eZ
%0^%Fo.pj%8\R\"i>!Q+rVX0;"(Znt3)7#Xr28lgW!AE_CW#liU\l.]Xgg]sg,-Z<kDc,[q_?0Oe3gXJ)+_=L5'(O!DGu3Zj+rK(N
%S4ep-2-FS;V9_bGQse2c/rhI_-g'21>g0aKWMZk5Wt1']7JaJ$F"YDZ/n`I`J0iabSBG2+bBddGV3kU>Qub^02OmEAKGI^&n4K6E
%'Hl_W6(JC^MFb#sB9o8`l,oR?X>""0E9FMiPgCj,`T7B`Z_+dL)=aLi3.l;sfGKt56C`BnS]chIPP>d%U+h&]PQ)E2J$rpN]]2DL
%X,d+b=EEH^1J/&'>bm:?m_3Z&m`Jrhb1p8&o#6tXeGk"EbV`fF4g&l1+:jcLS1]$(16lL\>XX5Aq3]GsX.[UXr9BOs(L<3fMK$'/
%Q;A14Mm"=i<U[R3jT8HmM?50J79U/V`PFeI$=FuW/i:*M!j<Xr\]=eh@r^S(K`K@a(Q)H_cjNp9'LOL]-^TN$6S>gp>';(1-.T5Z
%NSqh\a<##QFa(V21X7tB\ZlQ1^p+Y@gqA?sqqOFK3(_>B,0'jr#Rc^:g(kqnctqmh\7OhqlXsC+\/H6)L9ol[.DDo8;HtmaenmP.
%`%=E.Kggh+`&e58<Z;;IaA6(ZE?Rb&1'hl>*oP]f+`8`4K(d?B>He)n()nkuZY0FKNBn034OGYqDWN:6M[Ge"[TO@Z/qSSY)OuY'
%Omf4R%5&Q91dS/n!4qoa6nKc%63om3&KJ;?BTeY";\kjg4hWQ-U2,s"c3\I3Q%6Baq/6;XJ;To^DZQ!B>Ui:hnj%%7&JjH:E$i,M
%r0]>LkuO,&SGF"LY`&4`Hgg!KobOr\aV^4`B>Fkr>9$"FO#,lLE&h(7U$C(E,+X&k_HXgsZ5@!\^0<]Da`X0B(9`7`aE+"F;'mka
%GQbRul\W<<'`s]JlW@,q/FALAA\*R,SkTdP7Pf2Vgp5q#2<W7A[p7(MeAZI?3b"Z@[WibcL#a#j_^tXW_&om`;l`3(Mek%?mY0Vc
%S/c5qJm5D:!<A&`?eB7+>j6)K7)s>PgOc.%%5pLiM^p)$]3S`'ZIV8I"LTgdXusj9[RCR+IDTbm9Eai!:2:7&'9",J[Dc>M0(_JF
%$R(B:_.a9T9I/qVdM>7/]r*BWD/du-UFipjn`#M9fE>776>29Y!adh[Cs28!#j5nf0*R@0REZLA:MbP[,74(c/MA_\1f[s,?Dq\n
%mXR-BO2YH/cjq=)<(cn6V6NHP'D=S&Cp=EnQ=-u:2S*ZV,dt7`=aP/@<`^D@fJ]1j-OdG^X*>/C'<ik\gVI5)`?blN9ODR%#(k7b
%L7+7u;CAY:`X+9RKtLG:18fc:[^$_BTWWu')rh6GD%iPg,-FX(UH3<FPbP$*D=-6gltN`U%VkT$>)PD)O*p)k"ka%Sm[^X!aiP[(
%jnd?9QWd1,[=\6+[bC-L*@Io4h@OfUX#21*Do^k;FWBbBW[4pd;l3a$]ibl?>0SRUVUdX3QakDl,1A\N/@Ei/XpEu3[D_j)-QKN_
%5#+r(AtQ\fTpEsLX^2<K!WLaKU8LHHdBqo<fP/_<[ABefZsk*dEn\Op5>uOM@SUHhjFs((#RZ63c:s3"V(^RTGg"*5@(Dm73A%Q2
%,5WFtf:Ot?<DJ):Nar"SqqeQV(sj(>>+cV'6GZA8<)l4YM\=`Wou]sd^`Etd&C[@B*6rBidPc#/][5*D5YV8ISNL>d@d*bGf^AV/
%&UUl9?DaBk7@b&FcsWXq1!<n,KXAuc3[6'_:+BAai0ab0MH@n02VO;3_%K(fhXDGRM\bYD%Mq4*BHb<i&QH-d=&<i_>4?^PE*e?6
%OZ>oC&NmGa"(L+<X_!T]e@`$4NhIf&@%eS^CBhIgpM/`BK,+d+WP/fKG8MXmlkHh3I:8cX@1^e/Vb.D-g$['<(]%:-7[[@uiCIuq
%Jp_`YT=JT%(t>nJdoO:IgRX2\69GY2C_[nk'"gqf9$kk,L\b=ZB=k?Z*2Kps+ZVhC$WSi@kf>N3[?^'93ofRGEqUWG"]R.b<>XaJ
%Z?Ja\7kr!!D/i0^-)<#TeqJ$c30R.bbmn*".HkB!0-PdQRiNP!45&s+(oMH"7U>^]2&df4_)+6.Y6>V.ZbqnI=.\+("k''3SOJN%
%_(lC!gT:>F5r))A/rO5*#E?AEB$mE,+`_"YS]=WK9L+cU\*q-db<D9JY4T#-A3u_6fO^timk&Q_^.htmk2;OGcBT9kZD`ARkL59!
%EA(SCq8+X$"N$'t(AGaRa^CB&mgZlC0<DHM6'?ITo6mSi,<07qF.=[j8!Gj$;0Jn^'D/Oai\,DZ5]M[a<ckVll6/G+gT+8h?-$Qm
%Va?ukOJ:A`%jkE\V#,O+,R\4HD,1Ct/?)+m3+uj7,=X::ZJ?</?R2p2;ZLnj%TsI$MsitU]-G5Kdm5.8W0J?W_'-DnB+ilb-l1Ll
%q/7%*C!V>=4*/IU@Dgn`Q9]fASt&0>"@H+0038WdJEtr2lYF>#T?]sj"L8;AZDSt/&gg4EWVFS[p(;D&:/q>rH_W7\Z/F%5[V(`C
%U:Nh*E9E8K6"#*!N^Z6tCTogA/E<b5^!K/?HHIG#\HVdoK2hA"5YPD,6=2>(=@=`5aIRTd/!>f>+)`-NP4],@6m66Ud\"]d@:_jh
%c[n!>S/ejdcIf&Obl,$=07CkYqs/7AEd]Rkra9im*'5^]38m=Nn)1>eT+L(F9GIrA;QGiWo(#fmB4='J,Y-_N&jr?3k`XJ34rqH&
%6&sDNJPs*=/OLbU5Nb1s1W5L1C#FgS4I$>CW=:sY$/iaD%Oar(1Vk<i4<<Z[mn-<@`U6ZX_IJe*Q5f>Sid+Mr54T?E0M4WgPGmu<
%XFTTY^A'[tOWlp\`?[3A@IZt2r&hL!\=-`nVfT(3ncA/@M6dgbWHmYU,\.Qr3LFS*5uQ.qd)P1%ZPu%!l"K#gKY3[4Ro[3j!dq(\
%(n**_c?4aO<TEf=e?[/,A$-p@W*2_O0;&<TPSg3j3^jAWG'@Z:A'\1"Y2r!sqpEd0`U)Q]@4ge3$bADS)j\)_7k@_P@e:#uU_S5j
%jX/?dALIC%9f8m6+G%[T)fIcUClM]?M%g0a-<hR2VB,/7i.,#_!lYll+k`VD:900c>uJl_puls^'HkH@Qn!;EEn0EKq1WV'f:jQ=
%RYYg()_1(;79^1=+6iJ2P[7I%JhTlI.YMqHA4"sFbYleE/ARo4*!MS88o=bXO;DO8M4Ee2l#g'f=Lr:[(),k1]T+761.MKP''<2=
%#o:2s@>ZhV%\+?ITPic<q_`Q)%m`8o++Q8A'.B/u4Q0K]87B1PY&95-(-TrJfm7\TDI54/_hZ/e8o+Nd6s0'CA;c]EXrTeG7R88d
%Hrh'I33r&J]=a"@KF!ebe!N($.ohb_/jI#u(1JHc841QFW]/YlRFmrt6rA>3h?3<)S$t=qX\LGr!BZj[oXSpHrVV6rApXo)jj5!I
%&8R%,`4<T,kVU@rO+"IXF)\O0,3HL8?JJDY38b][fo?ac<Mr&T$J,Pr?$Jc#P+G.k2hF)"D%&_:5eR/-iK%0Li$4TD5i2p/e;hFL
%q=o6G3Y4WPQ#38*ZDhMPA5Y3cG6U<"gB?kO1Ta`c:%dft&h!Qrl7%bRS=j8\q8;tY6tpV!iBsd`5]Enl3[aXMUPL_'$4QouaY/L,
%RIjXTgmH2b"(XHQh\p6]\@o$X+iIXAY_,i$PD3g1"PO=N]C<gbZ47ffNPo)"(%<H*=hFdBQ=pb!OQ_I1BK_/F19rkr4#72iAE4dt
%r'[u,0FkF@:X0&7P)?2Uc+mH#kNH5:A1ur8q('Pd_>^K)N*`6r%RSBC(<P46WI)E;6NW_4iQ[UO20Yh3'-uuY6a:it7e9<t890<M
%R^+p%/=T@3pI&X5:/%`VaCTX9cJ`IekUeeVAW>&36+/(m`uIdK6/M;!1Q-a5##c>D#Q]=un#fo+aQMh!3D.>0TE.$9@E$EC)rR:l
%!Z-90k)LSrAf)01X11D;)lOlnp#M*Hh$8CR6ktf&m0HquBQZqg4TP`1#O-d5)^KA?ZY3KogB^4.c(BNgF,B.fGZ+/V8;WN$RT)ek
%o9Gt"6[+\Qe)=Tl+"k<,Ch;-5.5!f.-A'0F8_K$FHDFgeW(bfqlSNZojulcAh4rm70j)EC*Xl.A#NCG(+Fb3;r3J&?d+^lABceI+
%IiPCPkcmE?&%RL)0+Nu-=,,^+CNPDMa+AFdouT)-2CIFW`'(<dMmf]-OgPqHU,oP]/;-U3L=V]H#u9_j,\AkK>UkH/o3<.cq[-qO
%V(>'*^OF(i.k9Itr)e<M!hCWo`diiIBqB.0?"`5%Vd-Z(3K`<Zl!PSMHoqHtfFPkG((32>88-gN,H([g)-9Us+eHF09oB5Z",aE\
%MhStZK3,4o=aZ>^:mm7GGM?VY)D(eM\^"CKARhaDQUQ+YD\.],Oi>$Z"PefZe'sM=`ung:&!,fGiu5^K&N/>a<(h#,&=tock2;]<
%10iMKQJH>jLZ-[+*ia*V_FV<M[CL5[="Rf<'\f]Vob_4nhfK>#Hu]C`TuCBH2Ad_,L`C^l*jg^e$G+e0lRfn3d#Henl?+17LU_f3
%CfTfGL^j]kld/sYkuNjj2Yc'VkU+(h'b^0J79l3t\_&Ll<35q-bu]6raN*;1qcJK;0K2s@=XZ?cUd9h@]_+BpGHmmfn5R%G[-sL4
%3'<EJ0dP/-EDoe\&%dTceOfWO>N68\f'MjBcSXm(0T3,<`X/-Pb&NIrTra.Q.-A\R]>Q4/<E7^^7kC@Tag-[cDJL-EZ]D_[D5g5O
%?V"/Dk9+f0KM=j#L^[pUEn%jS<$tr\b1bq.e%i&&X])%989/bcn:i.pacSsSU=\2!;Hc4o6jR$4/,5gs0bQn7(cX]6-mZm8PJ'm/
%qS@tdYEr(mU:^Sp5N!1\3=QDc:u[W<;u.,^"\'Dp(PT@Z/"TSSn1h^A0"/XreA]LE;<_B0j_;I\ak2@S%uY+o*8KY2mVXfe?4]Y(
%5\*4QGo'+O`0]^Y0!TU31=OE/#Spo@<V)KfOY1Xm%mTO8E>L,4r@F2c:D+g[r5asXkN!sq+YSDoce*MW0?@PZFndo_K$n>+AhEH!
%pE@jlXV3%/-/Mfe3!?ncO0<Hq*3VGMP9;63"/:/dW<YMGR^m[Skpp@[I;XG2md$i#G/4tXX<:Wskbo0(5L^h79?9h?DadQ_it`oW
%FfkP-UGiY'3"<:SbLmSa*paKt^]>PIOgDk@,p\hVe0I()<T5It6eQ(m6gIqJ(VpPtH0slLV.>@mTk0IM4rh^u'e*FKTpA+@._7=2
%^'Cn\o%Q(+\nIdUnDUIQK`GjBMs]J0-:btKRA&"ZB'6Wk\uDe15@ggO+ie%_RM_,)`t0Jf.SD3ZTL0>tNW[.*`+_uOPh-^2V(RcR
%hdnD.a7B$e<':n6!D/tf>a+A5136P[,7"UiT%eT(rG)l+.aU8n&KDBE8]?;jQ-R<'84uV`#_HTDAb2&5iiPYkWNY@l(lP>4&8t^1
%DB]Z;!#0S^&goVGKXm+BJA[+_(eIWVm?2/ZBA3^NMs#edW:.YeGHVdU'3^A-LdO<&&6f:a0oO-aX3uhsF;*C<7[2JQWe(sp*n5Sr
%JectXg3gW(W;P-H7JGO?^a79Sq4Ah4?68/',XmtJWT-(6_%Aik?%boi0LP'#YFr=\?mK@q-F5M=AP="1+BEEs__.Ip(&h9If?;-a
%/%PLC8=@.FaL.D`cpu/g*4]!=GEIm#3["q=i#E'6M[UF*m!kh(`[cS,RCLG&7,7A@8_]Xe*=!(U"%g=kM5S;"U#;RPaOpYq49peD
%aMW%Id;so%XE-nY%.U;TFi\,<Y&MqNCY\M6C>_9!(6&KiJp](SeNHNd&;!<_pft"2/H](E6_A"]ptIl>1EA<D@TPcN+129PKbrha
%QDVb*48RK[<Mp0BL.>i6b)c1L5C@c0$^8sA"Jcb20ut`&Fuurc9G)d?:i_HbVNR0"kN[^75X3hnP:=UENjlDk6r[eTJ^qi^AR>cq
%PC/m5'e^L/UB]cZ;WXu'*dfo9VlR)J%\<e)S:H?)VW0p&TF`p:aAX8SKLG8/QUJ`u,QT(3"PdI2<+"=:=o7@X7`P,(VK0=d-KeGg
%0npDZo2,Q#a]J&J1ZMKV>7!S+D]_;h0L@hYGXK>;/ag[J#mp&8?&lH:7hWT@.5Q\5%p1#H7!QI,\:p*RbX:5&(Iuk^'J,;aXCs2R
%jAQdXEt;e*P1t>J1>"V17BDn="a(QaZ!:b(URuqaCLN'qeV#&5'pT.VPM?HWcKB^2OWt3>F]giZ!&+F3P3Jl#)=&=^,[TkY`#g9%
%YsoRe?0YC_Jb9S;&[OITP\.FDp7gWPc?`C$J>OR%`$@Q[p,>EaM+dGX7EJm`8WG>I'nsig_4GVj?r`_?T^]@pEE1;m*?uN_cI0L)
%cR[><SGM1!^e.iP3\i?/in>I#O0-P"i1$]PjFYdQN_D*,[4Pc83BO>_b?W,PiAIiN!U&1H4Ajg[+ok9\>fI:)*[[b-SN&TM9gjs+
%:%9A1BU@b[8jV)unL3+06hJNBNNO:ieBV;ZEFbEsdjQGH*8d#PCkcW&Yp4%\ctQ>^D+tB=p_TL8;Y'Hr2JQpl80$(f5@.5fqNR#!
%RtTpT,dOH'8$lI0LP%oRGe)$Z0n='$#>gg;_"F:YS:,Z,?@sY=lpJbsXSI,equN!/&\s>?FTC%PHLm^DJh>iej@[h*'E1_(&BIEA
%dTad<<puV%mTgK0dhRqL;/sHWjiHu[A+^=($JEP6qgst7,_fEmaq0.P'9)@_Ea=e2*Ph(92/`SYhL+j6-7Ud@Z/Ma31YTppfg0?A
%C021+$#$$"j@LIn+XIfg+F%6Ad2r2M"H]k23"k#g;h<@!&ibESABV9Wo5r)(i%SnS9G$-"R>$<ib'EJ&!ce7qa1\IG2;VKJ@&^Ko
%=>4BtJ(9.l#a*BS#=2$%D2L=q,$*7PQsS(U4rOT'eV)sZXkY^$#F*htC"j>G&L=tJUo%=lrD:Ok6L=#p3=q'kN(/U2`m1Lu7aVm@
%UT19Gk:`W7kWZhmTQH@ki4$S%bf@#0cC[J/<qsp').FNH$7NO\.R8#l3695RZQ9RPk/f:e=AII7.#q&sjLArGnc9FU2()Du7q-n:
%*6XPnmNP<i^8(;U@(K__7@/`eS4ajL\L%Ut/pU9;kN5<8(or71$<1o;(D7>rhXg0O*K5)sFrj22!N'5IBn],c]OpTp&cpst6_Dr'
%_K2AKM&Nib3@3j>g3(e9'QFI60FuYJPFH/7_I0FrVK<MR'neu2oK?GHeGkrHkdu-dh3o]u'=R?n@3hcIm_2R0,b4A69CMI3Em"qI
%@&"#U%+SR+,n_V'h/GR^9/tGQS19uQn4a_n[GVfgY9BL?hO3ElO"Um='L&S1N?pqY6/dM'_&j;8+b0TgIXg_:CV1dkTi=uHo:Ah[
%$<BJ0@Ve=](a6D,M(^,?cR+JS#lmt/c32'0]\gEY63XksNu_@lA,l;;l&5D3bu&q?f/(<5DI630/&*uGo]V9U,&TH8kHX&`@Z:C6
%V%SRE!cS4;`IPFn:7dAXO#E$SpcT"U+m/3Sq!3'S[F:/hPMS1.4dUh9q*hl6LoUNSUgn;T2tD<(_GjF,NDksceQHD0;[@'h=:@bP
%RL`2[[<YM%6-OB>oXksuc9qJKM'kUqAdQT%d#T[/"i[QtU'f4o$[O$V63r<\@7Y:B,,A0Bl7H2;-uqD6OQta#d>0;\8I0"(`LmBK
%+o9;E?`?@@.*W5i&LOKaepD$/iM'oF]$T/,F^L6*Yk1L:[A)DU)\gRt(J>KD,%XLV,r)RM^aa5#\rLLjZ$CVF]T_lQ9qZDM[B_Eq
%M)g:O%2MaO.feJRaD8/!ScStCq8Q>)jtLmN?JAGV??nS&b5"k@`;l10_>T%s^q!DUhpeA*agnpmbI'cj9pmgjgs$7qG8-s_Cc5=E
%abr0mHSGY4hpGpu9$j3T)\X.%MVE++Y?W]9=hmDQS/)5?[_;/$+T#m=a?:;!5cKGU$:tP5"=im9>j:m0IDo*ePFfCn5p\HN,3`oA
%6D?t]M/1_[4@qVH0=$aZQ.Qj0g)Ueb.Sb28lo9XZ-?V0N&]-p)$RrX?@E3a1KVAf#-01T3hfoG`8ie^$Y9Sr]mV3Jl=^iDFlud8(
%,B*kH50K$rI1!t*r%Qt*fT]jYVR$90]k`c,PB],ZQ&Ej[cT/=r"kj`d0%e)]]m6"0`70@.*e=3JDtg%R\V/I(Msk(U-?R49>$8tr
%L(H=iKWkC`$(W"&;brc4/_Q]4]n1nOc!7<0d(mFgA5L=cJSXYP*_DYAr]6q<3QVo;``4aT)N&+Dn=0Vkf'9J.7$;rPbUjLuR!d9i
%]X&6O_G`Q[#LCLOPMC;j,Ve2>"Su'ZIeh@[-cqBHUg"O,:V/P0ij-I-M,(!d?$)"44gnJf0C")/J.`^pe/c/.Y1dfXMO>ngo%%b7
%gL/O(=QSPu&TGsAVVNCa`H.OP!/+m:\q5;141c(jRc>=%4#\J)Uba.DafuaCrP7EAP<asTj9F"[A4*b2BY3>oMmk^O:cZXH&JacC
%;R"\clIn*!>F"1l/;e46iYoaOTNPDs\3U,tahF;YWPTjbQTN;n(+14Q!*WAf.-Me*`d'[^\CIhqZS^7l1UMruqblI2c1#EelK$ru
%WJ_Bi2ZU*k[$JC.:8"*)O$c>l;`r5lPVEtU+]\/2a<g`$QMe!Mm2;jiU]En0VV&Md(c7V8@ja#%XU?V16mJ+e2@l++/!#d9Q8,i1
%PfNP98%'<)5o%2@7jA;CBj8Y5YUS>F&5)/apo'RJ2YB:S2'i_dX[;3:KY,UHOWT"AdVl-(DN<pTT"&CC>&`TJ9g0hN7@qEtlO(kA
%11/)QAOp37nKtQ*+<?<U:%97">(CWSUH.1cO@lju)LB,jO_3&[m8,*0)&g*u!6(:*<ptYo[r^Uf'+*.!`&lpi,[7DMY$"h;lQAA2
%kpH,a8/aR<PG6&*Ao`,&RdK)0'@&Z++LS0iWc0]Ah3"4kXn8*8Sq(##R_VU4R7J==kc?+$^]R0`<&kX`^3_IIUPGMF'f[ph`<@sb
%]\Tp%OD$96Su(LaP*\B<1$?tgrAej(.VZ$Dp-e]nP+tY&`EL,n-.*jQ@JVCT$425Pcp!/UjS75W!hmZ_-n`Yu![/85?$!jcre#)B
%!ku*J'o:NfhL15j<]HN:le\lMM,nXKiXB-`$4T>OAJQJ`Bf4N/eP!b],K`+[k(m$e,@?+$,\iIE'l!RXD"JW"'dq`*7if;f-GhQ.
%5eFKDZ]B[q3<7#hIFZe,GhRdN'g-c[iBoA+,-2JrLt39B%=+r2mR3BU[jFe>(@F7+WqDU%q?*__o]:p8J5[8*1f&97;"llq'MFVE
%7gu2o!gq*,7NdVWT'^:K=*fSb#_M+R\JW8u48p6qaW=A)naAnK.R2NE_[1L)FX(c7Bb*u$`0W$>n#g7=SpgDbN&:b)LS64ZKcE_c
%W/6-,:E\W=]+DgHp!-);H$1"4?J#cBV'`&U74^u7rc14H,ariO>"l#Hn0Z4=[]'>dAZDcuT67)5lG>ju9\XDj*oW-\H>n>\Oc53b
%_,e;U,&L@aU-t34DIae1YiY9uL&8a/Oo7trgXtPjQFm>C.C6T!`IWFW5Ql>3^0(-0;f&0g3"YW5gRS%A>$mk$G+.MV@\MlBm%!jh
%nm)WM0Y,BDQ9qSU3J]]k+]CsY6<o+X;j/]Kc[M[1NY==5gG94orc`,WfTjYqq<'qq0D!=T["gn?s.2)pC=*T]-?Ccum(fd!R01_]
%0tdS3o,:%2kO'd[GQ$);[J;CQ:"+IJdbZ)]5rRqj&<h*aR;7(o?#_bKHhA-g/J^NG^b;Q5X8?a;4WG*3m?,S0hRu7*S'>F0kQZ(q
%)1?fhJ97Vn:f5rr`ftjrR#ngfZYRPN@m>,9Zf=cR@FQ1"(u/AflL(;Yp@+3`V2@m#YpAHDVM$mOk?q`E\jF%TAVZX,IGS1(dj8-\
%UK4"3Ep2Xce`;628t'ejhH#lRlNu?p7m4.HO'icKPJ>\[)4M8G9>Z/"5l'D1OfG'$a.Oe?gkqBNl!K[Vbjsgq&A3:AcA&Tm<N?kD
%(aRA@1"cnYkh+@(.*9OY:<gtplI5t8\h71!;iENE5A5$\7lZ9MclbFj;%eD5bF<_1/4^;&HV%,PZ;l5)4X3*i@aah9&ENe3UhD<A
%bALX\dW1V70RhZ%M+pmOQ1\:[Le`MfVV+V:X(+J'2o-6*Vc(5[b29CaS\Y$2M>%KAWn@[=#FL0D&;MP:HT,+aetH9C#HM19@[=Q2
%E8m#bpl#4&d3KkWGZ5q\^uZ`:@4f4W.OG#0X<JD@-/"!Z_FZW?@e.IiJ=q6=O\&0:Mq$2u4ZHETD"/+;a&>!%LB4ADg6+]B^,>O+
%DaEduS;Og83>!MS9J7Yb[AN"'9^a.pi`2$cb[O)lOZ:[U-_cJ^4<gd;.7apiaR%*+UK3!%-r*6M"eA8U`LF2S,d%6S*Yke$N8eIY
%Ae<7%89RKQ@/2,n\Zqqu?D)l3/!E6"M&$_%O^Q."6k_[^SUS1[R8kc'bDC6B?;d76H=<X:[[D_*Olu#AWa0qcX[SQs<g7<uJndG]
%E.)hkqc3*TJ_/:N4p3GS\nG*m1EcD&\`cY?Uj>,eZ$84He-D'Li8\mn.08`D4Ln-d<O0T)Cg)T5jpa-Qq"D>/Za2J)gZZ*ub=u*e
%BR`J#[!AD`"0g"p!XJNC*Ep6WaZj#lJl#\-KiQrE-OEt_=4Fn$Z`1<p\Sri<%o_<N96FC[.r?$>X&tF5*tbkuhgE8!3P;U0F[91^
%]V1$cA`:&,0.BQ0jaON375l5Xl5"9@p+$U_`q254'%iVs2GL+/\hTEpIAW237,&#&,&ds#6o'hK8h#rAn;"<%`&OLZ6PE!AX;Yje
%mZUUpS9[-C0Gp:s+P%Ju>XTqCBJoKj1'^mGK9JO63tJ\Cg?.puacj#H&YNNXhKhrMM'U;7<CqX&VonuAP2fFkSRcm7$?'%;V2..n
%($lJ78aclV"sV_#=&%NJ7`k@,][n%T6+=fbi:N;E\m#?Bg'OWQe.i99<@o9X(`qO9nTF";DUMgo$k'RAKQLdR6bnE2O$eVCK#]6T
%l&Z\.j3%pTAMTDFXC^V[$]ElE7hX.7Lr7-:]oY3JU=na1/7Z'*aUp`?23mI9a,`i[09aoIe>n[h,:`qYj]pjmH0/sXM:lcK":@:O
%-7J"(",Ln-m(-'=+V616WAT;)o!ssI\C;E?L8O;59^tbRc'*s;h0j*/dVJgtT`c!AHnP$G(agO)bU'rYFXrKVV;t/fDY#,#KST=<
%cM;fM8[+:N?!5uN]R.sbn3BQ)$E<,K0u:=@I^"l$Zqj&HY0KnI7F]hE,O,VT&9;%j"GeUH!d%2$KRM8U>''@Q%7<l9BsLZ!U)`>J
%7(^&Nala-;p7uX#A[BqL940q&19t!);#k&.R4aFHVugsE`oGEJ5U`cYM-&5.b*a&W9e&/i0edWp<<H0$=,'daP4FQX:=Ndd1$&@C
%mnK6%40CEF4j<C;hM,WqN01V6],+L5E%lG?"s_3(QkdePJ]Ig&`>HsaOT\O^C@snsZq24=[#du0+/gfkA>SQlkq@Se8H,1%mu8L^
%-7Y34,5@$ak'JKRq/sI?If,/^iM[*:b[iBs8;=VsTncnFgQM6(,\,:34D3&<8M_uY(tc79fm6ge>^i-kJ`t&p*g6:.%JD)fnSak-
%Z&i'MPT0gdC8.C>"0L<[X+\OOFAJZX_^(s!!e;]_!9KcV+hZs>`[i8V!<4,I@7^6&9RK-f"_H\p"t@tn'fj@f$0\EFbJ.EqS^WN,
%Urm6<"Z(O#F:)S4?n:eHNRRusbfXlM5kkD6B[@_@g@9tsF0fCHQ=Sst,TAA-+Fs6G#Sa,*)`aCC`u"eA"ET<"4*!5(Q]$9rZI,U;
%Hn,'*LXa<r+urSn1Af0/8apCbE^3KmMu;iI]RHZ29g[/Q1>)t2"&R1n:m;bnBY]GNG@C2D`e]C6UG2o<$35usm$B2pWJFc$(5e9=
%/p1#Z)_\@$,i4[04imjuB,;pg/?r&I7h@'b1@gU%&=tTL/*Q7BARJUfOk!&o)W\j(389lo0lgA(AKDCkUrS!ZmW67TQ*f46(,pq!
%VS3C!&]c7@`lZ:*BZN?UC#$&[/<U[:1oj2MrOsm6Vfgrd0eS,Y_2;]/VMGJ_U.7Gsn(C<+mTIlM*KJ/Ok8-.83HTphH$D6>$tCb%
%F<H+?aNrfB-c82"!ZFFjfhQQsrWZK2Q]MkPZ1k@!EQ3%\Q%JUZB,[W=#;HMl-:2tkEm"Ls_+EWKhZh/5NXOJ`.ek5c;-AgZ7+!un
%#mDGAYlTnm(<(D=<";$AMZ>Vc#!re`,q]jBP^8IN*0?_L&oBuq.T*jfoSY1"@hdNBCT?KB.E"(tEYKVFXQUFUFX7iR7],*O/6R'n
%Uh3KpCWmE"7*/V7.l_@dlWlJ.b^M!%F3tE)bW%7Y4IS[riY.#_1%NL3LbT/EoU<Wg>U1cj<E)L*,],hsO>YR7,Y8WWW*pH+8X*1k
%3q9c)I3.mWP(j,q7E>Xl!Pr_(3/\8-"V2Al>hDiI[,[,ETOht:^5="(fh)CGQ,d_iGc(s-13k=*&pZc'g^(nWidjs'>55!LCN1P3
%OjGI'#rD5E#e%TaLeJNCRf/J/ctMPkLJK4n8>^RgqKE5,SNX=cH3aSdZ$"124\7]q,_FF>]:Qm!7A^FOnY"<7'Z;ndJ.R?FTP)P<
%J61NB9N4Q:49coA1'A#jHodcW(nI<Qd?QYMM.WmPjVV?m3ih6`%04f7<-+C[@TbOL"=SR*8QWn!R`&&^N,du+G>\=*-9X+r'.(1H
%c<Vff>RH_3?H9`RmT*6"lrq:i9m38(r]7X$,sRlX^.dLD`2.b-0ph;QIAZS+c_gcs#JkUY)R^F6WakX2!=slQaPR\2/tmqZ"($f-
%G,o4[0ITM%KKi(_-^7S>iJ=pO(stbI@H?&_G;/,U"iaVPmk"Ud#YkEb*[Jp(U,%l;4+oU2OK6kjV_EH1s#Gt:Z:mWMM0&@]#Z7r'
%'$:<H3)?*leeoa@0P.4U]E*//,#-$_:aBJ7SA;Md&4f;Y;7o3i!sOR#dQm->n0N+G9I%9?OTkg"6..qs6OW6rj*MH(J[ked(D<0%
%<fe0$TnL^[JEhtE1sRp;4G/8L?l>^fVC60(-o50XcIGKT&6-l\i$Iq4B*!I__BD'^@h`!tp]VWJ$GR=-\4e89P1O:G-0@-33Sn9O
%UTi-(Z!(V^<jm9LEdaW%m<R>C.K6%J$8bV79S,U-:4h9siGdSX3E$h/L"I'M[icK5%29d+\hU)*m`R)I9o_gK[PB6T#Z[1uX<#h&
%VaRC/;%Z93EUh5Rfm8iI+p%-pM5ut9e6kA#+&aU4B3&?Hd?)!HimUJ=rdC4=$6#<Z9NN;[egZ\%Z(`KG<e]RJIdVHa$J,A8dOp>B
%f5(O!=61,Ob*9^LbiS(3iWCas=W0&-8!>\[o[Ml5'`"`XKdJR>CZK#hVu[:6(XUMsqhlF2]PX,`W0$D75ckHl)Si5G7Uek$(F*%/
%]B%)FN&+?N`>/!ikOf787`qto+H2LYpne`<d+D_uDj7oFTJR/!j`i0NEeXmuP#87gSV5*=`1^+KXsQZp;m?W:+bI0G;-$:,M4Bh)
%8"!J>%%p?i^uClKV`GEeRtqgO;i:Igj$!.UibB,\"T'L]]ouBi1sR?++;1]*/SUE5RROof4EL.@Z4E[e0'<=,`WLfqML\_E:pt(W
%VW'C1pfO8\js&M`'.oAFhij]r;P#)VA!S7QUOt4_.eY\/L`dBDC):P#Se;jQ(?;]-Osg;cKmOJed^)bjb>N/aYA18m2>)^E8\g4P
%3!(OuRq+s!.7TGf3\h7DeiL4VWMPt\,[?L+K`V88fhmX2PTo%nee#;$3>3OI"p(DC9p7=[rBM08CqZS88c#7tn"@TjM3\`5J?m6J
%Vum`aeKM.bnrH^D+:6EQ/GW-*+^0R_$G8!F'6VA5mRJa&@>Eem%7c88_epp(J:,d?-:Hhf.;4<;WZti,&9u8B:?Y`Hl=N$c3D,H-
%9#b8jB&R,!g^jW6#+?QBgd[$KAXoM2`K$JEpo.&PU99PbTNs4T:"7)pcp;&u1:sjF7Gst`'S.bH8-+Aq]'UpHO!?SRJr/OC(WJM$
%82T27NKa)S$JBL#j+oZ=<ASE:29GcH$_rB";(r;p"NiSZ.?hU39jB;mX?`3ga.gYS:(k-2+VMfl83P15n)es^I?KhJ8n!/"7'QXA
%0')CRc!Lq/>Z3#9OQNd]+`5X=c!`U+L0m\U(YO>E^bZL\4jjOI%fCeD?-pe=+;9.b!mDY;WAUn&#:spJ2.f\I;"rV=3Od`f(Q2-\
%"j!2FG"UR-N]@@rR`ocql$&//EQI'nmYbM>=0@G4oXc:?.n[6:R)@]IL0$et7qLWtp`::Qk#ucGnB7Rd5n(Lj8dt"u^3ia'F.9OZ
%$7H_[EhGW0Us9%R*/IDsq)@[2(poZqfPaS2c8fbsYfiep9cJ17bQs'F.F@0JYN.]c3F[4>r]lJ-'Z1L8q+#U78pH.3k%%Qt8\LdS
%>E7KYEp5)j3CR$EH4@9PWpuoH5g*#-cNf.TVf-he=AH6S#$s=d+=nCa/'"D5!c!9eScl4D^rg*:$J>lmE[Zu;YT3p;0DVH>)c5X!
%@/^V7*#<S:2BFj>W+-MeMN'5q?is?H;ai.U2*UO\)fcd$p0!J+W6/WiM!tNRW!SY\KQ>?01OsL4H5;k]6:CsLan#^_2A59,)(k(5
%']nX@JUrDQ92knF3Au-pbDSZMGC>:[DMCh[g-T6gnGu;n4ei@[1WAcL+(=dRL*ala!I,[L&l%>,'U'N-djA$bng65mQ\a][Mh>+4
%aap5g*SKr'0b:;L[X]T@Q"seI)EB+u"j*#P6S]A^@BdiWh"r?SH45e'l@^je\=et:_Ch)W)S%*7gM'&,oTVoSs!S^E&NCW90!OoP
%B[[;X%R$=9d1qT[.MK?X(Kf`mWneU.3GPR54,"lVMC)lc><n<,R=I@&0H:d%?mpWm2bCmL!fJ%/K()VcE[pdGlhkC3O'Nlj2_!d#
%5ic)j8o_q7Llt082\^:;-$Y_bOK28k&EKs.Phd=1*)psq.KDJ&,Xo#s8H["PP2]ADAiE>7ZQ2T`a&2`&E*P9M\eXaY/?m0g0U"jq
%TuUqX=;jOJ7g_&kr[iZ@Zddtih!rln1)&G_9/0ehN[G,_("dL+R#oij;9&]F_PK9TT]8TQIu67X"J=:"a$EP;b(0d):CsE<$f\Z3
%K[iJ8$IL+l_AmKa>Tup@?t$([ikAEsEL?T:IkAIUiJF;A"iVBMaI4+eWNF=GecjKHe0HtA)NS?^18&W_KI.!^*B<*KM+"8hoUX5-
%rIaE;#g,+478`Kta@*^=b)9YdP;>8k3MY5<ao`h<a:)JsWZeL0!fY$ha]VJm0+Qs$&BYgYi]`E&.1U?[bKdoBDodsVAh0#.O:<VQ
%HiYgZ4J9iW>5Bc-A_=19^u>n/LkdU%`>)"b@)^6Cl6V.EMVP3FEWIX"SV[o+'iQ*u,F),g_Ps'cPcc0e_uE'X8#_`He_$'WGiDnI
%GR5`-Nt57+;)IgadZS$q_]_R5/.3lr,\@%o%EGF0aPr;EUS*5M)"Aj_C5*oB!q^"*&I3kq$K`2bLo3cFe4lVRQnB9>'g[3YjoFD0
%$u5Rr8M-M@+.a+#+>)!YP85KDn8R<LB0cMF@q:aSL^WEcb%W$3:dGSH:<?6U!=gLPji334E5OE1j9KEZJ2df[5s`Ce'X-0k1E9B-
%5:NNN"=I"^A7Pj^i[]DlKbKK)(D(ST8efL!"UbQu'-g/oZ,5HRVP,M>GZ7LI71,)NiTKAhiDJWX'IOmW3!T-mR.-bmnH(!VT`G95
%X<?J!imeJ_4=GOR![9a?pkqIlUI]6cl\?%gWG8P'6k"TbO),cU^LQIH0%Xe#i:r^FXs83%qje4K6A*1OPUWk2OMS3.S)dfn0K9%9
%]N/qnHiQen<OD5=KtNbNi)uRg8t8FNomFZ8IZ9mB`@>Jei2#D0!=>>TLQMVR-h/-.n\?G<GJJc*iY++)n4DE^9/,jlJJ/8(pa!X-
%M?FDDb[&*ea#1u<>QP!KWHp5<olK,*A8h#?"MBoFRfi'r"+68J=b?]mim:gPJ2_I<.KDFW5Qgs(?Rbt`ESGhsCcCj%C*rF)lsaWJ
%&UY&a>7?+<r1,jOIK4j:@=e;m</(9g@dHoFDmDjD1'g"d,aMbP-3CS@ILj:(n_8j,q!B[/<UmeG>;"jJ)heI6NM:hgfqO9^"oFn4
%mO>*k,CgPXE4?a;I5@H^oE4H,U2\g_YCV*t"H,k1.>%9,#JZm]:CGr:clDfn?GLtV9Z[>E^d2afZsdA"?4k*l=PqKYa[r4'hi2/O
%%[=gJ,1Am2>QaglcI&GdhMsiHUmAFJHm>P\6#dZ"hiOL5m89DBM9u&Ug`fRglGB4p$^gBJYbN2Za(ttKb=T)&`(,DGl'E7E?4\%a
%i]DB[cS1#j0Je`=RKIp^XG*Cp']1usEKD]`2t5<WgiJMDmBm_'JpVhn(2_^\+HUQUJG/]rS5a$;KF_UQG+]-$,W;q3XuBl_NW9ej
%)TnPQ4C?6`,g>(L2bR+gUFN3$+uUjg>!]jd4c.ZHZ6BQ!L'u83(Fr$#Q6CRL"fW=H7.6ca7KrERS-7r7/"S[H+@.h/c'-NNWuGa/
%TaC<e0Q.?BRq$^gNfFsD6?se;KJ;C#UDq!B1u/>"2sD\u7a6h"TO>#o=?q-BW^(j--C/sHo"H9'%oF@+8`0m;8D[TjW=C%h$Lsmu
%77HdEpdWE$=<MnLm*[%5,]>MMlqBk=`k$6=[Q0L0;(9=Hn[NkR':Q7l,+s>=m&qRXA%OImMZ#5M@2At8VXIO3U8JkGIc93g"7eo4
%VcPQ>2BGcs<T"kM!TZrd)3h\+5i*1k8rb,"ng8m_,1,DW!*kU'doh46Bq`K8`d)!!@.0FAh@s*[^rCud9eeN5eUcaT9q6a+cN*g'
%5sX\7MW7E.[fh.138TH/@[+q;N]../1H;`!GWUL\VDJXrn\tcE']K:V2[+!o117a\+Ku-(nRel%fWN&84"'^-%)s7V;XD>$(iP:Z
%-;4(7`uAOnqc"PRMNoFaBu0<d!q#deO>m-$dV9K;Rj]se(m$[)AF*Y)H"1:d[]MOGLd.eZ5st4?#V'kkc@NX-!j`pu[MHY0`]d!\
%nqNE^&81/shD!-8\QFEq>N2;]_sp3975"HtKCNhN1V3h0Rp)(65ePK?F4VPIS&1:<JiB+haNU_.hO"TQX"?WMOT\+.68?-B'5UU$
%n0[p?JNc!qDqJ>%l<b.9&X:1)h?)V0;*'7YC_$A\'R?SrAqf[XJItc`]c4_E!q8@g]3uCIlrtWeM6)^OI%epC<$7c@>3F8g1i4o&
%'R#@.;?G(H]9*8ePM[pb]3F3@3.ZC/9ojjF"h0ud`Fj'C@(S]6K!e<r%<TLbB*Rb#3q<@?A!l)4![etcWC\ffKqVMnDSBZp4)+t5
%2hUK$WD-%)m0K"E:luTU"lL$3o,"(U+ELl!@!31aja%WIRg=oF4YXL)9GpujfhG88ncXj'%13,,0/:(Ig*TD50Y8c^K0Tn\ZPugU
%N8lp12s#up@((Z1,7B-Td1isW?4pn@c;D31>U5Ji%3;TBJ?GVi;Z[11*=LA78u",VD\a"DA5F^i2c7)djrCduJnh8QPbN>"M(!uU
%;qPtm?Q;VBJF2JQ><Gno];]3OFA]#+0<V)sE]4:h>inqG].G(*J\+4(!l$m;]0YPo<Pe&L!i=[#DDtG&VUuluRnS2<:EC3d<AX(X
%\=3n.`:"JWh5"(K#`Ab.K+ciP-,A>)@/u$BF>oC4a@Mu9WA@<5Aa""C\,s\P\spjs:iqCXGI-9O@,:rJ<<ghKJF;RrO'0VcEX#GR
%=[8[m8^C8,m/c$;iTJ(%#e?EKeG4n+E]6kj/Bj6gM(Hr_`+Hj&+h@m5:![@sLH0<4#Q9!EVA6un*/[WNJC>;kRXYY!:%BMRq$V4%
%?5m<1(ihR)73j1&(?,JW#j3-cKnGD+r@)bGRnBuZSJZCVZ[t"8gs(S>&-d)4)/#CiSW&?tWNn@Y^tg7eZEIOK?<k4/_Ri)$L'#3E
%\Q]"=RM.'e&o]eGh)TI5&)_?2/9>e@!Uds^,E&K$GIsY>Pioj<PVu!n5mlCA'd5T?8V"EEoV\\n$fGnHPGkFqh+X6b!:IS#29[la
%0]krJ)@X.qY"6hj<9.peE$81d;5HS:/eXc4!kFfAM)(:#>oOb]YK5OmE7k*j\JsU7"]0hkTdHa)@E@7u+fF'7\Jl(@Z=AdI%3I#<
%56SJ8/k(Ib*4Xhc&u?9o`U*lN"7]6Bj9GW_5MUeWL;Aum`'OWj(+51ME-I>2VDQ?\#'CR%(Yq4s0PHTAG3:hOfnW=a`SY0mh-!mE
%2Tp\p[7'AYde&O8_?`=?OEHahf?#q*9'g7%i6=#XP1$:$XbHAb%B\@j$af=f't!BY2nrd?"!3A!f]H;l,t[fc2.O"="7"J+$^bfV
%1.ZW2&kT,Hh*BuhBsWKV-H'r@fd-SH9\cF>.RH'">c;TOd#Hqf@oWN?d6$H?-pDjGAEto,\VlbL;floMi,Gql!Ts[L$Nl"+Z+11#
%3O8UDln_$P/#"/-(FT!CF'rksku]Df2[E9d'Za,OK<c\F%ohsPNPIdLOTJsGI"i!N%0D5$/hjiBa=IP;%3$gkOXh]$d8N.pj9B-8
%_2TrfGLd,DMT60f<m#Yh^i:#f@*C'!!5G;UH3N?s"?*;4Ydh#S"p2aQ].[6''5S)p,$t=i;eRWqq%F`c38rNt+>DSq]2[-sJ\k,-
%_HRs%gf[RL'n[G-U5YiN"?-bt9N)P5nZ%Eb-ic13,hUH5[hU%4i3t/917!L*4n!$6Dd*Z``SN64`)<7FislIXD*V*AT!JE8(TA0Y
%E8";bAM.B"CR1'/CXuTd1sg)m,Gqc"ga78C9n4FZ&iEBg&@\]p\h!ijX($H,i&9"Ea?unNgV=Q%CL[CSh'Oj9.bZfQDK;W_fX?38
%?u6FS5]$TF8*`uM!a?E"blVOi.K5RKCdTR-ObH_#."5M1(_2pMOBDfdUE7A]V&@K8Bik_74c2?H*/i1X'P8;KiWZWW$Tk"U.q&Ib
%NI-t0%u&\S;1KT"AK-L=D2e_?G+U$GZl$kB%?+W!Jnu)'6<-SCOZNYrPNK"jgOt,S"g=Gs8ij*+^&Zi`<MeI^!SO@;62j1Sfd7&9
%"j]KCWD]\?JrT)X&\6sKK5BG0SG#[WHBTK+A:>d\Ym&3,OXUi/6+5Gt)9RKZ-?CCJrg8=SP<FjKRhTBPb:LsNODUY!dY:n4CuZOT
%k+uO'%g?)j[eZj\W@'F%^g<am%:bkU1kT?$dB(4RdQB#32MSIG$H'dh`&?`/&mnd,Ch'=^@Aa[kfS0fmV%DCC#WX/J!O4fK?]1r"
%IO36G+gr9>UU#qs5]"cf!jPH7T#oBX&DNjSK\HQ:S)?%m2ckZL8+>\n3l'ARL_M2EZU!0_%d$#)7G+L,6;A+.KP`7rB5T@6[ZRU\
%i+WP'NMJFd\X.^9``8OpptCObe)CA'1-c!:inonTjB9f3TPKbiLq("4CQn^QJi"0JRjdM^\i*J#s,t5sW@uCB=*SS.-5Rr!_eZSM
%FQ0!5rnTE9XjQXG>?)[8)8J/9M9&MiptE-[#&Wk`P[3>f7XLeDUXB\M9'IZh&1Dh)'O&+>-KG51)ar\SMQ:#>b?JD_Mk6Y'W]!g$
%Xp$K@QD.d)MQ%''6FpbFOP3-\N#A@5.@NRUJD(!6,9+u<:E(U2WhbB5S!cT--8D9'eUV\[#)tX32B^BQY<pXDF&;1VJ8#[Q)LJIh
%P]jL(5(]SiIV(:f=adXb'Q(]R&Su:kVP%ls6*R#(;+r30$nj=hZk5\l`^PU.L;/h//rH;B2.gb-TM68ENPc=Lf*V'QilVV#*=KnU
%/`F#JlG\%bJt@t;IS0T?nEd*I&.@i@KI7?]MaD&TGrHTg$%B[4Nn7[FOe9iG(P8*H(c4c,Z_:DsQL+`.)cY)_P6?9O=cmDn6*ClW
%`R$8Z\EkL:-\dqXV#KrOB*>]SKZ^`T98\s.$3t:Z!gJ\k(NOOKE3_2)/jgp=fh"i;.nV]4bdc<U*$dTp3e`/r6O.R:_m91*^kfLq
%3CGcC)R>8L6?^cs>)c6NP(g@JaG.c3'q?!\)oJEkY41'Laf5Jp1.0*"Wob`iG"Z"g;6[<0Q9a@g2E$/_.>h3#Z%7[%L($Mj-HOE(
%KK>j"*Q8mF/p7m5KY_,MTT:%rf]6E`(_)2<<Zd-k@O!Rd9TKQXlrpb7L4E_l`Applm&$*C3@$Lf4H+fRbmU1@%2u-=W`,!/;ZdZ%
%aCOm=88LfK`"FXMP%GCjQj"fpaGj"/'GHu*[g6V70sR;"[TR!Ic[$:%Cetrb90ohRP6AZI-oM*cd+Tos2Yk+_!'>1WH%LR&nJWf6
%M2NWu-n$u6Sa!^a=R;N?k-,f=Alrl**0V'@*iR_n&O_=]@KU:o$8<tU2C&\Y(tg,p$4\6M>:C[Q#[[(^#S.lh,;7^O%\$@O`EGoJ
%fM*Kj(#tbMQ8)[__BqO,5j>0"&.k?7m&XmQ1Cr=^%\'h_=9fa&WH8Cu:bZ]@VeV[f5dVl5.`6lH(cDgU`.<V:_KhBoR`f'DX&?4,
%M8I?-7C-11,i$V[YUP9[9+;7G2U/m2ku%Q"2Tc(0)o#pR(^7gs0r=FL#)3T_.rqr@*"3cs0)_kZfUsA:D.?u+,dIfrodgCd!Zdt8
%.Maob0"A>F6X`n$>.=_O2N<\5TKlpI.l!eqfTcA%/9q_Z:"1T11`5-Z']MR`Kh^oq;K*CJfHcJ,mPSc'Nml_l#oaS=C03`0P9*HK
%YS7K";,1NW:h:[O(eXJQTWh"mp+[(+Cad2kpnCU;lt3-3A90/81;ja\M*bX7B#S=G":Ud8kb;=k1F#+n))t2W^p"-(Xu8a8it_9F
%\@)CTVO/1*]a5N6&V<8TB.f42(m0.TKamdU/:p,q,@ZAMF=@n^g@.a>5[b>7-(.OC$Cgsp1g3>XL.i]Of\#0mWfg@mm;TaYW>._9
%L<doQBRth2eni>+(*m_;UoXhM'K3$(CgUC3@5De#o)f>h@Mei*$5>Bq-kgFuL!B.\,n)2<"qr5gj/drWP3h$/'K4Y*'cF\^C69/]
%8YN@[$Y?F63>=A5.]4tnY\=<#?m/A!Y_rg@a;bO+A9fRj@?^YK#:E@#6m3Mu!X]lWL0>9>Chh"/7%gc`F!ldh!t(M3,DNd,XAMA'
%<[gX5hC^$(d'..nJ]#JPfO1I&f49Kmi.<s/2De,d&6_H)HC;WYcR<iolp4Z3Cf1R"PX+02Fo*f=Yao0jE+g6<![sd/J[!7W.4%e[
%`$\EOLlT[^i5[*#MfGuC(!5-:Eu]!+_j;)MCs=5S5/k@82P`)]J?V&R)MNhZ#b,ZW;S%JI%^::[.2+mqYR*X=+uck/@?^;>!&G;p
%S'I`t)pCqi72AT3#oeOkNa5)j-;,3WPUqp#aj*;I%17e`'Y`NC$C_;@"YkeLVH"a'\jBhh$_HZi$PYMC$(Tb]JANW=Ypa;4SF?XD
%E012_XJL/5Z<]e*;s]@m$5g\s]L$ur(,hRfW!</$$QEWnEAoFbU<m?u(,f#<]Q/RW9g)AWO^_a_&Vd<].i(%rBr5n[$C`;K0/Z&6
%fEOJik5g92?4-tLQpY9mZ9i!Kp"+4':tYEsC<5#"YX.D7Vbl$=E+kS)@8e*PfigXL':G.[Ts,EjYe#C>9eh`7Q=ZZ]8$SVK@!`-m
%Y;<L&"2cIHO;H;jJ74XU*%]FOYUR&L_C$)Y)A38uq_#^h8aUOSC=@tN`CDf&!XX3M"mh/I*_En_g6=P'J2a->d$pZUAr2-\kWQP;
%_-gc`WIgA.?tUoD[fjOm@WjI7lmrodK>=XAF0S-KY$uK0'Pg;,+8FGf\)7>e\rr=sr\MPF2XK`Zq(tb2CZN`;`0Oe<dsakpTs#'d
%6ItW0o!JN2)tGk<cA:.&R'`40i!&O+LlA\iYh/A,9m(tmP7O^JCRE^[nq@MC)MBHVE>]o&6Fn#j#Q,QMM*q;O^hXWETr`2P@oFCo
%Nd$Hs%DqI3\8)8@1:ZYC"i;'hf*M/'a[*27.H243LdGALTB[??F\"!)$I!Y>$I4NL9qJJd?3@`mB:KuPJoQd_#:cdV(tV&-:DOMn
%+HiX(&[$b@.Or:m]O=dcHNA)FoUk7N]J[>?X;/fW6BVf.04066a!PcjMJZ'W_\NH`Fk0C="gU!J7WF/uN@5Zre5KIb<.:K;/l8[V
%BESNSNSb=7[:3=7A$Yt`+KZ5jd0(G\O\V!ckM$!D7K=TK^]g;eMB('9=#auKg!G/HB\)[,PBaY=ZR-u8iZ&qOcioM4MIVW!<.noc
%@h#83L]h0]8gFnG@T_Z'<9IkE@1<=!V0GfLEKjQn7Bf7/TU/!^"2GiHA^G80YGNG2`--J_Io1Fr'k!TM=%gQ'JQGbm6Y*Y=q-GN"
%U2l.m>n&8pFt.O?!<jljF]M2Q"`?2_`X/_nOA7hl\HTB%-rRk_[2LctF<rDM2)(7$5>a/9P<]I,+KGgT#+CGm<[WS%;o!,Z?ntpF
%<J*m]p^1(3+<.W_.9\U#jp\uXO41u^,K6[;84V%6$<9f<o]ncmE1)g$:N<B8'1@UN@B+s5#VAoRK,&;=OD8=#0W(gW<"jEp7?PhL
%WX\&]+f[idCJe>g+Ab&@!hhYg8H8pm#,!(.!l_&qI.d_+2,`^!nPYO3d#9S.#,h/t%dsIgg2#?66;tcRS>7#=F3KT#]"k.sYF)I$
%`MEci8g#f=[F\T]$WQCD#;?^?JPo"o?\1k?Ljr]cUe\iSB8G'I3623(JCN6/jKVtJ;((H$9l]5qJsio3>0s3VXWk[Z!fadR1Y-CO
%N&jQOGf-7.S.^/XMRq]BXg3u'h?YL<[K9<!bj5st\rmOM<*X,W4d\-^6<snDq)Sd=0Nk>TL13t\d/t,7=tT<sn>@REbM]:V(7Ys.
%Bs6cE9D%Jmfd$ZI>(S45H^\1L2k[(jdA$H)38AOc)=B?TLQg6$JNJj-35VCdfP,/>d9uar&4^8JBRih_&Zughg8gI2OOKH903Ht`
%3/rm3bdjVs:I-'p;HI1"G$cmOEBT)HQ>gt8RndL0E!'p&UATT+YCTDh?qUe.C`;G=Ni?$_BaRD%P[a/c'_&+3.8p9^Y*u;&dl.I(
%f<5m=2)Cih$uJ%_DpQ4r'cYH&VNVh+oEE`$lk'ZH.7hnf$fNSa!]6H)%sEL[%EK*D@h`Mn=<QsX'pNDDMR45c;=\0!(Q<&fIOV!a
%+f=3NeH//aF=1e*Z.S:QqFV`-J>5uG>2>)@03t,6)$uE:I$5Z1d`o$_@YlZG.clL8[WL!H/.*s<QsIk*=Wg?r-^>tm=;pF;C`AUN
%p]L<p(U2>q8g/&*Q*-9!@VF/>p)n1*"fQMTkR4.taZhXVBd5/OV3PeOdW"&A/Q'KD7URucdL/0O";J1r8>t&FC+Q,OO0<UYBr)`6
%1dPQZ3hW:,U9cD4U_.#U'jhjq<CmhNVE!!HBEcDD,cfJT'h,]I&=#ROQR)"K"bniF^:4G)6V(:\ih-S*3(F17C`(SX8Qq9D8/!0-
%JKR\,EgNp086:Mg')^rC7H"qFRd/5^F:CDPR$d4s(\DBoQBKQm^nVK/9(-eO*GtR^$6;k)QfO/?jQJ(,eP"h6A8?1Ifj]ek>j>?u
%UVUf[R-Oul1f8Z<T[EDDl4#Nf@,(n2[Xa<So6Qh_E.lP3TZ@0O9aQV>?,MR)+r].]'J:</"e;50B[QHq?+:(S>m9e"TqYs/k9OV)
%MT10E%SNI.Ka9W-BFKbrHPIm="V*k*_F3Dm;Y$KT6oRgD;NU*f7ft!IWde+oU+<jr$k?IO_\+%0_7L+A/bm[XCW"=PeE7GJ]Q&K4
%NT^M^#$!.cl"pV69k!^k>sj@$$]EqJ"W/08#u"9:U!'7^"R!#9n;L@=V.X2Y8H?O?'H0_)_TuIp6Kc9II>/%;4e$C\'bo@-$WQ=U
%'j0ZNfMRAp%/&7Uns"_mUV6aF:DU>BM-\fFJI3D:LTrHtTn1OTjCOK=%XO>b!tcFYPo$dmn-)00K,A6OcqrS^'Ioo"#6G3j$TMgM
%iY'>6U-Sn#M+\!X(j&V_nei9dQ4P^eJgN(Q\:FfXYd,EWK7YF)cFJK/XdZL<6'L`,b;CDUkh-)?U[L<;MO;4FK0Vup$P[:4FAY>*
%7=cdVQ50Z1oQA8hs0^$V>6TS,ASgNkqnLhZBDpT^^C6b7m/3hFOU)8HcTf!#s.iHSWm>Bt:Zrl?J(7%Fqod`4IIn!IXn(@5\:";B
%C[:<,^H"MC4?J#'amZl*D;Kd>X_IC[[r9%SSGn!E*Be9=:&jiESbDFtDEckReR)+AVu9,XrT`dZpA,ruQdSA&3<OsZ6_MI*n_cHJ
%iX.dQMkAm!Pb4SkW'9YLK<,-QEYG1V4F_l>L"Q-O=BH^EFM?US#^khU+qoY]:l("lYlo.Z>eA:#a/BYS;aH2JPDQ*4JsW.G7+j,h
%6F$p>`(]X*8!CrtZN]TeokT;n%=LHYD@W?>r(HGY?E?VG$LCGI1HNa9oTP#m4oA4:2o'^7p*<WYgsOH!4p#[YV+1F4']fqrpuKOO
%S\h.hk]+u_O^_VkTbVbR&Ue54"Juu;+F,Z?MsiRFe47E/mnD.[*Eor#>H[h@ij3_JE7*K&Ap\%7C8WCoO^Y1M;n@b:a(nO`3_2D0
%[Qji,+sI1KE"?tr$U+#:*W#o&=Htl3!Qc-OoO2k"qE@etn^=j=U.pJIM:X(/TAQsC1L7s,!D7eQFF%HB!B7e%#Ibt>%2)P(5lO*u
%WP)/44JGbnfn%RUe0>T`4;B=!9cAd0ir]?gO?rV&1$VlPm%*e(:o6Gj6e/Y9QAf%g[Qb^SK)(;MfbA8TE.TF1GC`sg*SK/jAD_LY
%,Si1UP3m^nj8%[k0J+2<6Qj:iSk6sk=@(=%]@J7*+N8$c/4%RnF*72R\oK/\.X6;=%Z&Lf(#)X<L,L,rYpW;&1UI>2;tS34-ek*:
%N;8<Y7>+2:Ku],n`hoc"N$O!Lac6Vk%?I<^]X`.nq_JGqVHmY!:o91;[7'F1fH?k((`Op/CATicfAqXZ[3C6S36@'r#]/t\#EH(M
%fkHG-'[N$3S^P,0b_qd4-HobWAgbO`A=rO3A?RKQFi'-sloS$)Kqe,JLTDrB^_63H70(Q6A"+#+g-]`0>p@^d#N95!f"O"#gYtPY
%g51H#n#ko6".40N-7#G?[V@RBc`,fF)KM71WIomFgsOGU9nbsAKY[gr%Ti_*]_Ml&k(1t(jQ%Vb'%3F[lXr>3TQ]BDPT=kCFPl^Q
%\Lql<R$],5:BYG/-q(qm))BINp/".<^]c43K`I*C,d_n`UkAk^T)I2u*h'8n#/FJ7[k9aRW`b21AhfUNc2L+XktL=B,)^:%dUXWa
%Qf<IggjsYYO0E*cXd5]&TbnL3!F!@BA([D*n`6_<\i,:u/CILV2=hD.bR!tTAKt+"%A+boHY9qU8uhUOAt+J3s+MN"p7.%>@WIrB
%a#5#_n"ZmV(M>i$Y(qa'Y6"s<%28Vi;m)0()'O/=/&]Zb#26RED*/PI*#LT#](OeE[B[soL#*H6,<q/b;!PAm?o%UNAPeio?*?X8
%a/4(&`qn1n,i`^m"u+&_fHNh8.ao5=ig:#f)\H3qbYTXHS8K,!iPD.NP>IjPn_UDqaN`X9ZGoU-jp@#c*Q-:keQ"QmT>7B1Nt"-4
%d`7?flCLN<NC^[cLG`5iKMY<U3FsAR^k_[8-Q^L`YmY"2d/J@2?uGs3g;bOma]Q!(48P@$`mT_qrreOa0ubQicK^[1:d>d0_*=.r
%<)p,B)b`V16?j\B:om2]Okg[S;c]<eN]FI%j/Y3)60P>$2GSFE]6LNtCK$UmhpuTc_o?ArRr!X\f)hb?abT1PO6g:PO5<jUnE?J)
%iAj&uj#)0:Hf;sUCik>pC6BGi.*mi9l07`'`Be_^B+!fE<\O';]5h8*nF^DBU>ta&Y9Y;=VinsmosJea[nBK=b9E`8H_I])'mEU*
%lRF`V9B`r"U.pZ,g@dk.O".6lD!RYa/Vb+Z96L^Y5`s)eD-W%5`Fd&(Z^BXFc,;7Ji9VM%;jFtsM:t95g+p62jf?DC@8&5$G)_fb
%@Ut*]<-leTDL#-AD]Q^om.HQ<M*%?oNHHSA:J"Y1AW=jpQsqdZN^\eG0ugbuo1LG%3+k!qbB\0p(tK,ARC5E(Z\Vq],X!_2]ju?Z
%.o("#3>+/2SY2Ep??BS=dF/fs'h.3dd#q]t6,EoiP=924@@Yt"=tRl+"?B[@Z*#Vac:mTVNA`=_q'AqmK9O<KaQ\BM=nM,35.p7'
%)h/ulfB^@[ZM)XF,e[pJ'Lr[*eD"@<-aN1cmjt,C=:^'N7)W!_N,aq</[0+n[;fZCCe):-8h;12+Yl.(L<tNqi)g7M>al7u+Zb`d
%K36rc=EC#B@C[!U7L&'1OnG@jcE>>j9I'V%>F0T94otQHX2e/aPTILOG!Zsr")HeW?"#b9$`+1=ZK:j\@\q%7l1d"QM^mI&#LFc&
%e>2i0$hZrY*3o4W5Q,&%bF'?o(gmZl/-B=X8<AmbAW@aQ1>])(@mXBUM%El<c8]3h<TLKZ[Q=WOH;PKV'X\2BS]E>$iK<_@_F>JJ
%LS%P51OEBekZXB^E3h:K@TFT0,L&t5QqL;!kRPF`Z@j"f5#U^*M^54Kd[g,_%<ngYhh#UMSkZujC7;PH6d>kkHCe85k&^t);kb]_
%5VT`?**a8E$G>n">L&atGsg32ALf7\AE+h$f=T^m+U1_HW&ctLHW4m3rd(q]PG-^sb]mB72`Ib+/TDTDFG6Hua5s>Aj/!t3@^NBM
%e\q8$nW%fQ)GdfUfd*91dbM.B0460ak!4M5';qQeL,Sn1B6[iP&hucUHVL?`q]BG)U3_bc6k9r24NVENjJrX*0KmFt[1X?V<esb$
%GH>gRh\a7YGX:19"]!?t(ZZKd%94,m[0X\oIR.I;8Ve!gYt$:9R]@hsc)0Ln<g`-SGKk&H8Z#sd0QDt55H\V)VH(;cl.R"n.%'63
%P8cQYLq^*c$NJ4(`RW#+;]\D*f;;]s=l`-K6E3d+<E5V&P'60g>mbLrrKF="_HX0;D6$SjV%U%X0$c0I6#T3G(Pl<c-V-?@Nk!KD
%&ciL_\1Y7NA>(bYeLRP.-IA1'jOb>fp\nQ,k.8.WMd:g3%qGAAZ9<^F_TDt<1Q)e)OI5.lDHNcg48Q3P!3R\*Z^7>A1Sn`0"N#A_
%c2i/S.1(E3QNh-_]dNk=<8t<GmCf4QS8<[Wh!A&H>tgfRJZE\p6!kg\&C_e=p6*Ys;p9*'ZY+V5npR:$Q2jEoVY"?Sf2>bOU!g<J
%p%X@]5D[uDMTMB5#u[A(9@S?Me?du+;q"K>2Dkr,e#d,d@;!N3(#^YH#]XKH(Rmm)$SW5m;ncBtgQt/V.cpEPW@J^*0fqeKZ=dV\
%fe9XM_Sje*40E#a&;um[,uH/_0We"@ZWh&sT:gLV.<8%'>bFrO9*ZX23QkXOM#(`Z#-met]'kePA"%H8RiU6>JX9S_n&40`6P-,^
%iX/?V#>1oP8"h`RY#5I]LfnQ*2g_ug`eb`+iL5<D;Gp<?S!UYqd&\QOZ;.!hM*-]4%]q1[S.d1sP^A^c"-55OMb9^&a"T`BlMC'm
%2\a%?9Lk-fE=oL]PK'T+Le&(`3bHh/p8qs`oO\\%5R]+aMNiF.#ik$WRFd\MM9hD-ZDkn(f&bm0H6@K;,%7EE-M.ueTi&)4Wsl.I
%"Sk#h$)*jb`G`MJS4`S^3Wph)-h/!!?CQVn02.Yi4.+hb%5AuOXN#/B/gV]nBUMs-;1r>o<KPt&kebK"RQH=m[BU""[uA.XLSGX8
%#cD8_3g`@Lf#<c>#"3*j*#0&nie7)6-;M-0Li1@mQis>m1Pf[e$JlVNfuT:!n*SE,2[?oelLc?^X#(Sak.BsAchHnlG216UDGZTR
%LS/*"k[GV:+(9X,Ldh7B7Ee)Li#pMg4>WH,Sm=^#MZ$kaF@:p@Qao*XHQ>Y*a]TH?^$.>J(Dg\*-*$<I]6$$bKt)%a"RAA'66\=)
%>kf5K3JRLcC(1W'ZH:+$R=[N"d0d9MN&.IK.9V1R\GC'Y]U@7rAglln'YmkTf7kt$S[00$2V^UnM6*dD+q&B?as7&3`.Y@ndR<9?
%Z^#B)3D(#V2`4WeU'C>8g`44ZGf^#>>+E_P?6&;]"FX(>BP^=7TtTOK"iRH7A!X>cZ3V+cCTmBUo2;Zp[kU8YgS"o2>A%B6QYH]/
%E0PSaB1`[I23KqC;2C5iY%4jCd8qVT2<>Ds9bn%U&q:">@`lS/`u"3h+UeZ41$U[)cbk6"oI25[h\0!'k4aPUDmo.eR%!^[9GaJD
%`@9V'D(MAra@PAH;q9m#7/1BgmhhP!X+YG+egllRDOVP5gdJK(40`N"WgQ2Pk<PIP4LA,F^W6n!.^.`W+qFlk_mni['NFbrJV89F
%FObL;Qf^Qt2#Vr,9d_Kr^olk]>#Q4<H58d];4[T.4:Xc:oTo!oO9]bTHJ)'UeLsH9SRc,=mlsWpRInAg-#4mIHYFH4/)`pI/!q/@
%(d33PB-_lF.#k!H-M&'Y2H(;H0Y9)2bt;+T^8cFT`X$)i,UM;Ha@,=!@mK^A:$W]ZR%DPj8ke0>(%XA1aHI5A:Ok>M3[AZ(C*#Oq
%V<:Reg+e[j(G4V[5]rf+,#?J,2C4]h4>E;p@eT);E`9=M\>lB\W\$eQ[iSMNbj:`X:cb9`ah\6D[chk1kT8?r-0_tIO@IP^r8bp=
%D*!e%YoB+k=[<0WiZrm*8!>c\?se!tP5F9)l0>4G/35N5-f+L'X[/b!<&l(p=ssQ)>/`O$\bZ^.:nfF!Y-=IT\okT]Tt)m9kIf9'
%_86]`_H,J09h9$Lc!3NY7\Cgr5%eRIRSp*(-kk-$##dmV9n63@@*4kL)E4,fTp5m\hEkY/+;7[K1=eK;D8fYF,QS>YBrmm^K['ir
%Er;Knn&^V<Mejr'[DkFk&jf7A-^cr65"..EL\7=;)ha&h*!#959MTbQ'@mVKftk6'+pIVm[1XjbXVA3'oYs)KO]@CORHRLEWS*7P
%8i7[M-WA!bGn2ZgTgFtTZts1qLf"oZR=d$mW*C9SM/kjkY?QYi,89`VcKnN=*b]?[*L(f8+=Z13CY+BOS/IK^]<033%r/Vs!T^Z0
%fqOH\.c0qC:.f?b,Qo0:;-l`hQ&36=4eEo+Fr;-KPDCP#B5ITZL5mP,BI!mpksT%$Or:-7[B;3sQmA<B!!T]";kKlV;]&>!KV<Ee
%ZQ=^71^*/X]ok1]j<Wm:<h((5W-/SlU;!$3fT(Q^M$Sq"YW@)8PlYZn%_=6,lDC"/f#&3Ol'e?q`iA]#FsfqlU:DD=e/XpFJCDHK
%l@u8fMO.KLr4Np#d.D'=cS!lip9I/uYri;d0mXHjXbZ18[$=aR//9\&W$_Rh*fEOOh.Jl]0n#f%>@e-f'7i++^smUh]8`lO#X.@H
%#L4lO8N81^#dtLGN!p9$>F_gmW!^BJ`]e)dQ;XT6d)/QLVBe$mHh50g:<-b:([VS3K'Y"#f,LE`)m=9oQ%MCO9nUpV:NDSJkZ*]f
%^,g]rDXq>3o%D?*N`!0m$tE>]3k)1VPM)FLLdIf3XkmWW%JEJS=^MZXmYi;Wm?jVb%uaiETNNNM%eE4PZm=3i+KROKenJ@mNpBg:
%(7JcSnF/;\'2C3EM4(G!.ruP[/l;tD0.&#,n!2]hYJ_^^1mnfCUPGQR":[%[c(^4eNG"tT3MuV3N,mFf(u*!\:+,0qM%t9=6B!t5
%akIb0OsnSV<Sf"*f979RY*XJY;AQ&^B1jU<eL_U1NlmQC@]0u=<;6j,;c)mGX6`CTLPZrC"n3oRRR*!;?:FG9\0P'/UF<o,>7akJ
%g]pd$@``A*8eusgTGe44M;g8j*bJAWc$TIG4]UlM=mT'PccetiRRl36NG\N8.!*IY5PAY&<gAi%"XWaa&9t+U:fMU2T`*$K8/u#H
%*HhGQhaB*@,m1C,(4rZ2f>MM_Ni'h=NCYq:Pgdl62AD7CZuL-6)@)N>@gUj@`IH%PZo]K9cDoj&ATLiup_0qq;.Un-cGiPje&Q0W
%%P<>+lc$#leY3PLO(Kpf$RniNp?-+`=RtUVb,cMK(TU8R\.aW'--&:;HlqW(PN(1f`256gQks*eHoFJ5PB&3I.Fnqr*dRG="B4X7
%A-!?/UudC9e7T4fA<SQQZOo=;CQ,^2fHVYQ2[e)0Am57GQIoD5GWsL*,:6e2q(5;fD[7mH'*k^9`NF@5EO>mA@?XBD=lj3M5=i7Y
%Dh0ejYu0OKE[?X_';A^;(IVh_'DnVoLco31o^7Ar'AGfkjdPNH/2?+4RBqO!.#K>EK^jWG/:k+2Cg]DM`QIMsa*UYQ_cY&j@6.;'
%BpHc.1$2%%p3K_s_3V)=frf!\8h.4b2gd>hbi,G9iZcnR;ZXLT-0AD0NNIs#-?]f0OpM/"9fhCWY#QaBMk^S;&`7.SF"q@b'%&==
%J6?I6'U%1rZ^Fb8G[nX=;tufd*`>jiY<e\@i6#R@f><)TW#-1*Lk@2/=:^ki3&4iNZ;A'P-@R;)!7$qMLs%'FDI'eEmeR1m78LGI
%6-uaILQJDrH:VAM8Z0kA`+be?-I\bRKQ3n+]-;h#j],V5J-bO.7BEF,(`/;U_q?49Be,$fSL&sn@$2-?#$/qF2[XnA8YMT?M>BHf
%"5TtDS4jRi<Lk9b%4T:j/hrg6,$Bk',j$B+OsVKnOk^d6n&-2$cGF3N(CJ)PF[8aU^""8.3WdrsoM@q0!A'[Q"'B>N?1;KqnhF.V
%%MdNQ%ru3/'V827@+6'T3aLDaY+_SQ;cUeZi_`Cn\a"lRS,0I69.*%.[gk6?,$B43>d=ubLFY8dY>1K'R<5Nc,QU*Nlm$Mk\]IaJ
%_hb$\/DQ*NUR?f^Z6<Sp.ga6`28jTpW\S+F)R#h;=a*FTKs0@$(ajk`TlKK%+5g`X)O+DuRP1kT?@XqMH5X.6+iTH2W0gpO]<Qn6
%,3',;H'5ccgqLSoh7T5-Vdmi7A9sR`TPIYIIMIW?R473s]S0ftq2pRSfGN-<M0N`AV/ZseM'be4%$cH(R93Z74VUQI-&;#Abt_5d
%5VqrL!,+M-r1_li!NIY.h8k=WHc'aL-YeNYTZAMF+__uj14MaPoN$$q`N0)!.Or=\2bc=;@Gg-VdmH5RR\8h8jV#G:3`*E1$K*C.
%4`urKR:fhleYrTTq-21/7(<@-Y!hZiBX.B<-rJeiJO*\g_ata^n#Im?G[%NhLbMS%1p)=Fh*m-aK.ef.$P?Km9m[0*blCM?pg-FG
%-r>Q8N"rknJrC-en1*TuG/o0^A(EK/-IR%03ia07>pbQV=!s/D9Np]61H7lI(N*]7"kC!/pI<?E`$T](TR9iPC6\8NR)_k.R$(@8
%-de/9V5Of9"2*Tkc<GmgQ^9UL!$lD=6qckh\;<7m-r(orC:5u<@JNiB3j:^EgXTch`5dI(jXo&cg?G!!B(HT__JBH<%F"Nh&>j7]
%\T0jglG2#k)NmbuM<2bNCss0Z8A@I=_W[[q3dMirraO4Z-.sQLG$lI+GRKh[eJmaFe=rWG+klM:W3K5TNW#)R$1X=&dZ8h-<5gJC
%Wcu1;eFklY6KZ@8U2-J<eL/boS*%q[?^iB";Xh0gTYLY\X[!+\NuA"``M3R5mkkDLEu<9PdXn>>!Yadcf3RBW*8F[QrZ.p+0JO%S
%']k:mc2`$&QsF#aK,ogr[oCYFO<Ym;LVe<g.+<'A\j1DIqgj1uHIhk8B3K;:!g9hoX,/62%qp#.^"j]RQ7U_EbJab?CXU*4P/uh=
%9:"'IL/(AIJ,1e;>o12b"!"r1=Tf.s@R4](,9WC#mM+HWbp5pkpR^#"]uQ;NA_H7^q\[jS7&Y,WFdn2Y6Q4?"VL)oEQ=`24B;)Cd
%4^_2H`McL&f;"9r!ub2rkp[.\oJ=`dX0NY_@bf&cTo,V"21$*6:$kkRf:+94>,JDL@ca!n-JdB#<t#paPD6ir1g^]>";n+:,=&N`
%dca18nMH`>7c#J)n(]^f+VUF&>1&c1"FAQo`[I>a`1Z(6,\l]u/2_mJ<BuO$WER,dk](p<"UUt,d1T2F6m&k/1(o5Q%TmR2;AsfK
%NgOHnS1WK"_kU3Rp4hB*@^$FQ8Jo4O6rO/iA7DiC+!nW-n_#-YEMW$;+J-2'h)jn#8L$UKZVO\Z(=Ghn2J-GtPEk1$$RUlNa<3e'
%8]%fe2qpJgN@ihtaR;X/U]OL@cZOr/("N-KUY!/.`@q:pn"_[m<-3JJb_`>#q0Cs>:udH<mT/:oY]\Y?Vn`DM9=.q5P3^AG3j<Q[
%2&\qd9?^@b+BjXF"`;:TCD)&^l''eJo2H0j+fZhlNPe_JF>ekc-oL)C0H59okr,:JUX>"O\PNSP-MB;pjK`S6=t/\FSm%Z;oi3+B
%Q3WHf/Ak"4RprhAY:rI1!^1/EnP"g7fpoOXM&-PQK:nj$W:I*AZV&Og)TqZQpXgi<#;gDph&^p)/8RD/7'eun`^Z&<8OXI)`^b%W
%oDEFL!YD@'JhlZO-?YDI/.0/7A0XoP&S9eP#e[/,nqi47b`48GHfTPo1#m?pm$gp/Nhh.BE8\[LKh)GXdq;CmpB[7W+esjpR0-NO
%P4:U#<W1#j59=MDg%'HXlnT!M./8ht2tB5XEpNoI54PS>7s0'`8$IF`IX0Je"(MX?&$hD_2gaO)DFJIuQ9On"5Co"O/XTrRRTH>3
%,QLnu!b+0HQC0bI+_A)ClQPORU#MGd*)I5iHd!Zh2#NkY4dlbF6H+)_M$6CKN,=<iOu5p#jm"PonROU+2:XjgS$^gr'?p5D[3kP0
%Kd#5K0aD8d,RteBI9;@`nd*n'@@[(jnLcQ\j)VCaWB="D&G9V>F1KO.h'R8+P>J;@\_o'6&?fZW;g?R$p/(+g;t,>19X2]jUJ(Aq
%&r<`''l"4mEO5R'9r6pjH6!(B=^M@_G'h1R:jieX=iQ=5GluH"V?Zm)#Hl-&P@GjmDU.f-`\h$ALLi3f>6kLgSRiOo7GgEBG/Yml
%/De704\&k=*jT+e;%/OT"LB5UiAq?8k]$,e9L,jYC.#6'QnZ^;d1hg#@T+C!fT%W4K!.>8=Yau-k#7Kj'9f5dA"1D>%rL)RP/`Q/
%o>u$)`V!='9J39ofpg2A`Mu\>PTV7ffp-dD$0@RkU)=o(:r$)<#N.6KK7QBdTm,apQnO+jEO^"XJMVPUUOm13=Cq:#JTl$EP<.-_
%6+=57>hY-CX%KF]l\\RB`c,/C$b8;+64/)Na:mCR>ONl^[Q8Jb5dFd`!+I_!JSMJaoeW"?EA]4G3kG%IJT#He^GFVVQ&7p+\B0tB
%A@";0,h,CY\E_23GrG7,!kq6[K+W]Qg.k4epOHqWNh3FH'ohDN\+D?eItB!5=/td88'+Cd9s#1c6H'CM$j^4i)^T)p)(Qij'd+b0
%&$(s?R!H//p?r(s?ehfHj8#e>-FT422/K42j(Nc(<o^H"1B?(CkT6LSUfS"Vg)MNS:?-M.$lr;&p,WdSMZn)u[S8/LgbVP@9SR+%
%=uASA9bU0/*,<k(4jV)\V2%%Jg*MP,*nr79+tt(-d:9U49&rT;*"g,)m4Ior;u'u,ls%eB2m&g,!n^l!!K"DmWTdP0`EI__/V\JJ
%65\:XKMGO&V&jFQ:t]PN_8g5KA"(ZE'h_70Q>taO$oa!gDTeo'"]"o,@L7A'-YN8mWZIOZY;\;<)`Lb='u()-NFPh/`9:W-X/Et7
%2=aT`q@m.\:f(SB4"qBgb$(c,9K&"8V/(Tci#G^k2qLak@U!cOS57;OWS%rS\Y888YagUi]hU-oOrP.4&P<WLp]SMR-bBT5'cs5\
%B*\i/!MY=Q":ei@&JB`e[U<OQTY!e#W5X;f,5J0>,akqS@OtMV*%]SNFH%gC/-CMAm'[Md)AB(u%DQ?#`i3qr+@d)(NcWaCAHrdA
%TeE6%`W/*+Wd0`qD/.iQ]Aum)@]?e3jk%V++:-PLB9:g$a@DnK*`TE.B@"YidK>cnaEl+L.#j.AaqMZB;p1nA*,dN*a>t=iHF/h?
%8hY@(l(&..7/lC\j#"d&i%q1b[[DtFJm:P\g51@F;+h#inRHj81IqhUR+!7</&1e@Ru6,7_glgQH:Xn:5Y.+\&:(8HP-f4hA%4*T
%2U0/JnH2YKW4KF$dfZ>N"(AoX$1T`@8.BRu'OTCG!XgWN8nA=Bm'B/NaABql!.u5WV!^9^r??h@cOUCBp#[Td<(S9+OPr;UJqIJ`
%e:8c\3/Ul14%-!15QD8.#q_.Gk+.7e\WF2'_B!0H<1r^\5I,ed5O6/6,:;Qg*:T[)(;M;XZD\CZ67>:N6fa/b+.)Zf5jZq?4id8E
%^=Y:08V!BMfL(:_C5@?*9&2ZD<HFi*'J)T#bI2GtoSUSSD2`s^!J"cc,]I.pYmHSo6@+pKLsMT%Y;nM/n]E/;Y,'*LNU![Jd,B5/
%a:AWKB;2t51;i[D;qlE0qMM2ER)2eKPh<Hs&q-AEi%7ZuGR]+uUYdU@$1Z]gAua=IWlVn3&@:KrLd-cQ1:tETTeS6DW_tk8/</1:
%=;YHBXos)_JP#'f,8lp0lC2^N'hOq'=>$@iFnD>`cC*A6J[/q%cR^pg>[J)[$@<`bK!CYY/lC!GS=)Bro0BK3F^$4oLRD77Zt^BU
%$6*6WPL.>:WJi9Ijer9XO4[s!AH6_g`\s(k]GZDY?Sg9>!pXC3Bgajm(6.XNhX%8@AN%c"FJ1W#%[k*W3"D:?aYDMcj=D`DYu=>B
%QqXC"/@HTJ4c:ilVloYSR2mbsJ0RUfC-_]Uks@oj)MBT%$bl9Y<]+?eV5BdfYA6FdE?ad-1CP)Cdcgh$\t_dNAHR+=-<ZXc?3R;\
%BP;LM5e5HXH%DD8fW$sI0JJE56Y!Y\&M)o7EQSq-_b%reK\\3]759Ood8a`SA"n^cWdD<g1Z`0@WXYpfBr#JVj"q?jO2u`D;KL2I
%R(9@$[]K96Ub[f/@bjpR3[QoBO2Y39knMZSfjq*[ECuHG(dnOf!c']iXd0DW.^NQ+BId6CRKi@M'<CtYjm=6ja[5[+V0tWS9H&nY
%"n)F`RjBU^k3(SAl1.N?/99B7//Ysh1p0W!#&0J@E'&uD,4/=4?j0'9*%[\PWdBQI(,XcrC*M:IWn.Mk77+pDRW0PYX)<dmV;)\%
%rR%!djZnZjTi(6_"_J-6dm5dVaK[b(6'RNCD1,fhf:6F^T1:1ebG;?o)%9h6cb2nL7nuoe-t2R0kpbjSQR08@"fj\;b,M*ZHFpW.
%*0_*/mj@-,5p4gL2lDQf8oEm_Eb^K;PTDr"/b(Sh!KlNtMG;oAQrAXQ&;:sZ3?]<``TS-O.kp0QECl$rkVnBq18k5[j0aHo=qh$o
%C3<SA5[fi0E13-(8IT_B`U$Q'/ta6in;\cDZtYie9Soh$K1^Z*n:CsXD)<b8d.Q+')@3jmC^A<1R_+5jFt9QpWSufJFIMa\_M>HU
%K-V6+Ycf'8bDrQFoobFe./+p.h<<.F2d_?"8i)higLJ0$B#8@c?.:X-AW@+I1@(9"HG23f%V@_Zfp4#j'TT:FV7@2:;FcRr&bHOm
%T]R;PJ%Cj!3*Xd8dC#>d%mUHfn3VuQT\r@I]2XG\/;46aiDCqu[jW)$`C*=NB-O'@h2@eP.Z#*dX-]L.SS\$)Z"$k>OCZ9h1Q\X.
%QE!jHj#!L1=:c_6JhnC)a`_EQQt3MM#V/>\g8K#b7CG8rO3A@G;1aogfl<K!Q8>H6nb\HQrgGE6%gSu3q6ue^0QSXo?8]9)dZ'62
%=60r"jGAG5j`-U;6jDkFF>9mY5tr+A1<t(a)I?k<.2175N&<H$%B?hYWNDK+?\\`,A=g\tSs@],W!oW%%0RKs66C#UC&s$6IK2*%
%98BP^[\jO.^mF>b5#`BhEfXH18V/H#!<nt]_:^D,l+H0/:iHgWJXt:<OUZ;!ZS(29Lmge;%%%n"'$L%$/6_[\Ca;PnAY%J6_tuZZ
%>s0's"@aqKa#;+2,,6b(oeMe,0@$5F>\4Xk%5oQo@\=?.M:W;Jp'IqBD18Jp3d(FP?T*Ta.YJeD]/p9TT#<7:H/9=01n:EcOb@VT
%^LS]F:57O9#G.#&!o=p7^*+m/M^V5G]q6ae9"$#U(E<8C4<:7db8/]rSJ_.O!ZILU9pCR9!=^oUY+QZ\2o]7CUC7.qL/EWffq>D!
%/k@Fl=h4SqS<e)$nSV=hD-oA\_/P?Cd`*H/h9YuCXTRLd9sVE?5gqJ&iL,f[IRS<HM5\_'+S$8'ahm:s!"+$NLRfV?+U6M5eJ_/C
%$/$/akP@<l6hO&IU$:Tp\V:jPn\ui?>F;E@lXXU]DP/(_NSC'#3u^bV1/A'4-WN\R7m5!RHfc]NC9#!V`-P,!FT%X5LoFSP7m\.,
%25QI4$MId3T:f&F\?)cORgdUc%TJ2E)#!-3TSBpC-Kqd%=$_@'%#(&_]g^0*0Au=H/o#>k*T9-"f)Je'cs'"PY[5CpF/j<BENC?:
%4;HChbCJ4rKi7X8M\>ZVAT:?$"S>O@I&`4pRq!;55&g3uTV.$:odPPs!Wf,`==Qe>k.2@C)+7ggMHFpEQ9eCn5mK"h/K%Tc7Uue2
%b%1ohF`VA/fTTH3,O8.#We/]%Q0]ff@_uoE[$t=].&17\AlIhh<Y9GW5%Lt_N9UYQ(_DSc*)$Q/*%b7ak1Jg7gKQ71BFsmCeVl)+
%,SLp(+>BJ,*p9e=Fe-cDG<iW>`$e&U5W&4N'$?"Q^%V&jQ$>,1OqMR^*6_PLcZ05"DVd_Z"$;)C"C'?VJd(!R:Ih/E_dM3T'!H9"
%7a_W`AIWQSCei;c#WGd,_]*+<T7JauM`:?D5VagVKNFCId$c:<'G2-H'YD%gI;*%M;"tdGju[#B<_+E[lX;Muq5.!LhT/4,G(iSH
%NDHfCFp&&'I2Wh1Dt\6+L\%kd5f%[LKrU8&P!*X'@#Fpu3Up7.cLP0c!L%Iuobbr;b_cj,d4/f@RPj;@Bg7N,mEa`qk<7RU4,6i>
%,a"!5o1\cCI&KLS'k#J26&B1\M\b]@DPJ7`V_$iig]l67&dQ>bD8e>X!%6[.qEpd`X3!>LE(<-&`L;>cEp\H7-*)>!QoYU*%)]Fl
%-2/H`Ya.t!3KK.Ef9ePUGjr5?,mg=.$oJg\pgI$ErUk`$[o,q-'S)9$V)nc(d__+h8o]d-KfGHuYR,"R(Ds/<Ak7+>_&Z=A^H]u$
%(N:aKJ\b$Z)TWL[nZ6QBHsshELra&/C4O`G`*XAVcY5Y_hAF009Ia^M'8bHPr\nhu*mnc01EXa3.f?Rf"),:!cbL2_A?eH::t2QI
%km+C-ZWR@Q^iE?e!`Cu*0V]MUW1-p_9/4eA!h^.bA0C_D25E&9:1Ito0`8j>5Zn$J!u(IVS!2Ksc0nj!2SWr),HnG3->4=cMq")*
%i[i1-R4O^#()!?-X!W>Zj914LbYg2Fp\%;Fc"Y.o2KSDLU+eA6gWa%7liI&M3"u1aeqPQ`eID/,UGd&*`G6q_*/Gj%Y=n7&,CuV%
%JPMD_(0l3VXTHikK:uk:'!e0'*a<(IaaqjaiEG=Y.,Hf!:)$;5T2oC5lMWdc2m8<?Wu@u/cjrc-RAWm,^(n^c%%G+*0aDoE@o'%e
%@CoQ8=ZTKmqHb]6RP@MG(g%HX_Pk_WEc0"uM`T4Djl$WX3<ENCY/@ZlO5JW<p?umHrmCVXXIoOZr94HQc_#Xaal1e#n`;c.'<%OQ
%FE.<%jiR>Kan]"bHU@bjpoBVMq-W!-l_AC^Df4Q!IeoDGq"`$Gn*9;LhR1\!^ZaQ=qs`O=Ml4Vfq55T1=!ngILR6o3jA55]If+u-
%e+<RZ]fs6TP:rM7*C"m`o98&#rQEC%lYVZr4un%;H$i@=r8ugBSmRIAid\,FqrX:FpgZ6W5C-u6m\dbIo<4I>IXcV=>ZuQ&o(;55
%4.;]^SoLep!,;1kHTde#O&*LdqJ*uc[,JHjF7I6,*$8I7E:Nl(BclLC(Op]*gqKSDp7(Z;X(Nq0\7iRX=hapZc[Qn2l*m4urAKo8
%gQ;;^j7Km/q.riuY*^IQD/4$)[c:Yo3hO;3me7F0>;:j#Cb@@[kC$j&=3iP7G^asdIWYMY2o37Tl-$<V[k]-,np-`i5Pt6>lL=Pg
%CY6_@n^b/5P:=1m>$i7549#';n\9S1=*)W`^".X:P<6PSo]kN&kcPkL2Sj%UmaihaWtoU#H<ZTNnTt#L/ruVf5@&>ECVuF]k,pGN
%(QJ7PfC8=6?cFp7@t*s;ho_[`SA0GC0"s?[4M888>d5]Pl2BIM-g,^D`e?g3<nj(aV\dZ4O,e^0H2,Y9-V%raZt_p35;2mMBAZrV
%41SO=>i*gU80!*S!8d\=nX#a>G+.7#S'4X6HOuWOghCpnc0dd"a=f1W]A@T)dDa56a.h=j3*Qni[p*8Kg8T6WeS_;=m8U]gC:@./
%*kQ0RVG3N1WXQXGF^NAHmZaG)Y7u716<tadE]!=LPkoU]s-O-,;f@n+s'oLIMAd9+@?rgTh,!_UjnR$ZZ]!_EOPp!?3*j!h::I\u
%:<oIQIsH'`2nrUR:>[$5?N'NlRYuLCG$@mlp<DjDq2/l,*M+=#fL[T*24ADu;Z4;#*j5#B*^5!uEclEc5+U#71u4a0Z=]d?O,fg(
%4[2)7F13e@DeiN0]+X:JdjKW5F*RNQQL2/Y/?bGp(C3lAUEailD,&!OREO&ZbjXdSg"t]P[tikCQqGtKY7<3eC;SbHCJ2!Rn+g\X
%;ZGWge,T;Os4mX&YQ&&&nsRqH2'SMJgo:^&G^a\AMT+C=D4bsnpJ8R"qXF/mPZsPM=^re*qU=K^T,_<&X6aBgk1c?V(T2ItZ%&UD
%llJscF_`:Ab'rl=_ro@;SK+5NE;-I%2\1.T(;Ep/Phg]8hoZURhtcl+Ref3sIM\W&^kVkj1M#?$0!N3#pq+/NL\&JMUTGt(/*:f;
%4_uhX[me\i`>mIuX5@cV?*0M^=>P`:7BPqIjQc';j/Y$ra90'q=,["Nrbd+k9BAIqOXn`)TC!s#&02@d\@)peKDXWtj]BKIRG7Al
%ngJZFjIHg,k<j^S53*Fr@65R:D3pe(H&L*&4NN:.CaD.bo$3$gAu<!-+oc*96iL$1it;-L8HOS^fh_(=PX]kGj*PN/]&tu<S_n\T
%2r=@i?hs+p]<sii'(d+4B$kp/S*[cIe'j4n?TtkrU^6]!HUemMX"=;&J$:emB8+-Bo&Z4aT,mB-S9Gk/Hjsl$nVaM@%4bQVo?/f!
%2RR^0/t:a>hKRjq>1k9akYbSIURd+_o])KrChFpG=iao5X%-nJ>9u>tb[gIi9U9j6Z?p=5@t!IPY:blscen%diphBomQ11/ik=6A
%>aujB]m"c"oY$1+_t,s<j#d.k(03#jY\"rKp2;JK9s_94it6FQS.>SmjQu[l6nrJfAM_S,:Iq6D=9fl?P;bK5;D\mEnpHPR^,)P)
%Cg#F/+7?Q,iRp017pYc#Ht1h7>B4/TfQAt@=0UoEr5lW9<\iC$rSa6K1VM3>a%pl5Q_!)HB6`)I??V'iS`+-mGhEs@?@#Pdbef)N
%Z,2V$AS67u`u=0enFA&`QgNU,O!i69hAD><'ntg:>EBmT=N0;la*f6YbKaY*:!U*JXMCU?$!=G:.,hlB<ifGZq[Q`5Ae$o<MChP=
%I>$GT^E)2SLAR9IorCju:[YU!mk2Y-bg>eTjg[[!\f[:!%aF5Z?]M=gDVb0tErC^_@.)#TMUUTPEI*=]h'"cF&=g2:9jN'="^Y8)
%Almnj-[<CFW)=CUWQ^H&^nFB2s"QtIVulrto_^B3W02[2Q+Q,"+6Ws`b%oXNO.[EX\k,$PHE`ITGdF+]lji_uqZ4DmfSb*q"]h.^
%Vec(cdk-k#?8I?o(XgbahFN\Q.H0:00:s7liA=d\5@#-2n6f?7:[[a,YE*$ITDQmA^-'*=GfkTPJ+:MBiR.,NgG%mOS&;"bX7-$s
%HEp-aphjBo'"?WH^0;K4r*[gtb5"/aA+XhY]E`_>*aSQo&%R-1J/_qaJ_<U">NBPF^-6pjna6>9ib]2fDW#MDqL/86WdM[=Rs;Y6
%S_HI,mBZ$7a>A(%I]r-6\o5&DIY>g@@0J`<BZX.VW6b%3`2@sG/bKt=Frn9NZ]bgc[:JbtnTIrL\d&\Ro*T_/Iu\J04/(kH#XphC
%kd:q3QU-'B:&)=/nipn5BP6]2ThFtoP2pd(jS'ljDO3Y<O)N*F#5S52+*SU`]?>2`F1C\*j">t3G<+M%"m#biOH2)JI!7M5WW_l7
%(3@$8YASDi?S.K>^9,VKi>iGA4l5BN*or@Vo();6lL=G@Mj$$p,QI2.qnfpo#km8)IRgP\=.VW@qm`ihmoMekcPpe<;GX/)%_45&
%T,mt0o(_*,5<_;8PAkcKrO1j3Idu[QajndENl4Al&_d3[jE/q`/R!(.Ekd'Pq8MsSrdn3*Mh`Xc]l\/dS!0Hbp?kr]D*/(FmP^:,
%kI+/UH229+8EGDLJ$SM@V=fcGlXqjV8UJ6XK$np.I*l*/he_:l8OngVioA9r`,5)S4a;pE]bTPm]a)[3HOM;?DpHM4Q0E\o-d%5#
%k37B2+;9eg[dJq;[g1h9Gm4$8hQm?p'!OVt&0;oLGh>:bYI6@`I]L",CGLnkU-(SGW"n!=&+(&oG_,^r1$m6#4MLahalO<*+89W+
%Y7A<LZap[a3pARRS2)q[^KbQ'>dW?C2u3:@o:oYU82g%+2VF;"R5U+SS,Hg*c*k=1guE$Z+)EeoKN&qe"TS>hnGLt+CFV$n_`e%`
%9HUI.BQ3FB*j6o84pX0;(MULEoZm)KgZhVVg\[nH3t:A.maka#jdQR]Hp]-'<5k(#N!f3e,)(<:eDEQ3SeWI<@gBbqKTX#>YIS3"
%0&ZK3ALakQ/F3FempEm!d2VYBgtTq5G.)mGI!5&W'b%iai-3<:fC&I`m4IPDq:"@W:X3%85[GL]F*r6*dkqW@H/!11mI]K;pi$C/
%imH`Ld>+cUo3'OZ9rbt[e&+$TcA,2fSm7iA\PF#TCt<]T(Voj8.30El5C7j*\45@_1u?fjem-8eq<??mU3XD!MTb_JRUs(r.\9-r
%Y$r;F\&g64:VT'jDT,TO'mt.K\am&gQM4Qpr:9F<Cs=h+c*fQpZ9lI?=JK5/X;3qTN#C^Gr8_Z/$[ZrLR"q93ogh4pO!f6qQ(%2-
%N46"QAD!;F?bSVCW9@+.)uhL+==iF?+aYj.*>?SI#B#V*=8^'fj7N/)P`*SbJGojQ[^LJ>?9&^@GNRcOR9Lh]4n^\@iYCh*h!WDB
%IHGL5b/@pE:[CVFaj/aKi-'T>7r6-p\3,.bnpHGY?Q3lU!.K7b!]/BEel(?1Yj>Dc1G1;pq>0+Cii<e8ZQ84Um@5iu38]TpYiC*m
%cF;h]pRh&f3;r(&)s#b;VlT).8\8hVqfS+uqKQ<!+`"Til0th)DklARTWQFVUVsWA.A*qEXFDYgo//g2YAcpI#HPeH=j&[1-!S;;
%=Z;0pO\ajt=CGVC5P9nWQ0l*\<u'qHBF,Ic5"g>6@+0NoSU(^;;id`'mD*FcHtWBYK1mkt:]JDV,1k/D^0=Y>RbM[pcg=>.heSO.
%@O\p0egiZ7Y+5.e;)l/8ec5+"n*"[k]Tg1eU@+CLc/QHQ^i%t;]NuWR:!"6E>b(/\<ptVa?]1W<h?QKPQ43c*AXmW.UPB:,Yq*mU
%S&;BOk8U&2>ld$F3J?eEiDCEPHn<5rGL`_nln6>6W!'kmV>%fZJ*\Y)52c*YUSHJ\"79Kj?9,=RN<[Wi`(T-1Kkd^1l.gu-g`'sE
%(TJW/YRB"6q.1?Dr2q[)@ogq49I[T/UDDXoQ$KI1'0BLedHPD,.sE4#Wn`Ru?Tn6C,AqBJC*g"7N;#O.B$DTEaX7Th-WlLT]<c2+
%)sue(>;YUiY\:,+_p4urDfsolG33uaNL`Mu^9,W)U9V%<4;<^noU%0JX!Y0ZB\ZCA#!ki_Do;,.'S_ktB1@M'j`TVAD't)6iS-D:
%0H4(HK1MU:cdT((qD,/Dql71i^nOr[Xt&"TXGV_lp%[%e?!W0]Ppl1T;@(mFRYRVWmOBaRoY$g0pZJ[IXUsB5qVM1<_W05A*aped
%("(&4:ubb7X.@,:;ttMChbN.b.==42mu],JmP-/<Nsfk)cUm(g%&a[_&-'WtiQM#q.+%Q-6i?MTj7Tpi4SNAT3;p#2c3"^<mWjoV
%)iDbMYB,!FL^n>q&q.aA7lrW;@q0H8YhXHbonEl5pN8)Mk4L*b6Q\T8b\OZ0ChF5.1p_sY^:/VOoqi5o""q:X#i00pG1M(+lRVo"
%&'u-&642TF!q2a7n;B0XbCd?M?8FjacCOc`QXWDSaKr93Z*mmGCX&`fs6e'#EHQ`8@Ttu8DY4hZXF@Ro(UO/7iVE<>l)2S"a%,H3
%7Q5h&XnfZF_G0Xeo=Og^/`/HN4aHbGl/C%[g%"mgLPObLa=HH?Y]mRnZhkk%SS=l!g"cAd(*?mI@J[K',1VGBRNp\d4)0IDmGZht
%.jjja,jKeWT`+@K9]CNm[oI3`hbV:]$Dn=HkA,cOkM_s-f:33=&AqG\]KACWgD+n\02G>=f*-u$DJqg::X5"3<rd)[:&F.lM`&"#
%Z_lKGeE&EAX=p3riR=\P=!tai1TSoF>I-B*3+"J<USI!bcX5V2?VG4cG[&X#_:7Ysdt`E@ds1ZsQgM7/[,30?c]-l'?`go8V;8SW
%P#b9<ko0%]DRHT\*1hV+pt^h,oGdPin8dXHbUr:g"SLm<`S$\AM4/9uLTSqQ0@o@O(L,HA%aRqr<\`U+]VuK*!^P>Ma+28-(a;h;
%*`F?,R`RZ+o>N<pjZ_@1=7**dIb*<^j7*3[7G.^(4j7#mUW4(,Z=Yj&jm%-LYp_+jb6JZ<Z>*=os&bLUEHrTgVHB'?PM*pLls`ik
%'Xu=>(?M.P3\Le)H(;,fX#T+P^S;iK/BXF'4;<YKTuWn/>)W9,3Z`&fb0a^V79MF7LN;ZeVjHNh`mh(nb?*U?gK_pW>rZV"K\()f
%*Zd;[_c_dS3f7d7i)-0d&uJo)$m8;iEog"1LjFk9g):pg6c&a^^:a@,5#ga<a''VVeR3$5N:(&nkZ/BFJ*`,3`@KRq\fIR#0tPZo
%Ie<Umh=UNhcCZ#m,?b05o8bNL5O#jdooAb>K`2!]^#sljqlPpniI3!Nn^HsP^:6/iA,6+Rrr2rrra3D>s1\Nrn,NBX\#7LJDne/H
%55Y'@\":A5epm921]8aN+6.j@)!4'[%c@7[s7A7@p?a2E52?(d?Vd/hrV)r_$@h@Po_$<_9kgrsgu]#Pl-mK'Dsbe5L?XP=oPH8V
%c!GbVV\TYi.@Yamn=.9hr<@a(WW.g)k,'N.ec(6Y@IIWs*l8r`_tb7?:R/Xc0Du9$gjd5&3oCN0!<!'j2P3NYs!?gZhaqecpLj,:
%I?IORD<"k#O@(+WrMY41ED8K<rIi/o_ndU-T+lL6IA5%CI4(eb:\]8fD.>fel^dSCeE?1<pLDSJ<CV_Hg/0>F_qje)CjNu0^;,p3
%pc%BgL/0a8J[HQnSaPC/Q/?B0"jT4fptlVY@dd$9gbe]lHll@k)^4iD(731@prRG<4'T-e\$u!@o>/i.5!N0"VlLL(8W3>Z#CUCf
%k3]W]Dq<Nbm-4==4'TEnrNpdha8($4<m':gT"a4'6JpE!]Ku8S>NN:([_#;TiptggB%/DC4(u@roDLA8p!MSW+KXH$]iEA$25jV/
%G@Ll2gKXN!@gCfFkOfj7H_7IPjUUJni('F6$g28MU]0KKC%L`t(Dj!=0#>*jaiPWb:HpkRr:9XHML"@1c4@ZL4oX7l#OVKRo-@C'
%D]M%+pY#)uq6)i7I<Ka)<r67iXmi+3rQUWmqnk?/QWLLODYA$b6r3a"o96(m:&aAJ\B4]gf?SZH!q6-Rq!aN=5PX9ua6h@)PG@/6
%Nt+t_2=QOIPGeH37ZNu"Eu]fS^U*b&hp&>B\K(%I0E1)1s8)\Drr/Pd^%"mJr4Dsq+27dPrY`2d5Ap<dnh8o#QgatEqGm)k/eOVa
%ZLSpU:[BLp7i\/Hp9/o'chWl&onfGbf"\Ufe?a_PF?&c@:Bu<rj.S]T;tSK7G97:g8k5XpmQi8(csU`S*-h&AXaTR9gi>gNm/+dG
%\[1`D#A&2LoBU@*;;?Orgl3&k[sjj^i5M1P"d,XdQ-k;TXf!`@rd;9NgA!Y^)=lJ6hRN9Y4t.Zs:dYg+kVE[%k<jm\O")Kt%l&!N
%))'VhYBG]p=Y:Jfnl"=jMr*=ap3ZGWIW)bgDf'j]0)a%RLJ1KaMq.Qojkt(gBCD!N2lVPun;$PkcOOq6dS?V8Q9QD:0[du$DUUfl
%d.8;8cgL+([`#NPf?TW\l&Yl'qgZ?*QJL^%DhKpYe`(un,eSJeK(gJhG&B.IdQ8jQS;5%QT1i\YX)FW7%ImNO`aAIP^YG=OH,Lni
%CJUgp\cekEli0S\qPgsR7k/6H_e#/oPT"]:_:No#na_]o*k<Z'AC"VpZ4X\k&P?n9>V'TQ?&VQO9MUUci)dD>\ahTMA(T%!+)l51
%4c-`>dB_eQq[Qp\p7$7j]"%Uen^5>;dlotPAF%6V@pA?8s3"cjr-nV+`T<N-M"#<Ig[==F(WW/_s3(+]+4R2ihjkg<5";j5FEfC0
%4h^Y@rQAO/%9CM&,3pR&iIElHHk1D_rScLXY!.]AZ_tO'X\>O2JQBQdPdZ?)%lJu9A+W1YT`u(6pR)3Mn>,0uAa'%;[$4[3O18$g
%BW`\n';,%6g;]s:bs=8l+g_;;p,UOo"O1Qa>)87pdER>k.6X(k^W,cEg7Y4\-adPe!;bO!Q%HU;:MP('lcmrRC7iV3>iS3Z7DE('
%6?ZsC;iA/$>%fW.iJ=YI*(lX.$#.7pMY"77]1Z(pK^Z[8M4Yi]6m"ak.hl(L!RZ;arH6X<+ZC4BJR(eMNH4YsC^)%@gq1fi5+8%*
%j+Nm?].g":YB4j+;A/X7Bi4^LF6V00kHeM^f?:B</Hq_ll(`=4Au.-m<jf,^S#tt`V;GX(N.$+edr1?I$MkLnhg+RL`n'HsE4>4(
%4LYGW>C63XYMY2E:U0A^IZF<n.)%:ZYo$%.!`g,Q!M4tYj1>*75<(SrNUBQqIJl3bD8N-9>+Q)YMf`:i$Ig@3:F98k1SXQ%>_:A-
%k$:@V_+h%MFiZUl"ZjhRi_/GqZH/lG3!@md+/FhM29\CE+h^S]@S.bBQbZ-WBG#nUp$_eSUHY#nY#98hV@+(JX6Nk@ZnlG&,V6@O
%AY=H8Q;\(nlP4eZAXD7dVLo^+k0XKDC:*?tqC5!<A^F>6ERC]qLOU%[,sjgtoIS^FEkqQT.QGXNJ'iYZqa$bK(!o`g%5-&M/2\%`
%jqq5:mQr3*538e727SC-bm-XsWeW(W(BB4$hl#0=_JFplbLeoQ\JW\*Vg'aI4_.#,#14ENXmZ=Z,=:^$W"U@0UOD5e&5W17K<%q\
%=FV2FKrMlsd0\'?Aq`1k@&N4A^01u!dN?Vqls$KJZ#mWV@=HjC!O'[nXD?kj>WPC=KPScm(X"\$Ib7,bdUuIW;<Y*8#]Z<3Rjn)O
%ljG1\%X&4lh?PV"q:N/c"'b+bfEnf=#MRQCQYQQNP^G\4j[mGF:euL\oR.7!fM=sJ9jjt]K'!`[JUUj/5K)T!?XJup>F(,b:)Jn<
%_gD^`TA<_\d>0*mCo4uD=*'0MYB:0<D)/-N/c'ulS%<.ZDk8cK8%q$MesYZ*5GL3iS_tNkY.c-=>Z7V;/7^7&:ZurfiC&CFik&=D
%*8!XY3AmO`!`%rj:%534Z7!_tSRZ3aK!dk7G5[njNPG/+I5q2;'#Kk!6=5P_T/s4fWc,fmnD2WbR!k8!?M[>.QqkXtqB2\.G=m@;
%S_*P"#.MF@qRK@d="VUTK=Q*oX-/.ccTrH;jMm+q>p>&Fr2m.qJ*3nki2lfAlYdqAbuNK?;rO:gK>T*W4('J9J"5^,mS''feCLgq
%rpE]tbn+O(D&eB<34$J?H4R_iZ<O3m')"V(j1$f?p@Z@[@_[i:HpUoPkgXa89QG,[VO[LX_">un+J.P.b5*-9/0os&+=O3b`OgY;
%Qs5=+cjt/<J`]E_0RhKs6qMg>]l!Fjo6*Ib)hYX68J9tF.7[R*j?0Keq$C=pHi4%`YJ+'^Qje4.(LB4IBrHl"\(ho%l8jn^m]!We
%/)aUn:1IFEXPNk-lZo^@DSUfS&CUEK%06h@_4e3<52f]kLB;?o7<4JC?21T(CbJ+VL&_r[E;0KtZJ(o#,kb.OF)gsJH_jN:&FVh.
%[arF/5(o[)60Wa*07#!*\uGSPDd<XaCLGF84=p4if?^CnI6eZ;?hiC]e1ZW,:djrH8F"+`d=la/:L&q>"Wi4Ii:joiC$.kVko@>/
%"c%,biiQZj^Ct"Fob38EfG^;43SHDtjMD](OG=boG3O/mCI\XI(=#\4(<+>KJ(dnq^<uf3no8-ljFa3LqU?&,51R&iN!iiYqVq-O
%CpfC.m0_>)#dn`GT0M-oqtffOj3?8re)R:ejfdq22t*HlnW[J#_:=6$L\QSU$QW!])4ehI>$,\-*1XNgSm8/IKt-S2ImQ+=]20^>
%WO0q]q`]jrc?b>0(_$""]\WYAN`@+2&o\U5&k)VPIc"R&qqfZg>BE/KJum[oIk=OME0lABgOq^?\%l`N$rb.MkSF_Wki;CD/D3D.
%'.&dZ`BrDT]:(iA?%ZoQnN@0.C_(h;aWb#+bLlGWoZ40E@IuNg19MT;$0qK_-P<p?Q;aXgUItWh:3E,0MoRA(70hjEIm4M1Z"'i<
%H,8KrE!2)1SKK3qXfi(6!YN$%6L6R``"uOj>=`[S&E97Zb?+o:s$j/`/f)I0L-j,0oTB:30(c4$fL;YL;h/cA];0^o<PX4uC+XfH
%7M_i)W`+"5oDLiGED0b?7"G4;r$NcXL'6`cOtZY`8!_YR70Si&jl'K<`'NgElKHgd!lX/".`m+Vcnm3d@AoL+YX$Pgq^u\ihoIHi
%F;<4Fqq?7>&Y(H5`pT"*J&2)$]7mHIY/cP/I;?7k_cD7X`/<UGX)rQs$9\P^TruAm%ZeQ]4C'ak^(HhN"2*a)i(@P)m1N-[OSWh<
%SF$PFpOfm"FW#8gS"Og_][6Z0"`o=O`R93B/=/nFK&@bedC&-AP6g'tI0&9;LLM0X=U<uB3/UM\X:[$Jfr@3W*"ZL6M,djtrJ2_X
%R)hNKF["=$3qb0\#/$<sq^\M]]:tp!hN_)b-(%FN$Vi5)n76$B[r.Ep3QI%,?lh`hj3I38l/rTk-]^4:jmV!4BOVb8*[3^B/2_Xk
%#XR<r#/S7PS+4LM^%<$6)PMfA'R2NHo`N_J`*;\SR+`rJ!Hom0E:ibh4MCcDJ38)gqM\i+khA*^l"mfU.=`t1gXPtK6;>#XQd+d^
%Sm_'O@OI^t+8!bf<^&>6bn8XRgj)/FbO,?-G'dfX*$4RMCBCW(+NBq:+rLme6jASYgDVTJbPkflP(D@8&'%CO1Y=C$08@h,\m(IO
%5b>n+.4"VnFC%MV!Dd]q7@XPaI"mR^h*82A#$ILWQcK%tkO.JN8[<sAcp'g)9?atrk]8sjqcqaaRb)I)(<b]3fDiTPU=u36Bj0\5
%l8pJ4+rlbs>To4<!%thL31g*W_?0_1s6!b's1c;Jqop5_g[G14qg\V*J*?ph#WNK=8Zk(k>2jSq0rrV&=t82n&@PMc8:bS%lbh/d
%#Y6SB1HE/ikdN_RHHS8Gnr.b8P<=1=\OCLXE52,65el^Nf3>uRQY6&8e#i7[iaSKeJP?!8lV%4Q^Yf$7gKPAXo#LcMdm*cn^'4NX
%`'=7!]DS;)CYOub2Y8N[NnkN#I.u$tZ2=1Z/`63D/\A1oE3OG%^3uLE':jL)L\,HM6iD>S2uW<opE=VbLaOYCLFtO(9Tg%eo7hJM
%%gg@[r3oHsTD/BapkuoOmh=pfnB5]5\:";Blck3?kD*Cb?Z&'AI!U29cHH3siP4e&St;O$`UV^2o[j'?]t=)WnC)<f2Sf?)0E4fF
%03h8ADm#\EH``bi>4fPtkU\dj0fjBjp!Y2d#3e6`kOLdXGPu_`3[/`bH29I,oCLl3dqS*:RnlN[4J'<4qQDQD++8R\He+h`'D1g?
%hcF1NYIKYhaKLXYcUQW$!2X0]S!:&h^,u/BcR+RB9Zp#mqA*;uGMh(9Oc@sOlZ1anJLu8i5/^40lNQ9dr<RcHs(S5-cMmFpnc-D0
%I/grX*92P-/\iUH;<U&-JWPol(S:Y=T)ZRuMsKj2p`I9N59V^([^(fcHl1pe9`4qNFgsC+3c5lHT8rGZ??pBopYNK$_K>GM7iurA
%4TG2KqYBsIhoY9c+92,npSn&mB0*]uj*p6/</&K`DY-/<YO??WCrMC#]G][*De,/ns/%M1r>'kVhk"2&HVWI;qu6Ao+A?_MMYpPE
%fmcLX\,Z*@s5C0=ft<4m"dD7Cl,hU;VoSKUnNi0QE57%G4!h_-d\VfKEXhYLnf@j.Rp:t'A%YXXL<dCBF.<@>^&,o[T-CRB7_[`e
%)1DNLIK+fk=o:MAs24$7piJ]XpQ&-+_]$8$0:(pdm.]Q=YC$!_DXqj?VkL_.gAHVEFT1jlfgutkW7+s3q=NtAk]a5[aTmUI:6$)Q
%>[I?rpf4opoV^0!0BK)r\X(]e,P:;-DCBF5o*S-a=tRMh9j``!chapeU],4=VG@[TYATomrl+]^k9j?s-MZT'0_\Xpj"Gj?k\e&$
%Nu+;NSX\eco2k"tK*;\`4)J@[K.RQ[iri#6S(_4fDFC54j>FR8YM"Y!0A4;+h`O""g&KCSRl!(-/.5onh['/cELoaP+9BdZ4GX\A
%;5-Hu-H/h%mVip^*VRWaDnPY\??kS>(N,#'rEfMXg],>pKc("Y:uZnO]2-Am7hUO"WiXFGbcK$g5>SbralEZcs._"IU[T,U`.2&<
%!@!>p9kXl(5),R!@mRUB)?9ta!4E1:I5i9UeB!+_)Q=B$[@V7`GGH(-pB0q!N0OXA3[jJmp92s8)0SKF3RIm/()=[VE.+:V&(ab<
%e'NE6516V(_,BlS+TM9;qtpElTDqE)omaHE_8#o!efrcO%tCU?jjkC:hu=M>kWf(0s69"P0AAt^ie-+e5674&s7_!T^5kBn!iAZ\
%M_o2(aJU)QklTIanLK.'EL;rChM#Cj!2gn52ua!Fk^P73%s\,M0.7*s$=ERXi!YVLU0%7P"a@-m.NG=L#!%S1DpfEDs7#d_$iJ2_
%)$gd!$"FDY)8o*QG7!+/"%1$dK"&C'ONnmS^uS1@l_b<OIf]i$^M!P'H]+),58036$G\>Q#'\Cdo)WP0Zm4iGP^iH6pNtkr!X@-M
%i!p*R+:>I:nkg6/O8Ac:aYE9C8V]`^W8%NkLO"9GX<<>+:(Y9pI><*-(i4g,'gn*7A1o'953`RWa93rZIgWP0&AsS1b"(Vm@5uLu
%5"9B$>\D"u_/K-_&/0VJY7mjTb`?0d1(W:Gr1orq3$nY#!'[36NPY69n;.AVHO1?b!)-&lP9qR6$i"B=9&Tp8VdTdW"F<VU6j*52
%9Afr?!#DFRFqaR2(%hfWQp*`00YJ\"5etD?K>B#/)uT/ehY+q%4>8E6,D#&Ln8f+!\!_h>R-"eX_4<au'h:%%T7S)sKSZC[J]2q%
%Ljfb+,[*Vj1`/4J(_NF;J^&51==OB`_%[]OMgQ?]E=d;Vj?Z[-OpPIt=;8c@/HnuhM&/oB"Nds1Q_l)3dZ<Mo(,\N0+"q4O&V.td
%J;aA6FH<B8";lEGmO%&g,F7nPh?<s3/CZ[%S.:^S%PT"N49XW<;!(e45U#Or^,G5RBA/,,&u*#q[#PLP@?>qe?=kT.Mgi5VJ?<7W
%'iH:CXE)4SH(9FRppa2\\,[;eL'L'R@KFt;R"OLuB_m!'\oV,$PJ$6%gh2Q)IYq3]0Y\=E;o$H'n\NIH84',hr@!LS!+j-q!qO`D
%%/]2[o&:FXquiaXhb3hDS>LB)Hr(+,8-tZU+mKP4_!V=,4Rn%hRV4#*pRt>iKJ/-PNF@9<ed>P"E&R!'d#7cMIX9]HOT;a!%FiFA
%&$64I#([%(\b,^2#Ug0QLa^Eg"@3-$AHI\k<%Pg>(@X!$*2+)Sc:D0$k$fu;]*!]J'e8DgX_V%,^nBV;$%i-9Vq)[Vqb^,h$/dEX
%!!^N!d3Al/(_l3a<Y,&k\`1Pe@[/k>j2DJk.^X+"7n7hZ`#CZ?9gHWB5n[2V_"9?(]H"]%gus,"%Qu4:06k9&B7kaF1Z`-Jb);X?
%@+59S9"L@ZHL\;J$t@(rT0i3aYYN'U$4=P&cq52D3jS#Cg_)rHC%:3\Wp,3`+&L%,?DRA46LCNW"H):Y'!<u<6]tg@Jr$$$82:<I
%"7"Zs";?;3BZBam&J/>P@n?EZoWLfnp`LsS;rNMt-VjGu"B,A=9$gKCW.jR>5^Z`<J_gbYL!M>olj?"6(-A0"i*lp=3?WiFq1Ed[
%*p,i_GpJc9!!3CkEg-PqE&s)K+"sb0)7T_"@3jC!?U.MPU9u.`-0Xn-YbhV<p4W96T__7498(\CS1LW;!@@Xh&gCZ.'"B$LN^-(N
%"16&qJct@#(k3*.;mYnLO&eMb$igjR]T>t>EO90Y]KB`Q9@2*Qq(Mq3i58q?$lTZ+Jc*ARY\Q/'mYDW2Zu-27-1Id&1jc#/Vi+CP
%BmhspGhnFZ_/KE[[2;BN-*mhZ(RY7);[#i4JR/T>Befdin010k_9<C"EH"Q%,I&pmT-n[kP(G#9:LbJ8dE7XSM]#)Z.>9"W-%Tce
%FI8E^1!U+H7VcfE0VU:Q'K%CU.?s_P)=i:W<u8)e=cYf\@(WKR;g;(HqL:pqc2S,pQ/Sn'If`@Dj+%'#[/a9Q;[iYT#A=-QkYo9'
%Li%>F86"KE;-aQ8#_8Z]Ks3]feUVGKN8G3M6:'?9"C"bhZ-4-uXRp5J"]_5*HViC]U\qFZa"[phV*4qg;XBDl0Kpq_@Y'Y"9!Ffe
%BK1MHR&Cf96NaC%&$[;9D]crg]A]Vh-6cS+M5&N;"3h5N#)#n^m0<TQ[N2%3(VK2/e%1;[8[OibLG4N/o`Y%0VjD]P2n7':G#<g<
%mY(]f0PYL,IYRPF[#Y&\NV`I9M=_Gq=r[FUb<Z=6QnL:M5b$3X,M6<o5;7%*Uc4r.64("_=?;P/jN!tjJfc\(6L_W).aOb^&c.!>
%!<W9fL$TPY#>d+qW!#d/oF!n!*.$>'@65k8^r#dhAWOJcn<[3E0T-L%f1-!X9b(2h5A`Xg"3??E\c9WaW1T0SbeT-*N9UR1-qW07
%@.n<LM./OnrP/K2kiEj'8JJ?X_(&$N*obPjUsK?2_)VAomXLO*0HW&^i5u0$o"JAEk7?"G2j@>J5PSYR,"?W/h';.hcE+jD9*\VS
%.s*h'*Cr91?9`:NYTFtnAg%ifbB^A6k46?f#(IMHob8KdihB&SD.ln7a-5d8`l3DBA^lWmn^E,o0O_*i"SLYd9,Nd4O`ePR-s@7V
%`7=\3U]REc.V!)SSCrnJn:$SFn2-raadF5]Wlrd#JhuM!*\/>[L,),`6e_OA^t]6SdU@$@re]u]DPi!8]KHc(4?OV$<tE.MNT#Mj
%V\X<d3JtTN=&5jDE]X<>^4$duBF@AbS=[)mac:ZmD!q5!)!lFT]mfAoBXciX=4=2THD7"8:%-1<^F+^"H&&8J[^f_]A1^N=Tk/EI
%Mbj?>8g3h>m:l[1rT@R/36q'iGhR$6$.RisPXRs[+\\MYCFE"9g,\i`6>i7DYA4'Gma$AeU3rL0je%(<s!uIW8!kIshosl&0oX3[
%<Z1I8QBRN\(!5GqB3P:5BPpO3>>1CTKdP?e2>sEih"?e8]a0V;r_G9jQ_rHIH>5>&_;G5``l+_?.un8L3rusf17atNLZSI1+l]FV
%QS8<dQk2eIdRU45@'\`ULCF9M[XX0`Co4,h";k3akY1KtSM<g*#`0n"'=:4nq,pS>YBQc#\hW$5f15Ot5(RlLXf'W>"7"-k!4hlE
%CU[Ao#h`JR'Fd0Qf^4lXl&a2UQ*Va3im+&c(h=*_XRDJ0';Cc"EF)EO,$AB[cr]E0XZASG=M"J0J,B,Xrr$23nETKBiU?dj'/G4'
%S9ioDjVSPk-*4mra4]G%P7?J;,uB,jCQ7Si[;4.&U:XRc*LC_5kcpK?km]<);T2Tt-4d$%DKqOZVR,6,/W;=O4NOrse7D3',qhQi
%"5=>6':t4@U<W2;Os3-YG:.+:iHiW2/-9<o@Bs7OR3-k$:ZL:-^iO.opm=19G)qXAnMEB[s,\`J`?/4uIU$`6j43RFHCQ(#kIl2r
%j`.aNSu.PnR)0-ko!3E-EBi5S&!+cmk.KhpWoOm!CbfNlpc+!EPtI>Qf\gigDNFZ<ORVet5eiTu!08(Shs9k<'VR[961<*fgWg=.
%:5rLqI,JHgnF/TUE`65qLT>9GICS!umfQ>%1G.:WCkt#5h#;SDD"?Z(78m>R9TRZ?T;RaPl!I5Ifu`eA*%fdc'?eKW:B8b1M]2a'
%n%=.O%(Gj"E'A]On+Ia%n-W+^Q/!:DdVT"T+O$`RJP:'p%1]a+4YA^[7?$ijQi_FmT4AWbI%b^Im/bgFIt\o'GL-IJ7c03;j,Ua^
%oKgFH6$'Ui$r:81!6k(3bT'&lYL'_`)\:P>UnZGW(+n`.6e![U"h;D!Vha;]MDR>p3?4[q,Q$)V@(fET$s*^3>G3<PO#(Z7JAeXX
%gZd`)n:=83;UBNq4Y7b,/fM%<a9p6WEXV?r?6tN?o6SYVIL#KPckJUmfS^t(76!p3)OtDoJKU9Ao+5s-@qGN"kur7Y9HdnB\3dK)
%77nq9]r>A$RY;d?XPL<-oQ:GYf'2FF/JL=^>/N2$#Z&l78/p^B]A9/=RiSE^e>plBD*K$3ZA_NaPoi2+gu(#G57e7].P4R#HBKt7
%<OlgMW)'UU9@R+]99GG?@+:_8ma\1drqcQ^'I]6T_@C&_%>"Iuij@sH`?]:1$\hg^!>6H^.VED9MKrjE>ojf4fhk*@"r2gSZbh?8
%Y/,WE:gXaB;oiBF2'=t;J[JS7:8WMX:<1!6jMmO,bJWig,"-7s2cOUEestk/(_^!-j+\iZ)Bpa:'*U8B#$BMEl66K^02XM.>0Vl#
%#Tgp^Bpr`L?=oLg<9/;;gnWo`f$hBceUJ)$l;9l(aVtJl,eEs`YQC!h3$cE/=O%fr^9_J>K&*&sLHXEm5&-0;`3WVm#W5;tgI/>a
%"j0Db@2*JhT;'VbFO(E:e)Y\dSmH8n5[Q?L??SERl!M5R!Y=N@+LZIEJh51C,oe@>IZY/:TJi[obl72Jad4PgTmTR/l3!%B7fC0:
%nltqN+oPM.Gn?;T.V*qlZ$G1nN^#^N(JE]4e6&SL1(&Ts`[+W87iqLl$>@='O'lrk$4_f@]bI'gJ*ee:ej?>9WF^M$@YV:thQ#&H
%o"5PO[dQ,:`U/'Vrn\A?>@>uIk7F)'8SHE>*h8<Q#\"]eSM[*a)Bu;)dC.%3ED;Q-LFG)rnJ3Ju3#)S(TriT9LK7\0WTk,(X[tD#
%F^j<jfm<5oC;JKQa@4"r82%REFb5J).8Yt@Ulf0r6n-B"U$KGKn`p-o\YTfC4YBO9^6/mTo<e5\6!)CaDWKZl;b;N6..,YU4,A3m
%?;%Yc[+TH,glK69='+)rJ>[?G:3YnY'_S?=^L$MH96hea6[m3lfQRJqIuH/n$!l8EMVHhP;;_mi,II-G:Z1^H=n8gn_"0nj55JGc
%5PRp(#<mCWXIm%4Q4urBY`EbI;hR[]P.MRTn[*I8ka32*'1YcB\?J!B:(TBbBtL"Q")-:jmCh.JY!Su6'_mu71CmLeVO\'#fSIAe
%g*Au!gC$f_A'=sfCZ39?^k]f`@fo>?72ot1=pCgXb7,",pDV[=9]MdlbL;I\dJ*g>>Ih(^l[uDX"MB:R]fj't_J3DmNfa,dqLW3!
%i&mWmrYKT#qNq""Sn8)[)7fi`$s=;Ms*Epalj_'cT*!W]5&=f)80Z?Fc@U'e&cG^[m=]Ae$92b3$[+k]:k\Ft8t&G7bP>0U7.mQ/
%RLumHU^@dCgs).#WS]#*]8iZJBf!C1ogrAGkMpU(l[rD\`3`DUi-GHQI=e/3[;j!Zgc>V)J[*oa0Kr1c])t/-F!q\;Pd[*5AULaE
%r4r`#6F/h]O.aW)#k?]Pc@JY62STX?'Up+O<.T[F[Gda]N:]*dYK),kd<]o0nb0i+QSplVf:oAIKi*F.>7^HHaMB]4)o-p:=h1Ho
%]JijX%\"KLP89B"(cA'i!J+XWZiqG!>+TsNEdRbjaqD,d$O=&t,e?O\X!8J!][gbDf^5lMJ`bMrfG)rk*<[bZ?,[0RkG."pW&B5)
%0Rt&UY#QBDT7l79el]FeaffNbq.=kR*@3krd$jE[L;q*%aN;hGHZDp5=0s(*BRcE:[]6><[QC'NS4jQ9ZZQDgjWiil(<t5i=pj\>
%PF_?@HTRc/"WPSkXe;!\IH`7E"<2rhB6sg9)Mdg:I'd1N)34.F@L0(3W>`0PX6Bop\[J/\4?[668X`Ls])Ss\[lBntDp(bA*=gMg
%.,;#QFFMV:Tcpa)$?g7Hk*BpVDlR&V$5PaHXDmoH.!C(T>42)o23!5l*7^o.[@!IEG9.c6.'b7p"c5G?+*m2"-SRV29OMb4cUuIn
%5^(+]!D_KK_^^;-c-G(K)M?FsR(rgEAF_lND26jtQOoh<m&KY4h?Y\dlOf`f;Tu"HiB@R/OB6H32o#J/g50jI-YNXR4Ah27Xq;UX
%*cM%TC9$eUGGiD[O.A1'jb2gNiZ[ku1oPXrHWbbH!e3C/1V5BqOHfM7PO+c*T3l]30#*Au4B\$<_9I?!3$1P$UM&pVTT@"XK\:a>
%;Gs07fs`Fb*0iY5DkRksMmpX7kciO\aQV6_?k[>k9.7%eDM?i`/9./s5>S>qQ!`t2e"e6CF"Qf(a,8(-C4/2FS]gKbZEmilXr_$!
%SoC.#N)K8qq?aaRP`IgL[[tT,gN'bfdG[H4S@>jE4kAge_MBKA.lIQn;.28k1m!WtLFq]HGu@:YkfIGJ=:Fs\;jb(KT).G(o:$uQ
%NEX3:(MARYf3G;n+hq05k$)+?VfQ#nl/g9?1m75mQ8F7-m<l##Mh`d19/U]KO/ZC8>7Hs=T?i$ra37Usm_k'@n;#biLcG.L`3J\%
%!&TOO7<`-DPtn<(iOP,-pnl=.1)_*Eght=5!`rs]!skl"c4m!Zo;BgaHcl*JE[E`Waq7>BC#Ol1L3#!-1Nl](CC<8-3A\QF,?\\L
%.QF1acYrbm/+)aQ@hlE[]dG#)gj:5eFDi-:Vs0_XjsMs8#14sq3N/K)ZhH);=sqlSTil,M8h[,E>XX]MF(UA4^(ZX=V+UmlSN`o8
%jrZ\Sao%\Y:5ZWI/+@+D2I2%hh2.KWj:'B<^T<H8G3j^eVAHs430H*1Ak2..q<:GG/aZehHFCjT-,Uoh*Y2?Ae'aAL<>IE+*:jT<
%_p\;t>(2\_WO40mE?-%tF0a4NJ&;<>'&h8j!,0Gmk<4s_N\)2?Zl8X7RsoHN;4cg,805c>gp%4F*6<,sFR0"M;3iZ]-*TsSRJ%'*
%,idFRe`E<uel7&bO.fW0-.9bgTpp0/rU;MQ9_"*!`2N=r_\)-,hEp(]i>oaoD,"D/1"'rie+,tOalb6$<@kP`OY2AS4-L#+^Dj0j
%cS/hRko?l3Lk^Qn4qJFX"JES#qP"LKEPul0k#8(F/^s+9cKlnfc.hh*!=-AIN`[juoOd+S-j-CeNJ&Zd:EO7.\K1it[?R:P"'VNn
%>Sl8m0&Y;o"1FZpcu4A=.Pj?Nc:j:=+8JNXNK^KgQQn<XPeXQBTuEBC8+#J1+Z"p#>Dr##=Z;AAad/9D/<H[aHNrufj>Hi*)*`1A
%U7#*$XWK&7>%$_]'\H"Cm4u"[G(N6li!sUaQm(7]B*gm/BX.`qd7O.?9"Dn!Y\<o#eSZAO;S^%0OC/:[:.K%8r/afT4EMb2=]3Y2
%$UFeM@7Ts+c"5IN$7kp>i(kCudXYffBU9"6:ASM%F?3c,;_jgDd^-:[EmVY[>#;,F]9c)<WQpL]1hS]7D<V5WGg28QLcmOW*1YZg
%*Y!0RTddj@UQSC_8iYh@M!Hi%7CMR.'YgRiUBTja%5bgYj^da'<R%@QV#Z7:8!@2(ZKWN,.PhV2e=)>>H/Rb_&q*Ih>)&uO'*&L*
%a0_/SY=qlFlT#$3%=ubjh;)XlV<u:\POk$rlUSda,OBc?cm2j!G#3L1>`qX#]&)^YS"WsB`tb2#bSq\R%3&i`WZt\n/[8F@IA#$p
%nC1FBk>-`P-JA;JAN\/72+Ib9=UJ]F<Sbn5SQ9`tb6FPF!1J]GbP!rRm'G!nP;d,$6SDj,cb\smoke:q+@0-@Bf0aVZW)IXN*;C(
%p"h<;pH0u,<G:o"NJ62Z/GGSe.p/Ilf`m'sM_`o4Q1#J@>!hT<bUdK(&1n3J>]*ru/^Qb5!o?\'B_b/]V^r4k"tS*D,C&#SQIYmc
%lYMQUJ<8)_+Q>%D7k@7Fk\7?e9Pi2$jmrTb:'[8q1?EPmQ&B2O2Y7]CAo?MSm9A+o.CCd:DE)!A]V'uej@dFXk_qW'^!LQ15Ae3d
%d26<C)3aPg*1Mt/EQ[aM\%FWZ<sCfVJ&q">hZ.?JcY<"T]S,DA2t>;90L\?%7Y5n@JG\Zj.is@n_Vd@SNbhb/Fnk,;5l!t2q/dnh
%?>HHXV_no\LEMh)&tf8RX1$s4@0Dbj7&*$gUq>0Y`1H2u:2;E^iPlEq#VCe(5u::/JU8;$9`Q*a+:cqJS>?=RVb$l%dt28%E$3I4
%NHal(aam4%d.ed$,]'!$(hu0u3'nrg'=co7B*]EMNW4@eXDsJ_Z+)PboKWD2,XTT4LT%OA#1QH@#5;:(T[DEj,j[ob7'C9_T0@o/
%r^$#(q'IX#8B.Pe3&oA%oT\JafJ*Ml+$'H'I^><Ygt.3mi"p]1*#BeaCsQgW#n@FC3pJ#CJ_I@[(l`S:dem2J)VEq.C<GQL]hYmL
%58kD7Vn:8rBoEi[Fu5"n"QBPsKUrs>AT*_D?9i`j1G"V$'02)mbcr]^9ZcW/pk@rG6X9.#1_EiEVJ->SMW7$7&h&aS!Cn!cQm';F
%SN+LgF;O#JMA*Fc8<[IB_&2+sZYqN3L7PFk)BoO;F&PZ'BAUJj5(c>BUZ"4hj+nQ;%aZ08$r95:-E#O[enHt'><JP,*6`ELFU??N
%GuLXPTGD"U;b\2e0;7VtoKmLC;MDij>/419aGtTO<gPH@Xih7b*_^I8NS1rQ9]5JJZD&XLSamO]_,kn\IK2@ED^>PkeG7c3aULus
%HQnF!FcL;$V8+^k/gG<*5fZ6"]1<r(@8l7,co)Xn&f^s[&e>'DWgk7b^dPTDaa&@9%I+]DI]_[o`6)1KIZ&GA%ckt>FsW*i\stQ`
%VB#X0$.5OQdputCCaY^Mi[3uiGc]o&COdau#b(Ig(Y#\Z%O6t,pt#::f$^NYB*<*?ZiOJh1`"&?'c9><Ghd0ZO.]ipA4d+(V]:Yk
%^[PQ'QFkJH9]+R$<W6*i*Z,Qu6Df9Ed<BZ'Na'fXJX-aX_/&^c+>esj^JE%@g%2K5=k;I1QY+"]Zu83SoktK+%2htds%S^K`\K#,
%3'&\]P-!b#?en"oq*fVHZ]/Z//9*`]BG12qi^l!S44lh8DoaXkGB<_3$10*h&4!#@(&En3K]Yan/&_9MUn*ER`%lD#/P]f#-=WU_
%Suc)C$V)l;=iR0ZB"e89TMrpq9&r+:J,m*#]`0UY>ePZb!+7)]0^)B-)4t>65u2/1#b\a#K$5s<j*=M#(Y0V`>7nIsJgh/3VWBWO
%d_q:F*5mGsI#j_m<jo(Gl83G9=-^XNf%Kn??58Cko/SUB4-8"tX2-&SM^%_piG'4*2:tF;]L$O%n[oPj.eiIN2rq:!o;C1Sg]S/r
%7%?`m>C[Vn8u_!"!fX"cH",bGkFO-ur7()o1:@MdJEQa!)1r@23fiQ.V**K'^:c@.idG)MdYkgljG;n&".$^Yh-^`Kjj^<q!.IIe
%`X?\j#)PNA.rSCB*j?'tKeTaXA@';6;Y($*ri-s;\HOkN7S0kcU1P]rms]Gu42YtP6]4Qib<8#XGS`F2\DZY?D!!*P?uD\DDka?A
%o(*F#T"S(DGVf1^HuV9DR1;C_r<go%"a=fu*OCA]5"^L_(:PF+kOl%OiRtd@Q#*j`4h)%kZCs.AlR)tbUOnEQe^EAKE1Pb.Pk6`V
%[H#2-#RWWZg*E*E=2c\!lm7kXbfD_[nm[QBNN=B53Wg[Rrg'n@fATuSs6=aFHLLQ#O=J'Q)!b_l'*>ZYJL%-CK*=ordQ-?*9O*G$
%e(9I]ZWa.g[nSZp9u)@`rV(2tn[sMg/4hG_5XWk,qXFlkH=T((cU8Xng5YsfipTTYC,*KE(4#JIC1lN@d(45@3pbp$&:`cO%rr=t
%1jfO9\3&4=?A<*Hd6&"eadE:YkTtci3Wqrd$'.&mA,u]I/ETVfbaKRL:Lc)6YMm]I?`P:OK/?Phgq]PqR<#@.kIX!%es."Qr8P`_
%!8G5#B!'9.leGLd8Uhr[Q6"T/2Mi0f"BXc`(!s*L4a$BZFcrk!!X`EKSNqGIrJ3=NE!=S0HGf=q>(-Td@,eeATufYT:/MO0RYi-<
%/H'a0&70UW=M;!.%@H:g%MJ.j5+_>ki09drJ^Jr7`X<e7o,F(]5g/rib#rpSS)aT6WYE-/!,fK(4aqFJef/F[k2pCN9#a3*?6[#m
%ig5:-R\Ft)i-As:D\AL47c0@U[+r=*10F%rP"STm<O.l-ii.(9&AYs(mq!\BHX8KJ`$h)_?:(,5dIGC!&=uQQfk;\G,n*,80c\Zc
%B_@_uj\/#s:;5f<:[(WEZQ'jkLb-SbRGt_R:\hTYe&C['(j'.3_4G`!;S3VnoQ)D"3p+<8;)_ml1)V\`PI&KgnF!&<HZpC\8PApa
%[+TO+)=K.d1R\N0aWoK$kB/H7CnWp+BUOk)gq[<PShq:[US%M[3fQuZooeh?;g+D2>=2BqnWn"!bW6?N`/>Vj$56oZGb[SU%rO4p
%8RI$G$AMeHq$tWh7.DRiEOPdMe<B<=E0\YUP#SY?&,JIg)_fJM-J&BglC\ks)MZV*ZFREh(2('E$/e:l=,BIahbC5^QrsX51psWZ
%8h"+Ch_%=o5)\2uRF-hFbLh:g5ZW(n[9aT?J8^V,#mHDam,7_BK(3"X&7`QWgkXK(%j6N1FAHjYZh<U]A@[Ik"@S99T-fuJ-Kl0:
%bmK\aD)LLa0s-U_T*rD!A@\fZ>5((LG$de<"\\1*aM'J7/"_Sf0"Kj(;,gW62e[[roT](A1Z`Yq6Q:"$kGBbr`Fmb,.+utR;qeX2
%KqRNNUUand7@Nq!Zl:l-RkD(q\o%TQH>c'flHYWPqQrYL,0k8CQV1_a!LWZL.&XC5ET$#gi>Y'9O<ENr#\-!4>;jRsZ!2(P"%ou"
%%sC;m@?OKTiLI<c8Hp"0-UTLbY;UI!]as=pmW>$C;Qi8j-lLKiAn^&n6<fXFWbG!O_>f3W`9"GLTRfh]Go6/@K-ja\;UPuSUsGKE
%B<B5%4&dW<BG[!V(Nso7U3Q`*m-6$mBi\,<gT6*:>UTqPB`]=@EcSXffo^'h0sk%t,pKB6lltl\[LqBCL'F/$De@YGpS$VUb.e/]
%hlP+Tp8:ON*O%fGLeJLpo9E!K1[`s@,%07El.kCe2CAf),G,9e)Mp?*64H_CisrDt8=%t=Vbe)1LjO2OVd@Bn^KehRP?H17c3K'P
%N;3(VDh&ALaLE8XB=(J!-2$lZ7N_C<(f6(+Se4D?]g6>C6tAiBT54+1oA'%G=s3f3VRTbM_'53!5c8S6>*HMCW[Xl_(">R47_1X[
%)!'kM2)GBNSS+H5m0YI;4&0\gVCcl`4ZiQml;JXW=_>q@%$LD7$^g@Y+>#k\MO-M_k$ki>JXHt_>Sc\`^`kEq#rLnu_=EaFTD-g!
%n!jI)#]RigXugC(Ym,_>F_B=*YHN6r;k,tfU;fmKC<aR8hBKWLQ<XqZaC<;`bXEP1>1TjYa;MIGKmPLI+SRm[ch>0lC?Y;7K+!rc
%l$U@*Du#3ZA,rrIg^62mN6\u[&+9^C)Sr6W]F)1u3_f.J!Am@,Bk!I6eJhUC?EBQ_H#Fg$j\mup=M$]t1s6Em*6cLO:5(kO9t8%$
%ONn;DgCh:mn-tRFMe*^C]4L2N,Qml&$"cX,>H^#68K;S#qFnHlrgfHH54kR@qt,FsHaX0JV!fHoURG?O]<hV3)$CFOTo^4`hHd[F
%A_Idc1%HY0lSR,-C7T;q!W\oMT77<WqUn^rg!.b>js@4QGRYuS3B5PXCFs.%Z=l_Sc>%[q(AZ6%l\U%gH9CZ7TgY(A`e08p3'CMX
%lq>ZlM@eHTp2sE[65ErrR]'4"aF5oMQ`FOMi,\-li$;)KYo$VnV-9Jp:G-]`U>=C5@"qcgRG9]'"Y4?2Q<Jte0#hK8_*bKQ3RDup
%F)/XjVhj7plVi7:cBFfP138$3A=g4<%%/"([?HSUjcbXOgK$FTTU61aFNP5qA=`0<*I-DPiHKGW]tf6T?\16(V9J.7g&PRu/*)&0
%r?kL1S/<]:Sk0ecWsfYHMuo",ar/:<F!2$0U,Z!%jmSG\hg`)++BM"QG(&?N,27;'9Xkg^f?Xn=VPK\iQ]:`YocuWVZQr^"Ei'0Y
%;?D<mR:#.3b\[%A5_198^c/%a;ZR_5DWT44rC=0kC(#i"!%'^.ZK&:j,>]m%XWZRRKl[?/-R;%"!GZ1i([JRBb%H%7aB@Ge5!gJ%
%@o)6N]C2L"-F)&Un&q:g0OL>"#aL.8.R/BEZi(:@j(cl&2rtBc^#Al9i'DLFmS(`2n-`*s:WDaGjIAK=-I2Otd@9+]&"jXR&I$85
%WC6O!F\]Bne,X`j'B"Rk>VMKh\P#\=Hj=@NKJaWBK\tN5C0PN5RJ6Nh2q_F`4=i=^2sM&!Ls$&@YfK5Wk03YDT$P&ilc_Y^b<_;f
%jd^.tHEZ2,cB[rO[ZdC>3:@nRIgbbMRhVH#lJ='pLOK)k_2PNK>4VX'ZlKDN_F>'+JbCK&_lY8UpieGV/Q&#]QpE+hBeDI>_YR.W
%I?CQb-0aDP5>#X;/?[T;<)^(a4OPO,s+i.)\P,\aF'6iM#3^l@Pc.JKY,rMKD&nB.4b'8nHqPPtaen^1V&?U&i"#'OLPpK*4:T-^
%*n2sh=g5$GEW]+p].u(i[Q^3WMkUiW/)>'AQf!VQVM#9'C;":SkJ@]Zd".TB\r7n[:otTJoqN\/]s6!3dAVF,H_f=/1)oHoe=$0P
%eH'bZ+('\YW`>lXm.3!7&3,X2A,$7k!^E0eCI>eVj;r$f#X?9a4QU'&(#W_fIMoSfW(3^p(b])u&M25LeP3@1#-IAFSa[k/2MQCR
%U;H(,!+Lh.d=^c`F$;A@]*oEOO.faM#f1'HE/$>gl%Yh,,!ub\gK:+NHl-)S_:B?2Cp,""2O0`uPL%Fu%Ll2j_<ci\`QIBZ6GOg0
%AqKtJ2K1kNq:[[W0HK5YUJ]D:H5$qH`t(qt'QjhDLL;H/;l<1G;-YQp_<!"pSLP*`-KkVH;;>c\F>mWN0q(!W*`f&RIn>qJU_>6=
%-fLSi8QOktiP]\O9$'_u5YekHL+n!]#qZaE\eUM?<ke][IXG8cYEW+nC*bf$T"<A_4O6NMcD("0EkBcH<dMcEI-DL&]"6Ya`f%`P
%1X5:cZDF`K:b7'W)`E+,,'Z6+T'CDD%pV<a]Ch=;qj":']Bq:$jn4D.j:THE4Db^);gPsOc^\68ea&mH6V6aT'3''ZS:Db7B1oBm
%8>-t@&(-QDb@?<i57IRh1'?Sp1F13]8!]Ls_.s#.dPd,R\[)t6K5Q@?I/"FW=)B=)qG`:UR?o:)&Y9f$*::6s;V?pX:/'%)#s#fs
%^_$:am]b,Q7PWDIKo\`GP*UXEe]eTn*oC,:,Uo"$9<GJ%n,S<73*F/'JG'%"_]0.5(t)ETa1h4gm/RpqSH`@-r\og+G+ChS"VRIS
%3f%/2%FroqeRSrCT=bH/c"S4C)P3h.`Ha8n%[Ur_"u@JT/]#iP)Z5BaEJc0l&fuY_oj8XOBKd.HB;r$;c1;3u`,9p:^a[f#!0PhF
%:ee*!>\JWipnHf!eOP4%7ktd4JQt3]<a?#)A5qkUW47or#pN_`Y5Nn0CXXEa?KV1>+)/R@[1ZG5#OAC()TG;rDT?/$^.mE3fGZ:O
%GnnO3\[h\#@_k.2>&9D`pok\H:R0nrV?cA=_s4l[YERI+.Mg0bJR2WXm_h[`T/lg_"`7r5+O,UCU_TX327(Et\iGJJ9J6mc^Sikm
%m/BmbE`M<+mc0@Q`k?t5B:=*VlW.GbC3K]MAe)_na;i1>4g4;Q$m#q>dlE),ER5`X%Na*"!=mJ5$a)ZqX[#pbdq-kAH7:_uojTX"
%j/EcFiS;e%Lo-WIWhDb4T6.Y3(Xne#Kgm7c9:UUW>daT%T[l1X:`/\_5Q9$oCnDT9c>M%qFOlTrJ.;9(g"IPGIfPJRRlEMHEU^eh
%J6uMPl@$AN+&(#=O$8Y$-)Pt!8*0tki(nIO^MVn]`Ibg95KC_Ur#/%3;a_`JLL4h=j4<NU"M]uEf4<g-fRj]84Tlft#3oPOnAuH"
%?X`XphVq9k_&#1LV/PEhX![srE^%=kZg$SVjagc9=8a"\_fZ)(>W@%u92?)Un7rtlF_*dIhcBM\#lXu*.IU_f5[Wd'"@:p9s+YHR
%9@)IiIupkpIZYYY0RYR:3@EWN-#P).*`kMXqEC?gfp(;#k\YaoNf9YjPeN5.T8=(H2+16Mmt,/eOYl8;hFs'1H8ERM&GFen)h7co
%hAZu^Mhp^Hk$[?T]FOs-'+LkD4_(A9^3ZW*'Ke5o!-J]r88H6Gr<Qa8^R)`4/`dN4qeF52eq`/teHXr'Z,(XO6;3ShDT2cHs2g8`
%;n^dPZ8%3*;d#0tLO*KRcbD[aRFj!X2=Fl<q,F!a9W^VpBB$P49F3\9#7GSp&S(nK-KZ%:>+2()O^,.\P3"DLMCsQ%fkL\GR95[u
%>KK$jK^h2(it'J9<7X'=VZXoXX\0h7FDX3m4.Oft+*5=OFt3AMbGEQ,VPcOtpo)FVhNmf3)D3'=[Hn0?Ss/9-@0YlcbE6fKTAO$6
%ZittIfc7!!h_Yr\+p[#!T]i"@!-`"@Cn>bW7k3hqjcfJU"cK*Flo%q;aJ>idQulf*)>sXlo,g#G%<q%FT(,:JT+o"]\kL]\R.l]n
%l/JNQm&?SE0Ur#HYHpC*I-^-mTH,aK4hI?n,JDZPps"o,mK2#_ACn54,`]<Y!'YEh-J+Z.HLlJSB5hISF@NHDUbbk5MTsNe9LmK5
%6<IQ,NN_5][VU#_Z^8RIS`<kFdQ'B2*M'7'rR/5H/t:-B?Uf1jVZ*[7O47-!(f!O@EGgt$^H#3?O\WfLNku#+>p)ujFMXKNTF8/M
%+1grd%&ZZ520UKT/68e8igo:<Qe::->q0C2kgFC(JM(_%(j3CcG=#@bmJFJ(D/[dd?0A#d1,KG^:N;.a=#Z=3h=E&*e2<.aT<=0e
%Zuqr2QX9ElF(TQuK.&:/eFd2&Pj[RWh:I(`r(c(HdqJ"n070I32MkFUMr!lu>FDaJDA2;`lZP.0?M?VNId9a(DaCQW%aTI=5#p.&
%;[0Sb\p.rT*U,P\G9'DMHE9.9lNt32pP/>>Y>@e4Gd:HEiR#$:O'.2LIH&WNeu'=DVEX`Op?@M(`O3G.0@]X%8_'_WXIluup8QNh
%pFlTGT3U^TK;NOZ+)M#C=h*\G0A?KB`issEn*>NK7!#Z@8V=a&0H/0LpqgECNk,ErP:RPiU),NYc%NtGfF3gqaCfa082S%e%@O+l
%btr(_3CBXTMAkdYB:kmj'm1C?#+NU$*o-&j_trk1R*M0?_j@h@';#]f7XAK&RZhff^)!=Y/^F"DkkN4PN**UfAb><B)e6*:pbp.7
%H^um^_(EY.O`VJANiq9lE#tdoXuhk,p-"tXE>UID)/%Lj_RTG)SrNVGhJL\pcV^'i@X`U&QlKa3hh43'[jL[1FI47Jk*RTOc'kO-
%id"t4QD6?:PB&$E4oOWaoW__NRjMK8de#ElXIJpin]%Z"%"2a2C@Z1aRl>]#O4&g.TfW0b:+VT0JB"*,4(WL+A[OD)bg*0_of55l
%&$_tW4J2K-bhGhCD*GRJ?&SO2F]hsJc\ocoH$<K0cf)Sa<SmO&`EI=lWV9nB96Y++><^>jWb"Zn*0s<q33\oR$!;C_[D\e#X*YV0
%Z'%C.A;u$A:=a56r*lc0*GKA-Rq?HN59*lTV1$=o:19skPUc!9QIL"mo;!CL)c`lUD"3R]gQqlb*,TimC1;N=V7X1^SZZd5```q5
%m<]lCgJ+)SLYZfr1YBhDbdT`An?)$\_DnqfRs.5HD`@X!O4M4_IC4HPZ_)Dn2i#X9Is6,>]7D23d#T07:Mf0<Eb<m_DY<,L)![//
%a&b.VG+A16$D;BB#DSJlRk$Z_,Hfjl1OI=tS[J"8i9\//$0V)Ia>u8T<S+))[T5#I.HYSH+]m*WI/<9Bb3Ra+ea`A?f4Vj&FfjGY
%L$LjN`S?L'>LcH:7r*<XZ%m#Jjc6b7mSkB"pTWF*\C[SEg7p;5&Wa!?(jQ/rKAVkV(Hsshd#%8)[S%\`^lEliGPu$)=fodO7^NUT
%/FFVBYgTLg^cM'\(E5LNIV]B'j//OcDQDgmPKe_MS$iK,*+Dp\]q`78#Z'pYD5#hVR_G+[Y;^39G[nAPg07=%oXli#GMYEL2C\*=
%`F'j*RHBeXIC;oqmJgu9FXgB8hLifNnPtt^I/7^iQ9t@/VmO>XNDO4oWTVY*?L5[qDqZugI7M/!oK-+IP<[]ro_s5!D=Y/!24K*^
%RUc>8Vk#%!p(T(Bq^di>Pc%*])U/:C>$KV>GHb_Wm!TsI"`4p?nj);$atH^Ak$:iJ_p2!t-ZH>if"-E'Ts,&ldj\Y^2&:WJ/B`mR
%TV7\@#//K+4d\!Kp;,qY+qjgD)M-rS,0l9ufm=3_EdAa&?h&NB2dPc;b>pG%d"ID?oe,T(kB#TU`c;Ks1@LLtUg(-X:ID3&_5mij
%,a&(07d>nO0es10D3=;?lY"]^n"ld6qns7u)D9%W6-!)fmRr!Qk00/&Z"RbA*d]BkMm:*6's^)@^YG==/m!?6O$+N?j0a<3*ZsO7
%RJ:2T$mn*E]I/i;#YUn+2<ba;c"`m#ICubH`:.W3bYEKUA9Zn$-,2"K7EQ6GIAMPAk=qth`t#)0<8N_j+3"e@-LH8f'Bu=%&kb/Z
%Vc%h!b',V\Qh)IieXheh;U+US]QY16bl4s&b^.L<AMt:-gTp4\/t$#!2nb`XqfU,:4c<_9BtA'B7^^]"Y7'$XH+tm!OY>F[+I`5?
%BjAo44)BZR(+c?kRJL>lGZeQeKoLLD003>!=>=NrI21LTj)jfAQp6gOBCAbJ2DmHdc.:mf[-11nAS^]#=H:+EFNVDh$3K>"4B8J6
%6a%+CGZ+T:V.iNT.uV^-=4N&k3n;k<Q*.RL95jJR("PN.W;5F%8S6kO\phQGdjEMheD/SZ\<cs+]X9]sfie3tXt4_a@VD\Vj8F%I
%E;DOWleZ:;k<Np_J$&sW0IcC7jreLMX/Ct8ikuY`kQF$<`oa7+C3lc>Fu/T$N1(hGgV0N5pDpA$.irET6e5FVI[Z8Mp2S.":;)o[
%mFPt0\UA.F<uq<2'^o!;Z"do`c@0nQW@"_6kpGT"G5!k%dWZ5.=S@G"]RRWE*7jW&HrV3]*1o^#Q[*M1HLGe/^oM@_S@sXmQ2#.<
%);;cAZF7mp5!.KUb/F5<D=TE=oki*]Y+IU(?i0fL55).+GJbWNp[D*po\P%7<o/&&2>,oIP(o$dmWJ6.V!RK"]A:aBMH65cN*d?\
%:ReP4r_.8#e`Y!-Bfn3f8,ZjYdHM-J'D:MW>c^/N_Mrkie<tFDUP"!E(^HX-0XG6D4Q:;>?+DqbOO![RjEZ\)-C`;MD<`W[rb4Ol
%R[UD.iPpg)I#hpJm`TmaRO*bMi?aBQ>15U$YDt^#Jp?.,(Nn'$ZWOC@LS_1m$SS.,Tss.WW<*OX0=!boIPq"_c.@DNN37cpojlUp
%,cT>aCHl&oZHn)Emu1%$qNjomPDD%SRh'G?['a"gQ>P3)pU=WC(>Uu"pM!\Y&Dc/O'T;=k=O"(R2[>uPSO6H[BYFS@1&lI,37K$l
%KR8#9\DKB'JXsq*D5LH4SG.$^Adabd":&I_1"Fan_D8)6n.^Re0f[6l-epQc!&jZg`s8U.I(=soGHhZ#re08E_Oon;C.HMJ8NGe$
%OU(J;W\-ehE?a<gY:oGd,.Im(gaD_:9Z1/5<+ZoiY6p"RFI8J)]bpLnl\II?L!E.%U,nX]!_[*Ua0LR&Zi)b[F"Wd:g#ib\e`Tb-
%kH)C.F=sZ[`B;P>(#eoQd^EfGd<hsHhITa%GjR:VU]Npa\=oBnFSZBF*9Nl&Ku"IhQlgj-*@79RVc'6/4N7GV8CsEe^%seC6iRnE
%]]OOB>Vm<=j7Xb+A^D".gBIn>7Z["Wn3N\>W,i,I!M*`eDSgAsi,;bhF"m.MCs1@4B02rUE,[_oi-`fSk4(;J*,9f`b\0170TR&/
%h(pi"mJ1GDVKU!-q@iI4jTt^F!>o-DPdCb`kFk+fo)Xn8E-B1j3\sQ5\*"TY5n*4mpGi;ijO_0^m:Cri_oJ+]].Hs8>nqJnO;kk!
%GkL=7+ZjoX8(=UHYeITg%$),A#@bXNB4?![_YSP&s$!h*Ybjp$A*EL+@>-7O%!6Kci>-f,;fX1F253#O/]QUQ%dW*Okr)^8`^V%Y
%A`cI4(s?@XL]UW*?jq^$6$]QG?6@@u;U9Ac!LfcI[h"mAbA'C^\6.UlX!hGbPUaDI&r#(qrn(G,=CD9H-'@k+_W3pa^mi'o`RKX$
%0a;FL@Zem8Y=7R)#V-Il;3o7[`%udg5J220M"bbQ=@31?HSY?:@f:8RSeSG-SlsNoYX3,,N#55?OO[j^EKnLI#:ncVU>hETHF1V:
%\/\O_]6fS;"a",BEl3T0gV\%tlq%tn4u]BuNK(CoLDA"G^ZQ//UnOX&,n6a%[[L763lLU7c]1-=4I3?JX]/)JQ.9T(PJJ,LL>-cP
%-,L=FnjWF4enfi$'4H<K?kph<6`fthXG,mKM(Cmo&6!r?E%>k16NsQeJQbcg+%fWk=OmBlP[K2YBZ.mY:u^g1e<%Z'$sO!+XQ=/[
%^_F#e\Zk53#"-H%_^u\%:N*EpX";h^ANNu3g0?`rWgLhacnL:I=JrfmaCD=`VKOR(M99>aQh6/;4+k3F7,%dK_l[A'GW@"0[2R3u
%5+^ZhA[/u$<^d<q)@_>oX66,9'X795f_][UP/mFk[GTJc!C@RfT]gtG>&h%W;q%F=^tNR6g#](VM`("bdd%P7Xt7@,qF4TGZGp[Y
%o7.`5=@\$=,!<<cb0Z0QH7^je5s3^*p1Y$`+]ddFatrhhL-Zfl1hZp.d=YCO*d?`pKCoq&8B.Y3Mnb7kRd/j#Yu5ZbNpW2D@W`os
%&#af6f2+mP45BI"Je\Je8/c7`0=sVSr<qfFp[j<H'#mbZ/B2Em$c-ehKnqJJE"C(TNb.76:9'<P?_J0d2>$7$:ftK%I^\J5DE8c!
%;No"*BU_50+hiNgC$uqsFHi@LTM9TqHcdrD5S7YQ$Eo)-0K[]0k3:K^Out#mpjhc-E>=R!h(J=QXE_lFT^'Km?h%jGCN"SM5@"[^
%/GrEqd7?XQCOR9S^0Yeqj'LiFUY77MpQR!CBrL::UOpAKJV(EDBclT;1Wsu=!kdo&L;0+R\3;0d3\$iP#8J2"1(Mn7P^1t?NBB8`
%Vu9:;b!3Qbg8F1f1+L$;FfOm<MGI:oDsCKn.8.%m.MqtYH6!Fh3UBgp>4VN!08`QGgJP;O68Z$o>jU2[T4X;;d8]XMaW&jl.RZqp
%]LH*riH9VNb=:mcW'f.?jJepII#KjWe*b;2GSXJTH$`Gl!>8_N1!Z61E_k`!M43o_E8C`CA(kKi,Kn*tQKJ-)U%=Qhpf3hCn&Yjk
%j0[*3$MK!sr7-CKh!heCcC&CBiL_`!HU/l3eJX.)<]1B'@3``@d=^:kM:PtViddMO$V&?*5[c<_BP.T1DZZp/<!->4n2+Lt84*K/
%#iM4A3.qL^1-2]A4f?UmJ&ip6h*S3'Lj/j"J<_r.gACQ4a;3\G_\MrH&M$tH^2QNB=Dmi^Pf(Yd%9u6?El3T5-UOoKVGVk$n<@Yp
%YYNDS"-<+g=A0Z#>C_eH3VI=F]WkT1CCsTO:D#+ME7?CnPr7*SCV^IHO:W;@(*<lcHgf*ee`VrVYq7(>/oiNXYsR&O+ceLTF3A!g
%]etJQ@SnC+Z;VIB66i<QRb)88`K*3f/-(X5o]p%_hNVpPESbN8[Nc7=+5*!L8D,CJoe.0M@oPr*N4PX'#Qe,@"FjT6im86=%<CV6
%dPHD-blk)@q):H06cdCLM=%F/()%<Gi@R=Hf\RCs$_g?,5V-"kI\BNTK))kacsXaB6qqVqTqDduXGQc5XR6o6aLGh:nD++tMsfgV
%U<"6NJ18fRRPAf3)A:)C$'EcJp)/Z50-'Io.F*+J>mF`]d+pe<=TZtlJL%Pq9RG3"!?!35a%CfE$2oFFftGt7<Nmn'-b,j;GAD0+
%!"Q.m]p:WYjMO'Bi$KY\p\gU3o7WI.3rHnfh7$l<:sqYH=Fj5b#go9FF4f!;mAXmMB])?n<u`BjM;*o/L`CSTdg5,U-XkN*oO:'/
%PN*8oDGP]BY!LORo3iGR$iHI.o)3KLdQdY$48"0Do_Lo]P%Xk]05p,5=Sa2S`*17%CE_7E!'U2"MW^?$l&90M`Ij8,!$:=-M`B@J
%'TiIm5-c/^'tWGL3pAj;q7$Fp-1gh8@dt-^EI%(B_*?Vhoq^Thc,_Jh,N>7p<Lq]SDXq?pm!1sl1Dtt6ED>b:1W'814J/ItFEYD?
%'(crH"J+J(;5.kjD._/2Q]/d\3VW<qBIR3H6Nt=L1^n4T7G;u%4%GOs+HE-moLPRt\-*KfZdAtO/:dFe1LQT6P<M#5H)goToe0t.
%fehX42XZ6JhUp40HPI@`!S!o&>?77oG"U^80Vs0hqiX7"0S`&r&r"\IcWmp^I066)j^gLhbE%[(_h8F-)C2QOWU77#c;^[[EB,V7
%]],Z@j@2EIag:[jE)\Y,'MV/Job:+UY]8MpW[j?VP*KW=%r"q'(q5Zn9!_APac!R8FI>I/!!i+2YtDK#nWH52C(7%%$@NOU3Tt?0
%gNqZIBpur4;<e`u=<$NHJS5P&l@p?CLX98S16),+ju48'>biOMk4W-Z-!FRkSb<G)4`r.87\X0CphhA2i,CWL$+8M`Lpe+r2Gf/:
%n+IHZl6F]^G)PHe\A_Zg.-\+gb<i,WnW=X6;d=f:nP$WD)`>.SN(;66#W@EK#Sb>&'s.V%lOHT+8bM`<?P4c1jAp#,%F#h1nj[-J
%\pCm7'8-R37_9J8g_1EN^s%cRZA>X.gNp`(*/3\c5iOme'\:ZW!QMe0,lAkUf&Za!H?YSaO#M<FhY6'O/Vo%3:IWA"=nQ0['Eao=
%E'ZZq,&.F6#h0-E&iKb[4J>2SNniPM/,./)2(kP)'tg/4=$eZ/:/b3t`EQ;mFG/Y`!#VNnG/DF$?"?+>Y;[*V<O283MJue)X'p[#
%1tSTZF2G9Pa1V,ea//+I3e]g+(<#%mFWp#?;%?=mOqDk+Nh@7n6nbgL'?8tQ,8U!9<7kd<3)M5!.@:1(=9%$J6\u?7$?ePM4jr\<
%CeA0s?9+AsMWH;scLRI@0ag8R-;%7@HHg2UO>pQ-McXX[Z?fi:KqM0CB))*!E(E<M/mU$856qm=8oTj%-R"H(Z?DKkf:mm1V#];"
%"fi:LLt"[4JPm&5,fF;<ilpJ]#q^#0$sMYOf?NY;De:NBN<\s-Sk\M+iR^LNeu?#5'(Ikk\]tslejW&Gb0m-V7t\,s%M$dD2@W[#
%E2RV^G6()"bL3ff7mk^]f0JH]TW0Jt[nZkV<Im-sR\@tk)WLdZR1#t2XaKCBXj,(DqcstG7L0tMprt..$@aOUC![m0Q;BU)'Zpsa
%V((6Cr7UX2S*C"-]qVkFe>3H-XJ)?WB\;=+n>df\St/!_APao;,:L4&aeaso&<Mi!b!BHp>89E<f]V1d^pq2)CS;q/nLgTBae<F@
%"4f1dX^Xp[NO!75-&CA`eJKZ,UFb*QQQLM1'12<%Dqld@Uup:YNaamR"BF)2=4M3/Q0goM*EN`%)tb`Q+q84LpqAXFf?Lspp2@=-
%1jBP(h+bMhH0t;5!t#7>[;%XC/H@-d%bcnS!HBOTVh!:))m9FJ"1lB&/cqiSUZ>*O\W%_mX9=A-:#]g7Hd[L_-,C(e]^<SsOg2HW
%^a$FHWl*`4>IcuEk^m%(Re.3!fT<'bDp>/1`7NMhUh5So3A'"Sk^IC?ZQ8Ar<H`@>3gMFi+*u_*\UfqladN!^H@Sg[<kg$gGoImV
%X9o7J`<7"\kgK)%8U!MP=7sgI<I8!Y9eGcZS"HRd5(XA-V!B9#c)!$YXAc'/I2qMkZ8i0!3JB-BqcNkT..Q;qb\:83a0&GJSCZ&E
%N7.a?h>4n5I:22>1qs6j^,Tk4edrs`f"^LUL&h2+qM.o.(.UP@E816As&P?(MoCebFK)F(K?IP5ptIBWL1kH=f>itQA!Rq'g*&\0
%3XotG:mi(B2&5H[Te*mu$+\!<eh6,=2]9HUgaL>@M^CI!Wl/&7BbL.*%Od]=\"'rYVSO]`4+O+IO#FGn&0OHud`<3p67-$9:`<Tm
%mCHE!dVe/AhrMe&;_O?@8sZKCe2VHgP]m\#;g<qbTu<6YVY3>if=-7:m/91G!"E?FQRd:<jg:N*(5GrE=:e9l5`6^LK2VE=H`ELJ
%,.>kJ-a.WIrPg*e>(ZPR0'9?TAK;:f$_Yq]j':d$4qHj%?X-1^!uCE<[?gE(;^u"pLDK-$Pk1m+nc:TA.He=Y.]VT?<9N_nq:'3U
%i+VOVc:?'J;Cs!VGl5.C:VE(_JLOn&FZH'F<j%bW6*>>"-foa@[<rMO.3lSZk>SSGHf1soITOgm?H\+Gg-*USUtSG2J??'EH$_R/
%jk;'*I\q`H9#X>D9CA7@/bJ=m/!1A]octGQ[oE4"QCLCE:1,nnWnYZ:<AUY>"&]pSOr:69I$IZ'L@JK&?iIV&LED[O&s0]KWMf"!
%F.,^XRpEtA13m]`O]B(=NSZ+;-%TFPc@*2p0$ERt^X:+2@Fn3u'^jj`QJIB">tTdbhC"A+A*#(kBDQ^-d&#;F`VM_5`qA=SRa\G2
%D-!+II<1p?G1`?5XXPU^q'Cp'k)05EL2_5-pAC'YRHi=obOFi'41U$fT9\6gP$asI7_uCB?UV?4691*q7rSQIPk.NN?Ab,D'c`L?
%@\K/YT4]fK9DHFY2gn0Pmq_9m;*tk8[l_Y$;`Z+5o/+!#j@sd#6[_s<"0!>TUKKi2"p!k`Z8&L*d)H8.\OAQf$LB&N(%?PH:?=GG
%oRVNbk1I(f1eBEjU+I]?^<g+`GeUUQh,702;QmhiLgjW320+#Nb^0esAr-;j0IZTC+ft=a<)n&eoDY&_KLoJioou]p2:(64O*W9[
%SMrgGk(7..1PiG)]2kZ$ehP;?.YMui&(*R74skUeU8\s3hFb.jV_q^(R\Y<Yp!Ro<o;E"RjZ?Yj>coOX7Z0-]^$N>6?FT[E*LLgM
%`_(`W';++l*<,bu'67NaHJrc@i4L0B#Kr^a_teqB0Wlj^$NO(91G>[KjW^5_)bTfV.TW^udK%b]&LhGq=DXlm)PKPs3@@VMpJe$2
%[;oQ`4WQPD!"A+l`/C>o.O>3@FC9,V9JfiVFc.cM>\bT.]dcBV.=kAMe.X:(#OXuk\a$cd8TBa)a\F@\dG.=e^PWZWQaP;LO\0+7
%87I6Zk!R#n2U?gHJG1"n9Lt0!P3J036_B$gb%dbl2aqZ7MuA$I,1Z?i>d\I+UGqVakfp!#(qif+1kk-fl%dY*M6at@`qr/B#\1qm
%eeI5m&A9OK,rl:IYhl(&0jih:m'(9/LV"V@U!qr&e\h>HH@rZ?KAXCicpjimki&6[?S.*=((?(3:Lg++[n'.aA)j[)-8q[Cf1KQ'
%%-\#UJJgkgm4eI$,PG]Zn;egq7\a#e(*-,gXBbNjD35$T$X%sB3+N='[D3:i'pc*Ra.i>P5r@1cr-j(\ftNEnH#C^N<LPD.H:":5
%'LbQ^h\<DSgo.MnjRd2XT/7@g0%c9I)&iL%II#mJQ$F2FNJ:-t+&qAOmmc-@1(U)SD11dDauld`*l"f#j(gbF`Ha\N>u@QEPKOuZ
%%d<'1ge1S:/uQ=&AY'+VH&p*1hAlH=SVW$C]Ec\oVYmGL:Mt'aVY5@<junM2UM%c:I_@DQ'\(s4n/nfW>'H;9>Mi%]:'g6rWL&3j
%TX3+3H?lX^N0#9obbg_qBop'Q\bK=,49FUAX\#(L,Y1JkDf,]"T7Shc*hhe'hfQR^ZI<3PT5jr!eeDn5OP(qsaOk3.-:=OjFqjoA
%#P$bU<su$W\D&MMKS7_?PmZ@%,@UMHW=B6;`M'qVWi,<+e1jn5R(6**VF?FD'P0!3ATqJdUa>:*g?C_6p%+2^8iE$+GK^9&DLj,E
%B\T&D+YQq!-ZZgfS&I<tC;G_"Af@]7[$qS$<\9ITl3FV[XZn4s*U6/#JVB"%.!=.=H`&(@rqAR5A0I2L'Zn5'[C[-p69r:=P(c^b
%MI_t^]"VK?f"LRi74Ad=F^@dN'$I%C7NPpd_dGF!pAUp;:NfmQIo2g.gt]:cmt!^p?AjI9e"Sr.U><F0:TNs[bG)Y)5ABQ:Di4*<
%P:V/bPc&CR$FYe!op,+1b\a98V^4>>(E4m6Qh\]!9p-M=P]1njdg&4gFO$7OhOu?t%\`hNUa[RXkkntVh5KX$'<%3lb6`.mG2H5,
%\JQ@;p40NR't!"P]%'kE_adA2X"[ecT^U9L.V,D1o71]iNR\g?F_<\T(aeE^/ndq+jBAg72W6Z!d^`DKlCiR_1U#J!,$?$mV0'jC
%:8_$^1;%e(\Ru^+e+t8/bClh47:@YLE"Uoqnmuuqk>5FsKG9d/Ku^U$0Q&JXl<i1<&`$3]m-[<Ef^Gcb9fta.Od+\0;Tct-n0[_"
%'%TkO@_]Q+.)7=Gi%="LE`f/LGOTcnm_VJ&*SLUD:SCdjlje4i@Wb)U)l7".dU;hsc[Fna^YYG`!Sg/HfPfAVa^KU*mjY>3(DEWS
%^StCFj7A0af'Lji?KeL_M/:r[iIMWmk6m"GEm*B2T,;_^ag$ADe$(0\^4&Ma*C@Z.?e4J=b[Oa!AZSj3Jog+_FFdFR%5&etmF?I-
%JRa%hS6n5DeFPqm3W^me4IXQr(Bdi>n+?HWn!<*"M,1:hT$_]Pom1Y50sc2_o6NR1'p@76^2gs#<`1AY@c!JbPL4@(MTGEh^C0Lc
%2s\S:64>?PCjsM8="d`CQHeM6A\3*HFp59;$#P7;X\#!3I?F`'Ij6oJl'9GZpq0d-n\on`qrG>5Yncg+_EPN15-_)9Qbkqsp_[cS
%gp+(ZY,Y:%l#j2H5*^QBHPZ<(Wm:JWpAHW!XgtZ3c8Ukqk[,,!M$sWdW_]>mmSVUa=4J\!CjoI<-g+cV.>mjMm$"L8j*,M3<nPGp
%N2!=90"(G&KmduAI=dj2]aFYtAsa'PhmK[a@=.\(Kmdui@REM,/F8Ri6Xd"FSI58TWqrk8:d6DqP6:LIV]2=80C70!=o?I[4t.o$
%pidsO]!6K1d52R2h*A@)'_]XKoeBZqpFPZpX6P%n^Hh9IKmdtAA1CW/>M(;G%(Foa=L%Gg_EKulqVb5u'@hP;fI'bN-V<L37q&%F
%/FbeCG:W"n%[aB`e*)-.;FG$nO30rk:CI'\L@cTO_>gCL5&m2oI)H8T,$D13.'n-p<Rc?We291bGjQDFD&$K@B^a"1CLSreJnqjj
%.@;+L^;WnF>nL.Vn^CZ(GB-e23O_4!<T^)pD9*[uUiO/>\2<3r5&hWpQ4*Vtesg"&eU*G:YF/?kXTI`AD(=@>:=$GP:IoBQK;N\c
%;sZ9Yn^:8IA1*>P^!mh-b\bc@2S8)A58=W5]%d&DS'hJfI[p)0HMO3,.*&MDs5W31mJ]>pV,BpPs4s%QrR8si*[JcCaP[#A>F\IN
%nisZmMRMl;RkFa$<_q9Cs.nCFf.[0QI(%kFr9I0#&T?\Vaa3R=1rlnVi[-holAA$E0E3BtT4M[i^8UGN21:AHNONGBURJoheMTK\
%b">CCY0&?>V1i0USsj<pP8g\sYUE(;.H(mP85g+\[ZVu+dgR"+<>.J%<^!KbdtU`6^:E`OITWOl,m!t1<%@rC;sq!#<%@rC9+nd]
%:-6mUpF4%noa4Hce"hMC?0I3>0Pd>=lI6)13CE,@4!a97&*F%ALZDaAI@JYI%((>4TC6p8+Ts*$p[MH"[hZQ+rb>;HOpa/^ZNFDM
%W@;pIA]tKITZ^r^o_`-'i6Moe\1#2)6XbrG=D,1N+#I%r!,*,?JrEndG6H7W)E++hh/(.MpCG"h`7.sWnXt?[&d7j]$\fghLO1"N
%5i8iEB&O+qii`FsbMt05ogp/7,Ub-B'K;@T3*6q-b@B^!ngM'C:D+eaX\_ah]mhROAU1r3]mn7dL[ruF\&b?8]mmMYlG'k':Z?_-
%?N'UC0tOmhn)5'!#i=KZ/",\XeUK%LcPu<NH_@Q-;Eb]k$8cJUL;LWR=4;FO<r7'j;l;J<[/Tf<N#sLH!GM5-p?d?:>^PtX$gBM*
%0<Z!/K_:AU3u#pA..00-F<NnNS1H9RGSST/r$tNb?=`I$\GDf278PiTo(MAGOO\V"O!1R2@TkC.:m4#Ugf-fj+1;haVL9k]R@4M_
%\<&0WWUb1G2f2Y_:t!G2-.0)ki=;Pq&PnZoVjM.%%EI@?o0$Hfel&I^;@O+n.kcnE[^t4[gC'u%:t<%\d3s).,HBA,d:*f$&;pqX
%I\4d';A7l?GJC`DT&Pb@Dl7<Q]C"F'Wg7[)*C@BYAXM6VJp46,9tNQG)aJe]_Y(LpMpr5*[^bPMANC@eef?B\AAUcS-7T]JN>rs@
%Rh40-'r%hS$;[Q^V/F:,/N#>(8$`rdI6'pg.:9"=$t&kAM:WBhBBY$TKnDf^A&!gl!h\H]+]_HOhU0^7eV0,;n^V`ToNP*hRJ.i&
%ND_A84IeW'\0=s)LY7rm&4qM:C=qB30!;^%XKPn.W6ai;AZU0pCKlCU?3o2al&$_[>j5uaRnAZFh61(OGI13/K.sp,O;)!SXRWd-
%6B.L0obtQ<ZjMpjL?44rNmnfJOp7-=.J'N<R5[sYRQ$C=\WPbKpM>(S^`"VW8j0"Q)\T5G/dKG:jc2+ICpolJ:TY3mF`O+AP0gNu
%lB/G`Lj%I987NQ'@\<?j;F<N:[*\6*jVLZGn=EFE#Jog%a=O3&(&pmNYaNK69gDdp9t[$]d@-X%T]'(`W-WmB75.0-reU(M1,gOt
%.JG8CRlL-b3+tcsIF[l]r,i1djrt;:/TFFl<!t>O=q`NlOK*RP_<jO8H(9W-/^<Bs=->kWE"raQ\8-7>KD8UNTZ.s*cLF`qejUM0
%m<q<7?k)$GBjb\(Oq02F6uI/t3FGO)j=])HW30r$Af%MNm&spJXG[I:(H(P@?E%jAeCD3OX*$)"kIQgc,Ng:%.@WDPV*D8u'CbU<
%g.d@ZWPm8kpXoNFaJ+Kt=EXVAKQOEVFBs4!p^1kelIEs2F@N%kX<eTM\l8LAh!B6OK<B:ioV@8QgLJ<^HN^SH:W<=E.:=jRam9Vp
%H<uaor8RUf3#Q0?3(O.i5H_<pj*FQcVX=4O(8ACYC\F:b%*L!59_)8cn$Q1p"a,FF74h"a.+d.O*VZSQ<#9[M\O\tQ;5,J7$E1Nk
%hPmq_]JW9!'E,EnnbNDs1oLYq2*5R"e?=G;g9Cms8/=P(]F"G4_n=e!r"ZSSeO2>.mE,q&NC:Ca"+&EM/&&_Qd4VGd'g:EC/fGG,
%2a8]^e67n](=/IC&hc<i?]QTneSd'3<8#7A(l-[AP,Pc0O`LkJL2k[2KCZ!BRS+:$eg%J@UU\gpY7%gG1aot^C+i0.>*#W$P?',(
%e67oXD$s.Q,V_T/kAjhUb6jY285[LH5N&ialO83<GYHk'Kb)cFbdbu1KoE;drdujSPU+0GUFn&rn>,N$=lE(`]:WG2p`M^/mN6LQ
%Tm0`;LL!q/Da8"_'rbYDU[DeTe`sRN%rXS\lDGF>$FSFGD23/".6kE5:d%71e'PkCn5+7HeiVqXQ0raoQ)4p"YFfQPQO=>SD``?V
%U#,AWAJii`jW@iS-tgfr[iGhM#_$pTTn%MG[iI[1UnI)JS4KI^eBJdNWo&!pnE]s7R0sOT)=,duiLtPu+H>Ln(ETTC$#!"e]meq6
%k'GA2?$Ib1Mi3H5H%u=7Knk$fU"megC8]m.iM$*ab5+%]\aWEEPD[*A:s0o2V@*pbQTr`/f@MW;]]#I!?WZ;=hKJZ:;n)Iq$P1d]
%aCKDkm(u+M.(gm.ht4M=_F"d4o,\\hW`R4p_>E+sGc741+B161g5dmL]V).c[R9_u&T%,F]C8Yq[R5n\G%6DR>H;'0E327j54tf>
%l?Tk%$i/NeDq>$t(ETTG"rD1,:G4hpJ`=>b!k2N]W")8(PiS,<&(PS[<8/k7XlNrkG2"1Be*_26U&&V]XFKj-$P./-O1SWp\+$gn
%brY7GKnmE"e[8_.W9Knjhd:W,IbUQ>(\c(+LH"'gpsTT]`DEAN'e0p;gj\4U>k%-h6\%"!Gc:%R,;f/)n50(l_eUm-p/6=hgC>;.
%(Hqf`_Sb,gS,2Z/LQ^Xfad1Ss%r6/</j0&G/aeT7*i_KAot=^FFKlW'.`B/k6le/dk1:CjC-![?pD4mNLV^pOjqegTb*B7%cC!Cm
%p7i!+e\-;V;>Kr&*iaS](ZP8>$P2?TVD[?'L'nO"qOYI7n5*>Hiib!t]W`5A[iP$QIX0lq2n?6'*=<EeIWsbEHBBhpMu1[*&(PlO
%KLG^fKnnZJ8`Q4'[qm<+*ie[&4Bsnp8FqOjlF.ctct<gdrk_%2:\$rcbRXO;-bFV6er!PJ[=Z\TWjT7)bSnYX/l%0i^FAW*ZMFJ1
%QZl!Ce58iJMC&]Qnqom1!X6f8EXXS$A6JeOms*PoT%]FiB)5*[YZ?d>KD2n&JRt^SF1aXR1!e%#U78ru/tK6c/%RJ$<p(@8m<uo]
%;1bd\Z1WJ5\S\ge2E"4n4,"F3:J&Iu3CW60_[-?-I3so(n2Y9ef"N+&moAh9o"0>15W/;q0"VWTIjOR\9Jol<pnV%=]8P84aoC2%
%:1qRadcS`#l!"T6LL,\cOdFl\DV]aPW,L-.YpH#ah5@d%86GJZC%bRYg<L)DRr?oNL=#jm;U\a[ea2MTNfSk=49+_.,(q7nj\k1S
%QCEk,=Iq?.%YrB'ol(=]U"gUs+6;YL+2-48]#9mZl>^t&6m\dE$h1kmLLYf=Dr;!Aj>W/hord9*arm&k5OY;gD!q,0J_+b15B2lM
%RAcA2k_1Dd#(/0J%YR]W3nB"-BURE\S_$od\35)pgmGdhq:W!DkU*OH[D\B3lH[\gmg1>Z<O\nn;O>V8=shHQSUfV_40^ZXQ\Z4j
%>Wp>eA(`gu]m:#<!!OiINYjLV@&oJZl'1eI2U*e=*Hj4a;9h%Op&s&h"CFoQn<J;DNWEK'I3j!o=92TrQIIl]*2u4=2kO8M\i\e#
%#5YW&/+-M:Yfa9GOU,$1#;j<YAlgu>bMDU%OmTdqi$U5NqUuC:MOei'+Qi,5fE`2R3E]df_r*puBTM%f@6`^O'R^/gU:/u1AOhHr
%5RS>$i+pi!^4HOVm/Xkth<\o;:G1t8"p!!Ok/]MVcs+[r$cO=XZn)Dt=3EMoN-Pss%Cl]RiId"tbWTnO++-m`mX[l[AtPZ9cZ$]n
%q:%@)EHnbsIqr7YCuZn@nA3m=i?#MV-'3AfR(sQ:d"iKC3<DC^)%E!PHQbfXQ%l2EH9(WUQj<*jXN#?;1oqL!X>$13N/jo>go(NO
%`!9WgR.pP=_B7-5oFq#C$OrGY[f?Lte6\WlD*p+8H$Vn9%ff<B%l7=72)dihU]Nq,4T2M/dL.g39<A;NJA<af6UFNkYbl)IdNtO#
%9XiXCBE]giO,_hK5diBg,h\34d`JpXr0^kfjaFG"gihZ9&G2jVllWchmB,`_NF/"<N3ik^^OZj-:SFI,L)s?bS.lA4#J2qQ[g"Da
%0P4dh57R9+(]"7?hmCk);QiIh/jDMfq`.PBT*SqGErl@(Ib;SmU^s/%[=MVacf8F(!Z(D:!)He_:IAVQb"TfikiKB3!Z9X2p;,P)
%$HfEA)pO1p[rX7bmk]Kq:@cr#nI-Z)d!TVCk9='df0q-.roKPfG3M5'dFNoY&eT0Fl-0=B#^J%Z7fE@npSQ,6**_1UrtE43#`NVt
%/LopW0V\cj[QNLLK8hT$fZ$Hi"8:@Ge+_:WdErPS%IYV9HChOMG3uC`+bk(7F@74kb:>/EA`^.:c,7,]m63_9i5s2Mr#,hSEU<<T
%c=fD4HtW2ncK6eK56(KM#FE/_=$HFt&E])B-FjOlSfj>RpE%$FhR2akJ$um+AJ2eueE/8#3p#&hs/ZIqlkf+2qr#;SEpVf9k?![L
%r&*)9QVX1Mp=Q5/SKEkt\o\%*b/Z,iZaYs#b+F*,m)kTK+5kOgm*b7?q.#b@qXjAh(VbEZ4SX)IgrT6>8>PnD_JPkCGabO(GnOS)
%O50bVVA]L"BKS!sU*JcH+#0sK_M*],HT+\D6ZO"*&,n'YgjZi;o^i%)8+.)*+[_l1L,lO-m%a#UXH11hO3S%"K4#CRT>1*i.bS'E
%_.TD([2].^+23l`'VWkibK1>,mi"@#Gi:JlXK2.bpqqf`O!2ED.p9Pf^:gfAe)MqhVKdH-CDbLGT3PPc>p4(`qRMdA^-\Xks)=gX
%BgO.*c6sO,2u3+kI0q.q^L,eWp>e7?X&Hkr+8j-TRio.HSiVP/85(fGo4l$8OGGtsT*Q^g0)\u!h>Q?^G3)3=kj\PeeZ1o_p<I=K
%p"Xmi2pZ?ToC0sof5=lBGk:JZ?b?'nYPtTgm@=A;l?YO@o>/H&O5IKfri]ZtQX,Zu^(l4ne;$\e\sGK<bIR`?7##%:K=C.@n]U*u
%rV=@AYd&KBb1@Rsrc%8E(Q[A55HgTj,+mQdB_TpGl^L!(Wni9:q+/N=q#W><B3&;H,*!];X7&0cG5BUWhl_A*m4BTJSU]:`4hgL;
%?UoSrJ)7]GFm]2,pXcV)H#W+/8qQW%qNo@EmlnFsJc=qIk8MHN5HU<mYM\o?lg#YJ\pj+e?$H,Ba,b/afDO&#Mfa:8YP4&0WE*1^
%7:_q;8$)WD'r&3eDpkanq9;"a[Vj6Z5C@SGnVIod^=oJ<S\OsV?IR:!lN_q9r$TNDJ(X\g_[DO/I(^Es4N+C42%(AlKd=9k?L,gB
%+4FQ/^E.;uI=G*S2U_EjM[QFK3j#X,[3)RO3@\"k&^PZHj3dPoSmD?hrU3QarUSDVcYd+)GNQn,=$HZWK.Yc3G^T+L0;%._V0maa
%me`KkK6Nr(b4RmkjWTY2eV8:ej#-R92uM1/cekR(m5ML=^U.b?ZjXO`l<e&c5e"E];#_;QPL$=6ICSk7kiSC^$a'Euq9j?p92e(M
%@.rR^@+nu^5MQmWqUO0YZS*qZEofbOqFi=%k#YWfq&>[T[CUeKg9VmIr@$slPD^ONI/D_1o#URCjg3;5pl-e/d*Yn_KMmB1G4##k
%6$'6Dj;d_PIr&q+IJj).+#_`oqp/W+fY0PSH1_?aB3(/+fD5&)$^T*iX]a$<O5j/K`k>=&?Mi3"eaf,p/R/S9m)c?sXL`S1rVg+s
%HX2MM+Gi$]kGrUr=(ghhV?I"X,(j%PH=GUC6'QXDVB'il?YR@IR7"'$+*9UBWbG@ZXcm(6^YTsZhFrg%4`,Yo6th@![D(uA=AT"h
%d?C3YBh(s;Y@#:6=-&sCf0@_k:S,/_O3W3ap=7RDg%Vs`h#0Y?0S==koZX5jI<G2+aif(sbgBRarHRtqURd<5B2?8>!O!#YrfV#N
%;ha3[CsN$.XnZI=cTZaYS'=VS2Olm9LZ/%U!rT6Nrl+!2f/HY)l,qW@Im:46dJ*HH3KXuq6qtD04rOY*S=d^PhqieP9Orl"g@D9<
%qt(K/F^+_=[gt-AqoOPQj;bltHL7X.q/;%O0eV7,BA]m6ksae/?*iG&GO"bp++Ci2\UO.JB,eTjGk1I"^H.5eUKude7*7k&<A\g2
%5(PpLDj/Ke7\i0-8aj:M&>3?Hcef@>41m]G$>fB+Dh7PHV5P\t#QN$f#Si-VkbGT[.eNGlTWfM$p#F=>U[iTf20"(2NI&S"?iL$*
%>Y]"e>N%@:`I$)"p?+N`k.<hOhjeq1HQ!m1(pLn:cYVJ1i$6*Cm[OhhZP0Ma4`g).a7sd:HKNO<DLlTE?b\^H*phtZUF1QfV&hek
%m>ol?Dsfao7qWpQg]&=D"&]+nq@1O7^,kWom8X8Y>L@-qqK.e^3X"QZG5nIUO"W`noB]9DrL:9'J^lqIo,m-S$f(/-5J?N;jYJF<
%/B$]*j-su7E!&d\q8,GZ^NbV6i&*4UbKXDNqr8\&f0@GBCu9SLablJZW\!np0:=$ViU>H8iZ,Ml)d`&%i#FH<<USOUIT8T'-A:L*
%0^Y,2b@*$V/'tZ@Y'SVEl^7AM,j$eIXG=X*r15&iinH]l)A/jO&K=g'#Cl-le_?^%3V1:1q9&DtT3^?eF?5P]SU#PLrQRFU?ei>8
%,QIDhj^5b$j8?;tGCTVir$D)Sh0eD%?e71hS[oT>Isn<OISF>2976q]a+Vo1Nji]LpilT@%Zn+/j!2(>qb$/?>LTBT?,Ae"j`KBJ
%ei\nSe*kQ92qfm3TD#Y$U"pcKp]oO%(<,Z"6%&6m=#"'rhPZ_-Bl?Ynq"J!1=6Xq0m:l!2m:dr.J%lK2g#r/'Mn(#6rT5]s1@G*r
%0/e80G98HnF@_u">kUBX><H9hmIZ<]lS$2eS?pju=%.?/9YPW?e.5WproWqs%qWK9:Y5%UQ(Q?-4087$-*_aq`5\RIhk*"^P0X4d
%B>^S7hS^B+q?t$_"huZoHc6/h6djP5qL_<6f'?N+%U:]kkM%uWK,:WCg06PtK,6)2Grpe/n:JnMr8rc^n-QjeFmojCZ!uEk398!!
%BlAC?#;6q18[!0UAe9</l1BNmH=KPIU;/.>N<N1Kc>dl5&)A>V2]oM-MrF\Mg%_uqhC+Qa<:RJ<qSH=c*d"f.qn;7'W#gBVafW*I
%kVp6T3R7AaY]p)jIsp#Uph<(7\gICBYFiT)F2HVf]Al,IXF[UN(N/]%cE(q"3YueRDbkM_pX7OVMrk7r_aiV1a7r9IY]M8G(<5?J
%SDNpcn,&<\<spc%::Lgar,mP\G1'dms#aksa2^q"GZ^_46#8`qFmHjbL5^hmNRQO[kg\]uVs]JiIepYR@3'';?Td0!_hcDNB27)J
%4hl?-=Tds.AOE5AM9kX<o,4EO%"Ge#f[]6)r+s)/qXj,3%F]fMp%J-$Ndg!Nj#;H!jY;4?KRrg03?EUtr]5q?*nB)*cbFt5UGb29
%[<Lc^RA/Wcrb:8Cb@.[_ms]6J-aa>$+6(uL5%$j@-hW5I#>"StoD)Htp;@Kj:&+&Occ8a^C8c9PgBA)DLN*(4'.7T<mU,g<iDuLr
%hCl6bp#u$MqBd'R>eLZ7grIb.(0j#uag_j?m]IZ/rL6.sK9g4--@I_8cQCn*pqPU++1=E6F?a;\?g4*+h#I646@5ds!uRp&).S8_
%0-+QQ!89)?*8no6&_c3a@,mEhRrRr*R.HeeN;LXZ4T-T7RA+77@+Fp4E"&&\I[,W2`PHO&TgA!_ZB0%<4[*X<EWN?Z`PI2I(t%s*
%EDsim:JX[3o6'KsM(*?1*M>3?K?'@RkA*dYC"eB7dkM>Z+t'7t\^(7Xc,)T/a-`Xbr[2aNguBc1J5bnh%fkB)2sn"Llbm4OP:3Z]
%(j#=3?oJVUJIA8p\?Yk[cXX;o-]=%WS>5"]rTgNEHuInJIdW;bG/2t)>U"j)]X]C#^pM!glcD/am>E:/["IMGM@dMM6C'=m[2(O<
%["A\3!LS%N5>402,S%kjO1rC)_j<99J,\Kf(oL\s$6$\TDL%0Q4^W7C92olQU^t'TVl$tL34.>UUe`!44V&fIVquqq;^m(gqa1Xd
%2pNtP1=&.%G@6uR",#BgULubTH%m1ja=G\4`br,N1oTaf]$m,>1eAn(IW*H\r8MG:C\m<,GNRLa0@IIB$&FY'Bi:ZPapf`L_*&)j
%rL">me*dg0H&4X3HuP5R`F$r^J=(UlB"r6&ZhiB/hjf&0%'ni.qIl7o0/9/[SjL[m>"ie%YMnJpe!!!i;VNgAbiXCW88e:fm/.CQ
%q"\:#9Kr'Y)uoW,)$`@<E,#lPIepsA1Qt$s5)k4C\I>Bh`;FRX;kNJAs8=SpoS5@GepMY(mPI^jqYAalY_7I>=^'S#b;hZ%1S6Gg
%rMnVD?%>uMj]Pb8h"IS*E+iT>HfN:fJgqgKU4;J6mkA_qc#hjN[*i*q3IEt][.Pe">s:J6$#a/+=o\0EPqTRqg"QAbUSD2@4aK^F
%:qVATC5)f],"G`5aW&hrGkHX]N:Q)]KlIfomF$nGN^*I2m[a4?Q*:0Jroi(,#@@mAK:D%ZqR_7UGe'`lrYR[KIiTo[gq6V+7,qL/
%LOSj<%G\<pB92]]C%@/jrq"s0prW3A^g##_I#=Q5pf#ZsY+=Ipo'7;8o%l9GL@:Z"n(nr%T-2oaB(V;eEQiU>';g93I!j^%`T,k)
%QpR7>5mob]]mK-?48Ipuo>A&X:J^O;IQF`\Uj'Q"--cIpH?3+1mUEc>56#ABn)WZaf=UV"m9<EHn%/$:5CMtK?R&rue-Hh%o]>b<
%^:h4bH+KT[If7uuhc?LB06Yh6nE4k\q53-G#9WksPfPpi*oasl9bfYuaOE?N<mig=lT?RooBi>fnn\fYe3*\1dPR#hf$FGcRVsoT
%o7+N"jBok`\&NpChY_0PiNpk&4o4j!PI32:rcS4]^Wp0]aLQ5\4Eu2Nfu&SP5Q'DFCd-\SC\QeO(Mi3bc<g<]j.hZMg3gF/oYJF&
%Z^^kLa,-3Yf;sbV.O5C67AUfi^U+Lnhg">HL&7@S%(@lB8,Snd2_H64%j<fLBRQPFYqs-Xq@0]XlUObNFm^dT_`!S$L/0spE)ha]
%M1,(mhS&Nsm&0/FbH3H\R,5c.%l_T'04+GLb*bIXqtT_0mJ4_Ij+CS%f:UoVhd1['_jt6-cLoq!?b^RA_D]eLZ&Hgk8^q6%PD(L_
%YEDDhS4"sDIX:A/SR8N@]<q1r;uEt9*m^F^4cQIfS)VAL/:f>Bmgpk4A-oT6^3+F)8X?U,]QJ4'8X;'=s45/G-!<PDk\ihYk[gqV
%((2hA)j%_D?ub+dX$dB+d6KSgbp%n6c)n>PAe@BpF3"6K71Ak?S_3m"M\s$o]C@J/(l'^id-G*+>=tQY55k/4dq-%4s0F6Da*0_H
%l-%sC^5ZJag%Z_<i.dG0GM'JANh/K8@Cqi]#P-ZLjR9bV"di=Sq>'19^!tA1<lc8Bmi+9p8g>_\d=1W8jIGZ[/&c(3XqK,Pa1ce:
%,biV1RZoGQ]%VC3<EO^0CA&5_l8!fOGM:0m/ujZZnbWQ:j'/%uNHJ8L6P#W.Q5afcrj[t$RQ&O[l)6C=9YE/3b4G)p5C@L'ig2__
%4S`\BfQ532RuMXl0GM0ERA'uRLH#5Y9r26m..G@TZmsEE)oLgY+$:S;.Vh?S9X)'HWitoudmP9(G-VZUX3YDA"8C#fpr>Cb`+OBZ
%9u)'g-$b0Pc3FlH^,[\8p5@+l%T>u7MZ)#8UYWmLQdZacY,RS6H!d2<_N&J<3Aro4^YRq7oZp;S=\/%2n'%PB94OLK3.C,G`.**-
%h%!*WdppEN?M^o':S44^Ekjk'G5_9L$i[9eiN[KJBoMMpqr5aX`hO1T7C>P'a)NUN>l3LX/A-3+HRFF/jr'\Peqt^];Rp2t\q9B7
%^B_pU_t-X-m_)__qg:PjTXb0]+.$LJ;l_Tq_9ZD1n<)O4EaAA`4oOGL^ZECU[\)mVp6d:Hij,?LlHRPAV^Iu'rNl!7hZUNSq^-.7
%H%6a:^(9P9Kmc3DR[<ef:E?'D_PN5VT2,?NE]rS\llO.C8q-,TrC_o)"J.c0s)sYLHS!fo@^;-c4ECLq^`l)c36''?@iSs.M)5+k
%WRi,"*8pJ'f:n%s^[u,?jmgrmKSgaM/bohkZ@;<A"q&"b+_T\S'#WZp!tH<g*F]$EbX#a/3I08(^<\)iUNk<JmIeJD$cM2OR=3(7
%m"q7#i0A\%h_>l^Z96/'+\lPhm6N5+*:Rt19i:6#YVa--k$5XS)"%sI\TC-',=TrR5":!6Ia=T-qs]f/L$-aQRQl#o8N?a(4a2>+
%00XUVE0tgq]$;@c!)5.aH&UDq?CA,5/<S8kf%iRfC075.ApK?o9c(*/J4<4ZKn];'T>WL^SII6eFuSE7:H)&7(sah3YV:T78Utp3
%%_EVXb\Ks__PI."U6]0D(G-DioKaka%jUZ3)mZ>7g+UpJ_\+(AkG#7gIa6BJ;mlM^bt$C#^3&eg[:c4k_OboqIs,>^ri[FDc8`tW
%3DT60g:4%8[^T#1\hR82YPi_6"#K(erpYbYU#/#)q0P%ASE],W<StOfr&7Xg?)P+TWo,W)(C\kmi19Vq$]'*eJ">oYK9h"_:7El^
%o[g_$+)5(e=sss$Wt'n,0@*;F:8b\!3`#aZna9N2p602rgG@`sZ*(2XcUZ!t\\DJGAc1::H"hI"UYj(#\8$//+)W)<MtVTX/_V_t
%fP'LFCh!;E'bId!TN^/G(nV7P>eH3.!lT+<=/Y5hN6PDn`HCSXr:gf+ndH+t?#e(gnE"`=/&(fVX:h"E7Pr"INsk"fa-WlhlPJH6
%Z_)^>(mO"Fdh=C5eqq)R2)jUqe3>akHTEgt\e+CTH<Q/Jlm8p7&o3\652"S4aAq7@q:E4`&%N7,Ie)OqAZHnZ^\n)KY;\[lE8bK6
%[JQL6D3B?_Nnq8?cJ16uqgP&7cCGfkJ,W\GjdJ!jkASY7[Jo@X#5@`?7jmDrn"&.+If@`%C`dp_YFk9=rmQM@!GGBmq*)O7+_PWc
%+MWALem<k(rQp&jEGf@`ftW#NlXI&fq]JT3nDho8:C@=*o]`":c<'U^2nqi(iqYg^onm+([m#7`S+skH]_HJc+1fYb0&CgNV[)g^
%^Y<qN?i1u>9IIOKpA1bP(XJFdB?*3LrmRe62Q^-YhS&)`q"VbU#rYP'lc^!>7<UnDo)Do!s$(<?Hk)2c9YU"ChRiLB_:7Wsi-,@s
%e\`2QrP;"P]rMZnIIq(9r]^pc*Vl%+e,KXJc`O%Odaie<r4cYl!P7sqOaiqsTE!r$ric@t^]3Ks>]V:E[\1.e4+$)BMp4cH0-39)
%ErXfWCZc!#maJ:V52'7'[l1s>:L6#qG!]e!glj\XY:&RV]ncF?47]R`m0`jgmXOcI5Oe.)ph-fKiP4jL"6'a_h*:]%A,5A5Jc2c0
%2lqG=pANfUmD0D1j38hKo#!/_c1p`[*n;@AFOVo>qu!A^cbIO7lRobNrS"J>pm>j7%g'fnT3e]U\5;7A-NDC>r/bsDJMVDnY@i*U
%B.c9T?K<L0]J"+b%4/+#g/-?nPh0EjlRp5j2QO+*+)>0ZqoHNmo'=i<\i)(HXnrak=rH+A89i[]p#(7(_k1-&?:XTSEbjE"r`+jb
%,?'a+>?`1aDJRO_[,1B#en-oOlS;@@F2%Kn=%c_d-2Ep$6c@_3k-.%V;V#HR`qA7p>'$ge9/XhHI*FECWGA[!\6`ahnp9s!7cVNp
%.='`rN*9+_cW*.Co<=glN&,NB$gTR-\0diklSTrUOcuJL@57<N,`=Ig+6<;Nj>C"n\h9%hN)6((5KL&tL)gKU334[G<h2Nlj3G9l
%A>`rg>aF!ai:T)-H7UhhIo`/h%ZgV=?apN6X)LiU07jC2:+V/dAls#XY(S.c,"ilK>78e'k8ZgK$C3"(&:;2M`\IQ&XK3dr<&QS2
%7?AJj*okg)J;40'1`\<0,L/MkYRPk@QSM;nbi^e`%tY[>5Qo^&qB3shqd'L8bkHAlIQbVG(L^'f;UetP%tZrHm<$EX*-2%$K4,).
%$[/tp:V^0=Fr?'"+!LHe*lgeD92jJR;H%P,s)c=9%QXQ8QqU-A1mXGnG%q)MDKdY7&$cVPmu?KIj]:*J`q*MiNMnQ8)\Pk8bi=NN
%O66g]KOGT.cbWP=ca$&%`\LN.etE.c2Q%PU1inZ"YUY]NoAr!^Y7%>SCC:6!52c@^$JJUnX^R_1TSc_/lciGI^%ka,Yk`Y^TfVf0
%J3tDtR8.QH>6/#L36.lehd$@\YpGaHl5!.1;f#Sk[W43u7sX@CG'T6ZeObeJ73XT!Yn)(7"t8^p'5AHI+^m4uOGfe":8km#+:.-D
%`gWg`XTbra3]UDQFT;e$[m:eGE]HLS6:7$ORQh\f&/J]k$1Q_.hO]7g>`n7$VBZS!`6#It"tYsZBJh>k[hS0AGiThq)mpaaU\:Ab
%fR-F%@%7/4OJ*1Fq0El*jTRY3N.,K5-K+-#3tJc%pHW;I4OlGo(pf#=rQ,8#B*o:Nm>RH/TNR$>EhfMlPs4(&b6B0@C%H&)q1L)&
%TiRj8e@!!m92OBD%M^FeDeUaH[R<_X$S[B)R/@X:7!JuX:=B6=%640hJn4F<G+ms,6%P^s2LOf*+=eE-F7t_"fJoEJ-mq2!ce3Q,
%n%(\%0,!7#4e"bc)n^,YVr6"<eY0hca!p]Q?%C0S@0(1(1EA4D&bhHD$-a0hEd8[i]_j7<Qp<%BQk$A3GWs,#\1DXGA_C>h09Dio
%<YDJoG^?i"NBO2-+IOiO+V4\6.>2Np!Z+Q"OKhNZA'GMA_C%d%BZk@Na8C8#UgthKo\RDap0FfFSH(HbWJ-OOB>8c_m*V#(f1oSa
%H=^=Qb*u16grHaZ\ssC];3OUfU@F$>,*HTu&&-.+&kOX:X$_b86N]a+$g8)#5Xj'G"JN@E3M%p$Kp'tC_6k2Zn1DLGZ3`n)o`QZT
%>CE"W#TctBf\0t_A!5p!:8E_Wn);+udJ@tV7EVPm:>n7*0TZinhrZ+E^1Gdd[HTT-+IR<$k?!U,5CMP'YgMO,k73@Jfa8Hk;7`]T
%An[ghc6BPdKPjt[G-A<pcO*.n+XsJd6^-]+hT8oX`ZpX"LpB\s5uJ:<Wih9:8L;mK%TRNZhcYVnKCA0udC5!3HaU+*r4pA*Z+(Mp
%$8#>\Lo2E'[\V8(PNLo:r93j)W=gghKiLM?2r,%h07,hb@0BS,+"R)I%t0jt[f@13!A<%_#`\$Sc+X@Z_uYNeTmK;$>`C(VcB(sP
%5PQ"<4:An\Hr_Xc&tMuV.g`m\d'1"O*5&N$IT^+g$JmT0gUe)#C4u/T(TsX2lsg;8OZAaTE$oE4+;cQP&4/,&I268fDafm7KR+!^
%=TFLMn#ZNJ>=G2D+g47p1NnC'"XkUK@!;q6/L=MWa>jDNQMnXP;gu$Ycfhr^dcloCn)9N3V.k,[mR6%*7>ZnGEYNY8#Jm+N]+Bo\
%m2]Ou/TTQk/m2=CQ%t#,"*7b4btCt`<]7`3-egOp0NpL6We2`M_$h[o>\Hfh#)BT:/+9$f,*,eKM00>2p<Cc<V3stQ,<01B^9"pR
%c-889'8dscMOEq#NUl`q"Ji.48L[%kF2]R/!E^d`LCt;D'nd##"21);[deN=iaUgk\"\_Pe%G5k&c+obnd8<p5>g\Zefphp',E%^
%%)B^lj\cPPM$Ru'L4M%[!Ru/T+=B9P?na)$.MF.<.H_D'N"ed$Q<PMbakb2>oesa]0VA6_WuM?,KQY?^lVjp3<Wq$jpJldL2uJcC
%gTu/ugT3`D+HqUh\@jr/cb>>`.6$*)7pABJ,lf#b1:WD9FerG_:`rGCi95gk\N-B/J6AZ].TM+KVGsi%?ugCe]`V#QXmdlk=G@>h
%aA_a^i%gK73>3Rnb!q.;H?,1`PENd>3<a;A"CV=R#YP[5q8q0`@4+=0_hRQ5_(k+4<0bB+-Tm/"Cu2:Y=ruWh$j,C^=iUY305@)K
%ICD/i(BrH=.gCqUAt?9`g;/tP&>$E3:^UJ6,I"?(oqlQ]@JtV<*TrIjA'VVBRoO;Zc2h%&=:?Um-X3lTr55eVPqWQ/Y`Pi_Js5`D
%NURp82&sk9mPQ<:i07/aKG5QQrh3)<e:R49H3olYp529AdY7d1.&D&obbdm?>I3e-^GX%l7,`nE),R]C['oNdFS0R5'jctt3U-_t
%Fq*:WkQ'YT_f^cP"?P4S!5Zs7.kAjcTuOP.l9OP:$%d,k+<gNcm9Zr<)^Z[g,4p\$rt:hBHrN"/plHki*$>08e:&5VmVCJ.B5RZC
%Osg"Q:^AZf\bO\!Yb/e@VGPF&U1\`A3r,CaF%T`ZCi);5<^lJ4fH)gX!"Pk7.*X`3+d&N2c(h%.)l"<SKmkQKL(J;`T:4BVpTW6r
%4f:t/%2eb&*YcoNqdOLd6H$PPo&pJrEP/rj[FdbQ2$m:-qOeEH;VqTTU(B^BPMiV`dRnaK;::1/*GSN=,PNI7TZH@Vq3I^coW]kM
%$bmU(gc761Y<%N>X=dt(&B\[Ulshar>$_lbm&+fnO.]B!SI[ud`IroIH_#PL;op=80SZ;PJn/5)?XVh#`Yf2fP)V0$;G$<rK^0+k
%ZM,'(!N*W8_]b(b\Bm[7Kb-eYHS5&ka_Z7:<)!/h8p5meG<M:IJHV*$2PXkq,bi*ZS17)q9"I=&;edLXXrS%$&=ir"$G-VQ2,r40
%D=>K-`j1qQ\MP-<ce&O=]?&C]:U7JSU5]^KON@K[-tb4a$*K[aZ6eEQ3!Q-f8V2Z1Jp;m]2f)TqU=m\;<Y>M4@"fdLLa`"rR!^Ne
%$3a\4b%,#dANZamDE!d0iD,fJ.T]X"I5l@<8JE_oq-u3P_2F1u?;1X#.;,1dO'B_9C[a!06Y?-EQ+_ZJDSq#^:@>I8l<O?6b)o6^
%_8A*2.l@9@Wo=R`X/U+ZTp\Ij\1.i@_leP$]D6&nJNiu??^i2s*!*J<8EE;dpt*'k"43tPk7lI(q^VmOkIn[l4@P0+Z6abO1,NY1
%Y@nIi(ife5Mddn]V#MSeN4oJ`H%NSoY;`B[&.!:Wk(%F^YQOD&![cO"l&hf!fQ/ci!N:Ri#DEL&!-)\^<8J*$Vl3pN=G&W++EV^Q
%=gU(^'1Na8&UC$G58#L_24V9EE?9uXHqGU@3Es%1+p8`K6E_^nb!Tq86Ss>,%bj>1@E::dE0Vs`h2P]+8\J3ci'@<%aFp4D:qj#$
%kMXQN6j,.VK+g:jW.`;u#2VDW>jO3u,!EpW"kT_inUOOhb&:O8nI_'&>jq#&QG?freTb+C4>k2\&627c1IrL]7D=dbdng.NWsFX!
%"enpd?pW.o^5R_N.UJa29<-Du^ob?lb(+c[liN"mY+JL1XFq$(QK?n4C0akqWE=;F,"ad_I$,gkEj?``<.cf/[Ojb#"M'E"kdkk%
%22_7_-$^,E(\-&QJ>GWBopcV%d2<86c)^_E_*DqLLU-rrc9aK-3"_j)X\JTJHZP/e3`ol!@g9_(5gi5I/&7!LO\#ch/-tDJlGQB'
%/IP[#9boJ1]BnL.X0sn1=TjT&28Y1`UMWDILk-?LJtJP6Nl61@Ya'?M3PGq9,@?`cK`RX36i9Z3(nDheA>hpl,_D]7jb>1Y1>\pr
%&HF'PK+O\\bi2HX8EF++E$6p'Eoto)Y#Ql^@,!),#le+)4rT-R9rJN>Z4+te#+^S[)\t2qS*9o4';88A5/HnW."Y<=Q=,6.'k-Z1
%ANkAR%f-1>[eD>]?UFYOReZOOG%0m*TGl)d=HpHWX-;m?Lu)e[QlKZFOijp4LmBG]&;>0cS,`[EJXLC#oTl1F3ECPuT1k2;&=<_U
%?=>kDU+k!W3]52p7i.R0p)><jMIk/aA'QtQV6D!WaVcI>`FKK&-:62ojob^q;?rE11/7fML;F:)VZg,!/k^hW-=Ai>\P@BKcE_s=
%imEJ_,"tCDK2GLpP7DnAB(-4b*0*O_b0iD7\-eoX[s:D-`GrdN1iR*%Y63C6OA%DH>_3ntkh8'0>&ZrEV,M(5BTn("X6@O4,spYt
%(g>uqWinp#E&S#sVW/DDh!He/JO?a53b:HS!>Q'X'::1`9h@((YM.*9;*HXtDbuY*K?I>]F*no:m_;i`f?;+#=$l.1Ei#VK@eGUL
%WEH1(\[#`f_"-VqMNNa5/-Oe*(i7#S`BT1"TGd^6;njWG<]e1JJrak>jmdl#JK=V&7>`$kcfCt6NF/#*`C^.5,U_*A=QLLlUbt$O
%DVO6IF&"+JP9/[j;ode.1K\Eq@A7&+OohkcNL8X;3Z8PsG[43P&Jdq."dZ!CO"+`RV^g[5\ahY#>=nO'Z.'M"ni95JPU&M*4l<EH
%dSU3AT]!et;s:ZI65cMFJoKi4*Z6?qk(+/49EPiB.h7gPndmnqN7iaXe`7HIk7^T]:g5i_@Rq:s3C*(DXM"9Oj+Vs&1W$0#]<-F9
%7O"d"#]+$?,1$VE84k'-FD\mn'QsfslX4*U8XanRB#c;Ca)f.8Kp'X*A<@YoFTc5Ed]rpE>ZNmh$i(WE7?k7a+gBQ&o0QqVnn8Z;
%JAG&RDCJh3RA)0DKrP'1NsAqU-/Ju7/(#`o+Q@C-,!>T%$1;2i;3"(:<hHu.?iaMSjWZ*0aqS4uJMIE,'=r/q(cBM@jd]9mNuHtM
%-D4sM$I8t`VIJj@V)h/H[J%-u-A=nt8jp*`R!4On;hd.fVtNs&@WHqsF](_[AU%,Y7&7.:/$:0`6pH-s\D4XC@/;uPDI!:VV0uq5
%lQW:K/]kSld2><IR'tCj2k^G@VF4=+Wl_3$b^6&@QICEUc\(:Ieo/``W#L<bW@Weq*P@ssj@jJ/1M"Jj!%HEWbhQ$a[L-T;Ep^LL
%.JG1["q@Qt92NH4KB3i$>>-[^bQE\A&[pXAO<]XQd0?@coTg%Xlcqu7X3fQL&rDR<NCtH(M*'^-lf2C#$\I2/&PRFaf/O(Zd-<n:
%#5qeJ*CcYJUb<Pj!r#)".XXBOIpfCP,U?1t+sCX*d\/J.lH"4p`!:$*Ee1onEU#_;pDaMD=V4h!H]X/LHr4$cE.`/#ONad8E_PdL
%_'8N=.T24DO6g:.+7#M_32l5#(QS(MY(6gK]5oY@#K:8)4G#KmMBU_s9ge1q>G\nS:rkoT.=7"'mj5=?"%8U_ab#TpDd#e6[9LGn
%V0eR8e.s@FdD6;`2%XdAFb9roSfa-1ME'km\KQ0:,cI.sW)+dV'VeA>Ah$#*-*o>uX"ACM`M+%Y]4+(+e3$)/>lj*=:;fDhq0f[2
%9Qk=B-MQmti%Q/u3Dn54=IB530/$K6'1R\E0Y%6b@7+(KP`pWTd'Y*,_?M&h#S<AbMbN+7r5*t%(+8ZDZ>[./6GjYi\0O$ML;$Uf
%CHMYR//k[lWb0-#'h5C.A*>4EQ@S)FAX3tR:]o;9B^J'&7InuHP7Vbeoc\$2D)NhfR^:;Qk&+uHkeNi*;6ff@q0e.h909ViaaO%0
%Xh-<()A;VDJa&jKT`Q]Lp42B1%#(o&]KJd9_R0a*bf]n#eJ!q$!_\Nm$/q2C"8]H)p1lF<hOQKdBQ]OFqS9NSUXIQn1BYl?+].Cm
%YZga=_^HCN1d._9GUH#`lau_5E^2abc81PkfWG&*!R=nE#u5*?WmJ85M%><_'#TX>e0@B(Ls]PuQ>$D#Gr9+X&9->b8D$VlE[3<B
%V`$UE0=n"I-G1A+d;e4B]"fMl8(.RoF-QWb6)tklR,O^\lL(D'U)"]#P&b.L$ZHE:80GlA2*8Sr`HJT7S23*"1kSqSLh9[AC61!^
%6=;KqG9%=<7%RXG(Dt*WQpe7@UVa6i>kI?]$jKAMolC2$V?W,*Bm>oOLJ2t#_<'?m$!\bcn>"Ej@A[ebrg[C>V3M3077EhJ2>2d;
%aiodN=!;dW<gKRDfX*n%jdP3%m+)o`_oNa(NcBB%jQ!WUGQLW?Km!39URD=0LF7P+W%;78.(r<1VIuRk[ZM_U">e+_;0@I6MU;[%
%m6\-6+inu?G1o,0h__,?E?`nOH?JOe2i8Ag_<33^P$JA?l^ERoHA\qXTMJa),XF.5%7I.&W;8Cr88R^uA<G^UMaN.(QANBbJqR(R
%'GX#pi+@iJV+uARLrnBPQqktINiEGJYLGsE+H3e:)WB0Q>es^bOqYe,J:f&-fg-m_]GNYQV%JH,'q5=^A*`n"3@,uhmG]#4/JMC<
%%)6b6QET#`k7GA%U>MVY_60bTl:mt@7fS:"BgL9R#c"W]!"/sGi(J`/0b.e;oe%3\9=2f,eF@X;i_,@G>r-\bV[cn$=t<$HoP4kU
%cil]1X&*F.k+c=kbgV(e)E>sm/a3L80oa7efE7+[n1>(*=</@e%!7Z%gJ,]<R/hb-763,H'\pF0_P]GpaGA:eZ9?nsWAV?#M<RHJ
%DY0/Z-RY^6KLWjm$F\)VLa*X#2Q/_UEB+WAR6`F9kboCe.M`,\T!ZM:B@s)[UOqS]TJ(lEJMV/4cq`m=5K"ZfWjmAe0[2rUheHpS
%,.B&g-UJ/*XLaQ3]N9BL1m>X+Uc#Su)P\<ea,#hgIl$[;.<P$tZ+gf),g?NI!)XaHD+VT>%aj'#%C5K+5t+DBKc1kAj.;0F':c%X
%F@:bq)c_ENI^BhTaRuQ,b(Nsjar\62n.<3VYbCd06(3oF0PR4`eu38REW]]*L!uaDI4!s?i0V<\$=e0C_:`L\">Q_*5$ht\,@@fn
%h)%*'`PT)9LecGWLikDV+a=GVZDAfnr/-:Or&f!pNhdfh(I-!61-[WL(\gXR`!,33<iXui0QVXJ2,2TsKtOH(JgmcT@f1(<((D5`
%=G4Adl6h![1H0h:A*<j=d"rJ#G(rYq+Eh1+od"_SM4\Li=@R6EW?/EnG7(,ZN`9G"e[$%6q$++Idk;%+*JSP8'[A&`L@jEFp^b/R
%"Bg9.6kQCWK)7sF(4a6"b5=&\M!)t8A;qU_3.P2KO7L/?n?r%q0\cr>cZ1WY31o3]&pRYUs2oH6HT,Wq===_bat4@rTc=O9&E3%C
%Jrp>A>QqS@Ocm'9K518n3U'@/B%=^sV5fmG1I=Fmkm#1Zat""FGkACqKOmu*jN[2M!k2Ah$,IitQuQ+0Pf+`jc6HD=i#XV^()5RL
%*X?j`JJED]Q,e7JM>:l,R^gQAd4AN?ILAHpdp!%l$SREqU666HTGf%/.ue>k`WC5olI,/ZMXD>_/"0ZqC:u5["LCXaQ;$+s.gF=3
%_I.D#)$ZpfTJG=U\Dh8/cSe=kR%]H'=)e6F+\G1gSeFZ8U;#;m6U^;<<NDtO=4e.i:f4>+1BEZiOCh_,A-_cAg`+Z=<):,"7.Y+[
%&6kti,:AE'K,6?[B6s+mP.\`pQD*mYs/D)8muVSjUgZ*.eVGs](\@Ka@"Iu%%`$.e+BcgtZ@W;<ogm_2a_h[NXj12ZV?-QoOVa;H
%-BS2S+>::&N,[E-=g_d"Y,\!',82N-W2p*RT]4rZ^kf(o!P%teK%WIh0S?*F#aPB7_@h]QJ_!Q^Xpg.C>6/"*KYgSe.2m^b1a7-t
%m?Z0B<-$-]24<AfS4^UK'uI$1<Q?[@M!QIO678[JQ5%1*%a%QDB$-D.//\*rnQk;E7oV)84td[l6M1-G!oqSeAhfAi'X<h;O](\m
%$KV"+gSJ\<&X5RK>Y+658etgGW9MuR<.s`e+tl3%A#l_dFr.r-lIWMOBeffAL!(B/TV+PA(t%Fk:LSPa]dX5N8)]6$blkE#l,O[]
%fa&67a!l.;"]cK-#p\e@5+50GXj@5Zll^FI9+\g*X[QX7*%LD/K9e)1,Tr>=7[jH01A'WmYrC<uW&=tk!KFIRaqcdj?"mSA)[+"L
%_NFhspC+FAFH?Ya;8B=4D4$q4k/#OQh`hUe=C<oC%*^llmaCDq&m`^M&3qBfSeJX=p]uN-?`)&0X;9OJ!XL>1DaiMQ;9T/C/QsgH
%,A&8PR83Ace,VF09=eu36<7ZB=tiqa*qoq@:]l(d<.JK]26*l)n.*To/?'b6L[f@Mon&3m_/WFD>/</W@Ann]@"CZ3+_D\Bgd3DZ
%$*buq/?g(o+k8<@V*\UKVFAUI#`8ntU4.Vd/ne)s^5Zf)UW!j8T*AL_h'>hs.o8U3?dL3FnrSO12)A2d@,;2+7Y>S(rC#<SDP;GK
%]psn<.Z=c,OSS^?$<q5R$$_2inY?=IC**3dnTk759,.[.ZCVaI9K%QUDd@&t>^[@*$AYW9N`B%'3`[5`TJN]p^^(k$M%W2->QFKS
%MB`*@9L=8cPDu@7O?;n+!I"\,lR!i+4e#W4)ce`5-NqX<j?jX)A-$(W:F"4T5]B[=dQg3A`-t4>Sepj.Y-9`Z%e0mY=b.b$@>s@O
%9QYVe;Llj0R&=PNCk88a!!D./jpkZ@+S::f^@>+OnV/bJPa@O&]FN'CC=]FZ3)WmK3/c01XAk7d>4<RcD=C-u/JX-5Q^ebN;WqW6
%[_"mFq?;cmG=[i&&YtZJ2"VS<30Zs4=\"8j)F=%5Y<FRj4bJ3'4j0M=;je+kODA-@PkEAa.*Y#m&r#"kp=Fk@K\XUu`$'.V:JVoX
%*K?X0?"shj`'SnjQ4'^Xi+#)0S+=asSh@)Y)msP\;I(#[@.aoaQ([uYmL\$;^_#q8EZu-2a-SYsU3bB8_RF#16]YW>g+/]?.*\+a
%Vt\/X6BI:&qEV\0gb$27fjl'.7T;IC=V':E#hX!/MMrS"QtRd-LrUlZB[nAp7@McWO\K`M.)O,K!m(E0#gO[)pbd]#%P'p7YW0LY
%Rk?qied`O:iT!CEEIuE8k>>/igg(BGg)&Os\R.SK:=u9Y4Z"mlk8hRnK<5_JR\<8!jg'j@V1XSt7EbsF+L-!b$R!8Y/Op5kN-(!@
%mR@:p6kDE+@t.H1C/_#k1Y-e(C8"k%\B.Zn&/;0je\RPb3CDl/LYR[?$,K?i+-NI2r3L^?#KB$RJG17"[R6OeO<i3gIi*P"5S7$`
%gRm8P_3/[Ulu,uLDAlY3XXmc_a<[JcENV]RAlWi':m8bsEsUHSP[Pe!hOtn'/U3Z!]aRo8MdAZANX4fA0rh32#;qs6JM@[ELKk/]
%>RX#tG>pAI7-[Uf@FbumS`i/^2uoj1ZAZIlXjFk&j>]ufeY30PU6m)IQUdt(bsK`86ejX'>'<s8inHUDUs'0?o#git$FXJO6D,FC
%\7p6iXIrbQ/a?@d(ieJ"pJ9iRc%On7nlnSg2b=r":#+1j&6R4?Y?eP$d@R6DCiHGm'SOPd6Ge_Y%%<&F.':f,Odt4)2,pr8@><dD
%&.H=n>sP3LJsuOij>GU0CAj6H&bOIYb@m,WOYDY5-\tV?r+mt@>/d-?;M!Kk4?Z8a#Qjahg.HTjd9DZDYh0.HX4#tZUN^`8>7b1u
%VQb+f?Sp,Q5OIConq5F0QU&2H$h%^!mLn4jndLjac$_@,5t?G?rGk5dVr\,a349kbcHqBeMrce+W##I@)'9j7KRkg*7)So8#1b9*
%\fSEG9ZI:'d7XnM?t_0P33$6dVDSb9?rUdVS?A;h>q$:@9*'`"2M[;*eHb]bWYc:nfgkmJRu6-cmq[./"q-@i=JTA`emVl)LTI)m
%[KI>4&fNNhX(?^qGjQ>)L:PlEfj+TY]T6VY'[^AlEaIV7V/96C/r[9ASN+1Rh(>abUI@IUT,#7ndjb`$"?NOj,?5p))UEI7hEb#C
%VubZeE"I\?M+N`WH!s.0_B9s3.aH>U%5Bt3<B01^9&#Y!9sXa=R&$Z=b\&baAAfaKN3LM4<(9QV*G'oPj[U]cplPl]cNYVS:mu(1
%auikE/PXj'ZN0ACceSjffqDDmI%[J/Fg>)V4R=!ul\/IGPmNa2_8'8Y*_t`]kMX]#3G2=98AM.-^2k5Qo*ui9IVSuLOC+O+gAF%,
%Jnn?P'GCn^Z%r\jh#\prdM.O'LVhH>HM$up$)l/S,E>U:"A<h_.X6l.VF&N]d:KO6F:$as"B@N?C2^h1X*/u%+doLDWQpGXJImk]
%a`iN_Mk*<u1Ls6GPL[pO$hKp@"(Z0Z)!@N2!F`O+gCu5#Ch"'63Z,Io2)jVGR*ec^H)cGdVN=><'%&tAY(i`ID&-_mTTkm9@CY!Z
%Ju;-rJbC*Lm2T:Y`bh/R9,hA9=7#KU\Xa!0\S?6i7fGH[km/mm2_]gibDVDoL+%TZ%,XLiQ,8c%f\)/9CEb$FVC'_Z:I-_Naho)7
%aA=Qc#=cJgE"Uj[eE[2Z3M&L2>4;S[KI`Z&.P:tIqm7.A"T't3Zud\t)0cnS*ap$A#-1;d_c'`@%:>t)dGEF;)@3bc\g&[GC.4"r
%`?lcXAB_L7MLs!da-P5a2,j71euleT1hagt6GbdgOq;@a(qg0-Bn67DenWd++G(!%3RK%+l5gq._;mGB&F]+./^?/([WP2]d-l8.
%msR470SSI^CX\);SJ'19>7+E[Ob,mRKIS2r_a#mW&e]S![i[H0Qsdt1GO-=Z[iCL7\k@:VKVln3;A_40;9FcNF@"gf?UqB\D[,'%
%!!gHL$sKVQq1:_X?KZ-?8AX:u!4.Kj.BG>>%D=>sk\Yuj/O941,'L"V1]7e]ZLYkk5TrV\FSaWBUt%#KiHcq]!K<K&9RB(Q.jR$p
%AXgIjlT$l:XV5ZWr.IedG-CTEpH]S2j7bg'R'&03f;eFG.1,G8K%C\oG%r?26I<Xt3U-rIG1A@')(&!.fEC$N#H^3I"f(jPdpbJE
%iBq\>=ZuJ.;aHFIRH:*B.4W\Qm5,GiQ'Dj9_BQ>K+C^I5o,@[)#p+c<71RDI-_da^HW"8RNbmaA397/\WGmp&2"2L-0;'pPeP+m^
%j+@AU('uW)_m->OLK4hr`1>aICo>.dkk/[U(rP0b_Ode(V.Rg?"UV2E%>H/I*X/g,P2*f,9;M9:49b1)JB*4b<e#&&#b=)hV-$k_
%HF9_aqF$gE.I7D@Wbc!!3+EO=6\fuk!GFQq8,dGDjp[kme.l-k)A^UBA?ekFOL<G`5V)L.Go.,%0YC1IWt'to_:[AAPs\>d)<hr;
%lOP/Re;C(V\OqeWFXTbc>W$o%C:k^fP;Mr/^Y=pn`Ht+(lc:UYaEmA[O=[.dLZ;B&1`=K+!LXh!?e8*mJ]X!WfTTWQFIb[UEh3>V
%-GXWJS^lVDj.NX)O$kMpQ)`Ek.2_$4aT"&51f\`"345X2:-5Msed97ULr]pMJQ3)$(Vl6c&1r,+k<;]f>1.E'Z[-0\-L*IaU34$)
%TMeh0KR^V#"pLqAo5&*<Ok+c(C"RG3H#6TP/5m="dD,k.r-WifqHo,g#f*?n&3JKDqb9?h=fp6B"Ug$%!F.4#N*p8s('G]B;NZh]
%FJ^0SQ"DY8(uCuepAdt6.4[>Q11+p1/.h-#`WA&/]thTZi,%T\m_TD1@p8RL1VK%t(:OPcKuG^d<9Cg$B7!X75dp,hKa_bI=r"h,
%<5TT.0Ei]9/J"BU0ZjPAHC"WT)Ol82$@'Y7lU[O7G@7Rm*H[lM6Q6@_>,f.:2gWli_1I=P/S&N"Jt;@B>m6Cc'U\didK7u^p)\,D
%VA-bgo@<rn+u;Uk@QRu&=E32prESi[A>DNcGXFD==W(p%+]0hM9WB/@$mIS9W]abHf>W0m]>_5S5%rLuXojghN'8D>X"fua";eSU
%S'l"=(;X/_=LQ>[\Xsr$OA)segh4@H1gu\lD4kG79HCKP*?:GDCPs"ik9d=4fae7E7A-o&5u`34BIjFOE!E(+)).&ukL!A7>%L:$
%clGsjN4jI8j&T-V_!Wuj=KcApkRH>qTqKdkK\7_W$J#8($:aM3?lJhrh7LATX9X9;1HR20eljL?ia&AGBS8]EYp,=3rsQ**=tnKc
%eZugE)c1-Yca99!inF3Od`!Gc%66>3@IpU&-:^`:S.;V)(JP$FAcNenLesd;:,%U.,(>6N":Bc4#S:u@,p&M^\$_U(1Y%<0C=BX@
%!%?)a#YMp7X=,)s,eG#,74":La/iNcAJ$LGD-3lI&7BM!@:A&ZpXf,P22bj=be`kTo8VFPGmXb7+od:A8/hSGcs"OKN!8QUlIFZ?
%LUns/jl>)]8P)A#M4>2BmZ^ouHc$0pTE);F7?%P(XnPl,@V5;"jT3qCNj[J]B&"21oL%lJVlZJ%J48JAL*V^b",rp'7`aMG_Ijie
%iQ"[4P_NTt[uCN%pdMV*/>T.M7<TB\RVE:?ETd%5Z>MnnSf0Jc"eH;0\uT3\[5<"2UU=,pG'CS7KkJ"L2sBR&*P"SF1tL>LWXSNC
%^@%7%5s.Q.1-QB=8EMAIYi%sJCpY8l()sBlOFh1fC2pW\n5'AK.Y)6p%N[eAG$n'9"V.tp6%_r6MoNXH1l@X5k3u/)R^\Dn>+Ipa
%!R@!_6gD9OZ9XaCM.(Dep27/>Lk&DI63-gL?:<[.phsWEO;*DWTi_up(.'#:-P%X-,%E/8lRCN(43ds`<ki$j-ZBR8n$5c&[0C#p
%9i[;LQ;e#6%2"m579:afg9YIKo$*gDj<&aSq1#D:<6YfFXGc.-)W_%D1Wr@&`o#3P`IL@03^A4MrEW--W!<bB8PC8(XHPb)3r<R_
%P"ZOR$*r>*16hs#DZc/c7<5&j.h38h>of"=!ti.VC(6S8'er'O_#nCoPY96&+gSSG)k1!Y&B!Y1)Y2,1qR7B-]iq&G&1LbeZ5]jC
%0RSG>:+UAt$8(6c3U\g>Y\47S>/\+>rF4QJ.nc?@'7g\q[6b9?V7NGeMHrl94C5sIJY,i7n,Y:>VQtdb)4<EZPulHcj3PkY=Z7.6
%,$++'[T]K.EQ`SZX#BF=rR>nscY+*M%lt.+hODo9<Y98$i[;Mj`6]W;e1)eCdt2Z\/K.u8<Ak^$93GQ!kXRoqJQs>)JftfQ>f?.,
%%=U,s8'T_^q%BMe(o`/YQD3"&=YtcZj9ZB%A5\"817Us%YYGGC`\?/,'hq+C6Y^4>;_#Y.*R\pjj%B"trBTZL`[WS's$-]VROdJ%
%FMb&8'm<HQH8I<[?!tF%_;kZbobhDc>sos7j"<Z(2E)"q7(kN$CGT*>Yol!C@B3FLj)-)i<jjo$OqGWrU!b%#Hu,po!W>MW-gWb)
%(Ei12i47UD*s3'q2$d[&!T'qA3<X=19_;_02%A6Vr"1K5_pd<rN.B"7/"r18gB$2CH?Whd(lbjm.XG!,JS1P2[G(&mmdrYe0gdu%
%qe+"W=[g[g*/INREW=YnV!4+0GaXbVRir'iemKS.BHdPH)3G7.]Trs-g[E!O)DkNM4rOp@V.ZgYHVo8dUeIeDW:^/e^cTJR#T@&H
%P*^/*"7d$,$9r*<gjMT-6&n<@!%g0^jGKP)SltTVGb'&2rW?AbB)!U*S<JVs9t3dC)hF5'^'iN8n1.TBJsR]oje0O'<>h1(1+YoG
%!#4KACGd"q[Hq(.Gm<aXAcORs!Sg7c$kO/V.`sK=6RH+KX<niBFHlUl1l;]874D4MPd(=I,_2k#RL]e3<*<'2fe&0Sa=Iq=THY)Y
%"4'C.$4TC@:jl4*"q!GD(eZP2'@sTmhak/&@Gp?OY0BlN<%B&S\Ht]Q.G:t`//kB8+HZh1%2l<0q@?6A)Q\t0Q`A0RZQ^bc9e#9)
%/oi=A;]4V2BJa0eF4+Mr3VRJ`,SdP4%8_nJT-m&b(8ZmN8pCXJ&uJ\BJECZE7s^FW-6nnS@gr@5EPr+*jBt,%(e,,inW7<aZsd/F
%Yt!2P,qS<h/`'R2&;ql%!*'EBQi1]gbHe6Vr6"TBY2aXY4^pl\)*>37lOOENGZ>*bQWoV^0qDZnA8!sPJ7+-TRpn\sEJr7!@pS&i
%+LRo)W\n7T#m<_V"Nd*dCC?'N#H@\&`2`c8U'f@IW`9&(,83sb'h&^Rb8*p2e`:79/7$=2GDq4aoV,blS?QYj58G@eKoT2e[31cc
%#?*%QPY%T0W0J.X0.;7:\PeYGK'`O\H;jpnU=Ft^o4m67[A-0n1a-4.^',1IB,"m-*t-Te2?[$X3@T@&gaG^bQ4(kjMe;To[f5>s
%+khfaVm>W]oba&07,8\(M,+Q8a(Gr2JSGU:/Pt`+(mTbaZgr?<h[#W[+M*U+W0%c5dIE4WMWW"&l9\[_$fm1WEe-\SfK`Du's0q3
%-D\ia]b6,">N?9uKRpSWb$lQ06=spC`rm`C$4669>!j'd>"hI9^gb"*J$a<rHB0jLrYX%Ai`%1/"24`G.=u(sRg7NM@=4]e;:qA,
%\q^B>'Se>TWE_3[U6*CS]p0m['YETsJpW$3M^Wg=G6W[CE/Mm1+@oXJ*;$<kP[A.(-`0=F/]S6V8RATFJP)nX5TRpX1$8P$JsUM^
%S?)aV6FW5F(Zd`_E?aV;e`1,gn9c<G_uN22gV@?fW%pX3aCO-3Ei%h`TS[[[KE.jTkqnhGP+:)[_CABhE[8!P!t;GKVH0I_1Ma@J
%bU,#-Go`TgZ;lb?+=+Y!/M_!C0roLPOUQ<Q:^#3/p)^WG:gaeM5I'Pa5V`^+&ri]7J2VnR/Lm:]5pS>9'[8=O;Q?b=0\#dk=^('Z
%8r+0T5mNcn8J=JPL1Z>H1)aenKl@4B;\-1SDD,)pMa#S^^p;)W.V2VoS(2FN1.iDbT@J8)R_$T@5o)\iUdRjZ_D4N0EI,3t9*nE%
%,d#U?'Hku%!%TJKnJpW&l!8i@#$Mt6,9sFS;T"_al8#`bJ:!2LA`@Z*WK'B#WDW^2\td+;.BfdoXm[Gk@W5T]fBPJ[d<H=hI5QA<
%<WgQ@%`S2$9HHZCS]'jp<$oGG9CI[C;.(1%A^&(C+sXIiBpL2R)R3K:-9%)G4IQmU*Aftb*3Eof/eH>YR*jb[j".E":+c#^2*_EU
%N4$h'"m.d!USF-h>-1%"hBti2H'$/jn0#u8<4,hMN&YD-.L=%/bXY#<F#ZPF-d.s[$=<u3#XB\V&]&7,Tae\_b^Gkp=V8!N=`GRQ
%LB6?T)1;_>+s^QHV3rjD1(W9p,"WGY7E_:E:a7HWU:8FTKuPC56AU:?2-$M%P`W<-L0tl)"e!mlUZaP8ZtShQ;D?bHU2`G#8P&b1
%a;nR2&I"_.KU5i-8E(Icj\](CS?`XI/Q<a(72^Bp$FZ]f2\^sF,nH9j\P]sG%?3<Y6ShY_Mj7PF>7l!nXN4k3J&>`_,cO3GU5kD!
%AN2AnM5MNK"&CX_!sS6u<dR2@9nnL!RonTJT[-L^.EHabCR4(UWH:Jp'r;Z:X4FSOYW"jE`JT@hI")sT->Hp!dH^t/dhNC):RYIh
%il$Scg1?nLGuL4A)I-6G1DOYP\PR!FfW:oT[I$FhC=ZBQ;GgB-(97K4f&f4_eE@927DLiIY%]An?aoT6ME&_LA&&KU/CrHd3p@2C
%,23h%fL/rP>hQ?*ZdR'l)E7?K@%M'$8^s=Xb-F.4VTC&X2^OCDB&<KZe\\9O=cErXf>XPJ\le;<9`+"L8CaMU#93>j]uptY_OsNg
%m/j4U;\j\g,NVVbK.tuY`>u@WAl1mlmJ!W;]*bt,o+$JI79c+/K$(L&_o2un5=X([Dus$e#F$DbO<Jcr]Ya<$!!CJN!\oD%b:@#`
%%;!0dH==nE+sLEZ?6STk`aHK#?D_`YN"!%k,=Za67t`E.=DJc)^n`Z7kiOb`[gjORcFe=6[?@%o(F7r>0tBYaigO"+C+h`'FhjEh
%9(,Kn#Oor(Lc1"'QCpOA^5CXM7"0CR&.lajb`l?[gV2iu3^jsnW?L^SFG(>7And]p&5<1F%jcMKKL"358iG(CTg%2Qn1a%:FbQ@g
%aPuI6@kH[%9FtSTC=X!B`B^e<DOUfN1kGlJ>;LtO;Hu^5):gX3^"^L-d$kt/RVq)9N*J5>Vk3/=iK[WPhO!:g#R(p%m]ah@Rkk1!
%a+:fB0ri4os$I/-.$Tfo\0hD&/0p1/2[-2MO"/pP#K"g)g4UVRjU,ZS9Y'3Pm,4-)MiK+Z==VC5j%tf;RAGOA$oe\8hEY[k;B\K&
%#nJBS2_(aS84,[4&Don_A=hcT+:@AE?7UXWeGs;?2fcd1SNclZ2QIFc.)p;=\d4N<NLk'geZc:S[?d&N[T^ljd=r3g3*G"d5]F\j
%!6FD'TVOk&1P""Y=d.8ID63%3JMdA*(8d%qWKKQ*UPa8o).a+3/.Ba6i3!BL@i<L_Dg))p(X[@a)gP*-3[?LtJVh7*DkI<.UoXpS
%BL;ur4fW8FfK^cV1/:JFZp)>`PX#MJAQOeC$l\aDOJ2kC$p3ONk_GL!3lj"<At$G4#=4nHK+aX7#SNH+muler3f<Wl#><QAXOn4F
%&;AWPMS]MHVWP8-()/$HdTXhE+TPK%6>:E#+(/d$A2(4D<\Ccag1n;E(o.C7@=X5LV.Q.M:u\9^Jq+P77b&EY[2K8"[Q'D43[\_a
%4V@@[f5Aq8Oj&hn9sHK/kQqQ>WSaV>[C-Di'5?8BHFt'J/$_S2KI#oX*D3-$XCfme)IF)O%kCrO3F8Yq/\<JlMVondD)&\LVuKe4
%Y+:n%)'UpLKTVtYg("2@IF*^6ie&j(Jh;`#)*'_.VZFne]L4=3Ud`*si>TRmok/5PX;ZYiYel-FD%Ih`U-NN2&r,j!SJ"@Bi0k+?
%Wi7(ekchU_9!umbJZ/Wp$nU<BZYDhb1W%84oWfW?NFjtaV5s,K$X>nu"ifnJO->:nR`o#%#RSsBEi:6Q+Hdlt_tk"b7?j;o1k"QD
%V'9+e*ki#c<OSrcA.`&Vr<2-C'#i"(O_TjIN$dj9b@K58G[LabKljgI(b).hF_5hLhIdOV$-"\eZs!lOpJ`QK0i!SR*?;IYAS-'X
%@^Hu`S-6N[Am*nbporCOM</=V<#Fi;RB9Y<MX3(\c(*TH5+--['rG'"?F2+"A%*#NUHr3c*+I<=RG7"Qd#96!(N*BSkFNGLS0X"K
%YJBt#1$[a%aUZRo;49c5"rf&iX'jG56"OcS'#FDLAE@B.+;_l`0m_m-31MB-3u*_*YQ;^28IRci?O>,3B]q;9Ri/b0^SB;sBjqp*
%+Y4?)6rcGi^0/mL6#30^\JfU.8GY[$;CdSUS"_oT9&rB:TRa="qC'kOqn#j.0dps(l]IT<a>MKOs&llg0=0hr@AnsA6N@(0rr9*k
%J+He9'RS$Eb2-_rrV/47d8CC.SIiu#^qb\aBZfMt>(BV5-([MLR<JlBOgSO6#*PMMe;gJo)AkZ[VG88.Z99pRPmZ4@h-5l!Lgh:(
%?Hi!>9Z=;^o9'r]1(E:FXjs.DgA)HeH?PN==&t2js.]db6=K$fmIpt*#4s^i[icn[CL;!*2BWHliCt5U4?e'q'7)3qAH8WAReR%U
%=(n4:\(2*AW7tNh$)G,9h_\W:N\qT)#*]"fSlkC"gkMm6n1pIE=ptPo;CQS9@/7reEDo;H<ee<]m];hAg#sH"8bptq1Z$tAfEP?n
%"!`WSM_6MDY^)GmRBdp9dq"BRl>&]%<Kg%!1f@G&Za3XhCpQfi@JNi>1TEp\HjI`-l%j$H6=W#=A0S1aU>TY35Ji4i#M6u[YTWq?
%ZE?6$[F#mbn*d>aa%J1+cp"ZT?7ggDSk6(9D,$)8Y55'_]4f$>CsrO7S'g$T*CU,9nO@>u61D[5Sjh*k:gdG$qp9\F,tdDXB/MJ^
%n-[Y?he"SHN64tk!$lTbQ4V0lk8dj7[.kiW&>J7I[[n#S1(%T-+<3#6KP=p_:ccMqW:hu2FhE_o0A=b*qh`U?MM[d]1U-4;c4!NN
%m8k5-<Ga.]o?>`[N-7`O8el'nmuE.o<BGT$^]<1^B]"<>OD7+QC"AATXX!ZD5WU]YSul]M+GM0s/$ljo[6>/oj=U%V<L3JjeJHeN
%K1)\n9"%Eh2[DHSND\Fb&*hlF:^p0eqh`ciL:f$_]!MT87&1I"5ar_!*"Zu4gQlpoCG@O1]PN-<RuI^J!^1O;-oN.sJp80u^=-!&
%M"4&V4lf24M$*+Y?G1rF&MJms-?$q@Vu^d%3Di`N#m*"!7"8%\dH4q=>7G'$Q6Zek1jisY%'h%0R=An3`&sWZG)o=#Bc7:&`U4sM
%,oF(`1KCWPUMRRJRiBAh/fGI7O\'##0VOl0M.)-TE=eDn\YQ'pJ\Ao,'r.O)A?jdXA[#aJW<Q&opBV(;J6UItqd>9,?kmf4#%PC.
%`bJJCAD9DQ.BK#XU-l;kmV8Pb84p^c11N;Qe7%LGIKO<<0T&4r8^>m\!ec8l6(?$/@4W#$$B4Yo,[6O+UVnQ\7hj2fMDI:id#U)k
%eYX,LDIh=AAj$JgbPlj#_ut/,BnK06X+TE9"NubkaBXdjD<>d]>1/fF"Z?KN?Yc5CCnj!g@?`uJ/ZTVR,a`_@+O*V%AK2-k3%+rA
%I`tVFlNic>m85:rGT@(Flp-Gc0=[gc=+EV.R&Q86>jqsKBIdhieoKS=9Z*<o"`^YsS_:4\.ol9>a1t,g%bUkKaZnMkY<nA2Qh=G#
%WEPl-S*hFE!Q"o^opn=_(6HUaC""J&m+<g`bM,B2GIkJtH`Rg2k.>Hb2e.mSMHT"b7ACGo"CMm%Fs:@^)'<E@&n(?_k]:hs!&q6L
%fsJKa.$q<IH51?u<-XUG(Wa?pk^Zt-Or!@qgk?*:*=@pc<JU7%WJ(lE8MidCQ][jiF1!dC6*E(3$Lk!K4(s[Icu+5"9B?c*:j0P_
%C8^\)LBG,Vl^/+A(ek4p(G`,"`;h2?B*Kcqhm.\;X[8C)R<r'acrt`tE9HWF&2pJ1_/=LMb4(%OVJqsf``F!=@6c).Ee0crM3dZh
%QkrescE\oOH'IKQr#WWjO'jY<]FC-M?)ZU^$74HD1<MHl*MU:XG<'n"qo;=Xb4Vu\Tb>mn5U2btd0dm48/@3f9FZ"L9>5OQQ>f9*
%@(,)^,T7mt'ZOm+J>p;H7!/>f/At"7M@>/:7gV6Fqj#Y=<EZf`)iTKnmGhCE>tHOUXf.%S9e8Tl]V8'.XOe'(A+L_'(EW6`80\Q=
%db)*@<8CsCpp`#cO'5DC"]B/N7Tbiu"Z-"^rZAKV6TL#9b#NDL'KuQ`$Jo/6%Y]dQ1GiPah/,lUUkMZcS"'Tua0qjg#>i8D#V/$m
%)2u7L7dFXL[#C:4R5UOt\!t?e5+4jHq?(Wspc9gFlo1;@rh.ts??D&)+;5GmN$.adAJdV*ig-og07\>[]lVo4Qca-WV1(##,\X,e
%KjQ*?Q:smdr&YRXV_!0b/Ol1F"`:[nB*#`k.Mt)]dD<M?<fVMLd@LfS<=FZ6%cBH&9Fu#m3D+MG`PG1)ZO3T:g<f7LEB'C)Q9%AC
%U]YAuX;ptG-D:If\Z_m\Cq^eAaf*SJUILUudqmq];0IQDp2"jmi5J@]"P0U+DHhG$g8;5l$ZM@^[9.e*1CI>KF.-F<61.I<jpVD5
%,Ke\e=3CfAQ3g">jt/??R@6T0=\gb5B&0\FgPigHS[Ds#\]9+)(nMg!kJ`r:9MY-ih3igi1HJsWgtSj6CL78L1\M3-HSlLi_3Rj8
%?>FG$d'bESCmQu(&0^:M'1:jtRa!"1.<C,N?AHlPp?7@&Z/ZV#Qbd"3D;/Sn>3?ZUI3sk.T8"e?)]AaN[].8]?s5-s`<gJ-X%Y<d
%]d\t2/Sn"R?ptbtd,PdKWA0lUmn)h5bt`=@Gu?<tC8F>!MQsR0>Y@qeL"LDkU9g3jjHr>(%&^)hN$&HGIme,Cc4oNi")?N^96I8r
%0dhZ?hO(H7[/KKoW?<B$Q.U9qD67WkJ@O!;WF6NH;6dJIJRI_Qn5eb!)tfZ@<`O#5jPQoseqkNm/L,d1TT$H25`El;7;]&O-h\/S
%',i@es$sB7]Yu5EW_/o2Y(F7se%lHE<,Td9KiU%[Pl<GGe#"0gg8hk!bccVq=LCGn[\4/qP%#2m>(d"K^G_=RBJ"6bZ(PZ1[nr%,
%O-X+*:#k5;-Ca\=@;'a^@`;k[dNsQ'6F]>@TNXE[:_-U6">do&%jc!=OkB?KlZas(!/NP46EOX!>ljNMq#Y/7.k1h<KmigYTWPn_
%&S-k['?HhW?q\D%95WJdheuHA%'4=ZB-Ul?ji65FO(8"H2@_2V4/@V6\cYUUamN&N6j5-d3Gq/11[q8uW`cF2)[r:]:LL6d*o%hL
%bs34,qqSG4m>h#Qb^)-u@rh02#8Q!k0ZXYlbnn0%MotB;Je9pj-St]4A2$,+SPt;\0<P:,Uu2j<+W+;2jXK!4IV[8=[HK>%J]V0;
%Id9q:2$2K7"Jb*9]4=T"eMhKu`i:?XXV?"c(qusQE4:JaZCAb@qK](B(s5t[PeJ9jBfe-q$`>)EdgWu?X</fB_\?q-\[;]4`%735
%q%/KfbK&:E)rneeST6BJ^cg7VW]AjG((bVC3(sRJ_YS7mfEp2jF))@-H8CBAVtqI;g@("m8_;)`6LKdN,o]@bEt/DX)!9Jri_i]W
%hoQ==/'Ih([01@c#W_i]YV)p`Qe5\=3umgI,*"gCK6&7Wm6k@Mmec%O'DW?n[o.G&/T:R<+rD**b]B8$MQR0fcL5`i$TG0@fssdb
%PcpDjHY)aadD/<=C5d9V;2Z71:%fB-/H5ua:)ttRreW8Fb`cpJNH>cFC@&(37fagaDQ=<a1o54ol^TTC[M79o`T-;9lBBBtQM<fE
%W6VnRZoXe*_/:Os.4aRc22d;+4<VCiOoDF12AU+ZZ]^RVk$W(;<V=XNVO]TMe#a,,'YJ2I[tbi]l%.%^>X/`gl]6o`dpqJZbi1bu
%I)&\J9t;%uX2a&nY:Cmdi-Wl2ofV.jDF7%M94.hQAOXeckH`_u8@QG%NltB,%f<bf)S'6aI,$W7>A`a`T*`@pW;7DgiKsj0cBf<+
%\,b.L$sF]^O^U;qF7jMj^2!R+eu]_3'FA-]_[\.R0\RU4VkKGA*MGkC'Z!'Yf7q5`),:G4oo,h[kCjE!f(*1:N7NP6n068-51BiU
%5A>:K"i@^l$=S?.M!b<#KD?<Rd'f7-eX=Z(S?L()>HuJ+I*ZG4$?0cn5C2m0mDSrnkK[Affm351o7uMSIIuUJMb!Mc^AR<rK4jqN
%]WaKX:g?&J]QX#2_tuMgYM=Btkh"_gPJbO5qA$[6jO]rX#<qt&UPIHm4IA;[e%GPLl1/m74&<=-s0"r=qbmZX;Rj'67br=ajMf#L
%hnAC"?bNuLm)AVOKj!"]`9okTmDJ;<X[`n.r7219rb^uKh[dKumJ\4&o_iFsGG!W^V_:f$g!VB0mQZ!$oC1FGpNI_I1[K-crYq"]
%?u?iiV+l6^*"Y*\U,h[T.9O[dQ9lTJhH;*mmfLu7d/P-"6f?_;6`e')#j_rRqPLhIP6b-(1lM]Ed?Ye<K-nJP6qO`;(n[grnmEJ<
%hNZ7]\qS.'b^mfih)qeUmEu'i^WosP"kO.(J/,dA5Ut2`!THHA.Vba;Xs+IglC1ocIX"U&F4;m0%"SmhSO-6'NWCZ=E,0$5ldt.;
%"7-#X770\tTNNFt"_c-!Bn`kNi^D\^C1.Nl0]L2S-6C4[=ZuCMgl_WaR_]I'/U@!-(G*R`hg-m15([eHm&LV^g(4RMH<"0SUUSUC
%4^dSNK.sm<Hu@IN-Z#(P,-!ZXdPrD7MJ^WlJ2%m'@SG0fi1BXR,h1lf_BO*PaSSMNYK]l]Y-792d?;;u-hAA&_-7<*&X0X=#2'5D
%*TSfFd`_GlR.._W&%>p$#GL%9j"9bVajV2)T07Jpm,n6OO8aHSmbH0'p.%pX^;':'_%OGQ]Q`u3?V_`a+27^Ze2t>*HiDC\kr]d>
%3o$1@.m8=U)(i#0^",f1q:t*f_=ZD,WSgch28%Ak?Z-C%Im#UPF5#eU;i)Zr@__cUWOu-VJsCBS54`-G=O9SamdoXo<$sLYC5]<K
%`r5>5p;=Rq=>UNXp&q/"U'H8lBN9ro"'9)?d[J`&XYUX[![!d?Z4D3%`1su"&P@2^G\Fae^X^/)$fEJoRLHJ4GWLY#)r8&!Xla;.
%7L+*^BNAD`QpT.j>#cYu+b:--*hE\*f.^$ccdVmW"LBWflK9l'%BtD'TFg+i$7jn(9`Cl=(<<AuBZ:=BfrLNUks-2PTRCBp'E`(S
%PXr.?*-g9rh>s#YXS7XOV9CE^"+n923*&G>d(FtiN5]7(i9O$>13J,d""H?HVe)DGCK#"K?afgMV\."<oNeNFKS^qQ;t^Bk"m+'E
%@3\iipVb]fl+p<'a"aib_?\YbV+=*)pFkjjhATd%g)ata`NCnrAR!p$p=S)\[!Dm^B<E08MkWq-R%'q&EsZ:%!7tCB^t5m;6aS$T
%[BPOKZh%^""jhfLh?mcS]59.9b_eeE[[^oF#(!#1XFWR^):2"iDL%Nke85Xq,odX(@q0&ni%:i/0&R_V*@]3uLsWtpC)37U;,t(6
%^tpLqddl*ge(Up>*:J82=)@cRTe%:(lM"il=_D0^'7k!HI"u"&6gl3Q_O82K%l8eN"`>-,d%e0NBaPC%PA,s2XSkfNI@QiSq"R\u
%X:_kF+D@o_9@"FunODCs9e.L^9^8i0=JK@qYeV69.J>GIk!664I7^+sa8uD^*+6"8)9-sL`kQ)E]:%$=Z*c-0U%NPtV(>RtBZ@LE
%/58?=?3N^g[b:-i[HeO]3@"0>%M4`tIWjH!RpF^\dhk73+N)j6]ib5-JYU_#d*D!:$Wl&t1_fXkc^=uT30(Pm*.Udk%Eq>%&SKq0
%]m<ieUm<p1#bnS]`k#`Z^2)OD7!NIX<FQqWdChj0B%>767UJZ-n#dFNM]5kX(R09AjgsY1DH6ppCXYs^V$+lViJ)VN*MEQt(@>U-
%D-_@:5AmgZEjUERS28p&Y_)CQR1.&KCBf72Wo,[J_2SogOWBlOE\_'Y(ct3)O8-'eoeuM8Ao\qq<ds7Y;7.m]KEnsl-W!GC.hE1Q
%n%H:/$"IL1B8`U#Cb,'%f^r?t8Lo?23e4"<BLVW7m&Z;B,G^GKK$9s;4XqYNAm2Wq@.X_U>..4X[3chY3*76dGDSHV!B4)h=,(8e
%Ba(O8RR[\W=%=+>0*0?X-r*Gt*]#jID/Wu-@eV@5Q^B!?ADS@s!i5"4d>g_Dn/t\0mQsgEQE=(#eV?8Id(']i1;^JE'\]d:l$Sd-
%ZZG-XpF1?O>Llh/kk*^Cpe2BAX='.-E!!HF$\8Ia&d3Mt_Z4)g.TQj<Nd1`jl<F%"e,Wuip^Iu+FF^GD'9-?Nm9L;Z"dNY$%KTKn
%7E23@ZY:k"_R'XQjWJ3d9aMnnZ?!lP,?GNj_PCKo=@1Zl5pfF8'=GV@nmWIQ5f&T9R0dmW)AQrJ,pQ9C^k+;c\m[N5T$tU],#UcQ
%Ros72=QRBm5fnaS(9ZLU^$Ps-9<6@op#_@/bsU%)W"inE@Yg!"A0<ni:+k[KlSPG?#c9N,-&_l^1W\[ZiG2Za%)ru#I3#/GP!TO;
%mVn:cP<"QOGa?VD]g4cTCW<?k(DM4T&8P>Yc*XAUg5[u+<a\Wh^1QRV5$4WaSL<0Q1ra570!hQcNg"QWOpIR!Hg$9@Z9j0N]T=rT
%?>J'.e>ta1QOu)(H14+`A;Rn:pQI8]kLf9oS<<KDPrDKV`89fiQP,#JHeRJrc%<E"_a5^1TSAf0,gL<D(i;/CF*b/h$.;r)Gd@CN
%6Wh!(*2*-k2[d$S9bWuQXDI"L(9U]Hn:B]%"VfD!&<j/K7*Pd+q;cE>$PcsY>Kf*>WU9N;8j1LAEjsE+`bTqOl.oes/hq9n[h>FT
%9:4QfFHk!(/Di&?$3e+"rGH0lrQl<C^KV6Yp&6W"XZWI<cgMWK5)((OmM7aL7GepL<q_9jPKUq.(sE)S?S5Bj<N7gf>cEL.cL2N2
%LG5f)mhWhj?^@l2qp2UlmJL]b068Vkbc_dUcBD`[Y85=a:5-=Ue\^m9NUgfr(Qu0r?+sKu4u-hhI^P>QH&Ga5n,;KP$R%?5e$7#2
%[@8B!/u[:Oi<"ZRAK^Vc+XE(D$&>df757>EgR_uQ0F>TW$UXis^9-7-^q,ikUU(q+k]f3MJY<^;-4i6P4:(:75H[c0;M0WYqGIe.
%?,A'+&XY9W,F]sYW2jA2/V*tsP]?73'j5cYfL&2C?F+K`LbJu>$*77=E^L!SX"\/f%^0bFMBgW&bR]?%=:1ZkL1O=F@&s^.;]jLI
%dR]'?F.m1[)^#4%KN,fd@OO--eE">_hjI;m.,jhjXT8Ys#j[W<"r#0_M`o@ph6@S<^a=m6db??-'@(YH#KtY3W(]7t*0o--p:%8H
%>f7h@Jn[kjUgUMN#U@&$cK]Ej5@3#*%2=`F+lWG4"j3=acjK5DbR6p)fU8F:N:A0H=B+QRm%gW?Y-X-k4EHhM0pK*(=i,U3DT(t=
%dq?XM`CmH0`iP,+?(j\PO3pL+9fg[h#Ak`hd3#:obN"8E*?[uO+man-0j0t[,#6g\^Mh*\#Q"=0fP19P5NM<DhfroML?,&%g@C0!
%q9Ql]"N(A8/SIs4ctS$En4NJj[,2W+ITC<5\74rA"AN;"7VsOX'bZra5Fr'0gcpS[BLPS8ldriCZB\Q=.ig#,UtqBGp)/?tF+%7>
%UG-5jp\[WQ%u=MdGVs8\X_+uGH)Fbq=o6t]s'c%[/8]2K2SsYRiT&iXqg<Ku5=IT,T9\$ZBBV;f/Q+$P@'(d.1,9TH\`-H3L#$R2
%iG8p1aG^8DO;,E<r;SApO!q].L>H=aoeVc['\UHZ.=@%(nic[RTaC'.6?kAIfC6F_i2Z=FQl\U5RtC<662Wnu\#E'[qAlb/C[AE,
%R7ZS,N",@YTW2kr1]5utFDR7QnKiX<FfK^mO\sYUQGIet*$qQNHVN7]Za\uP[SJBsc/CaBn8[Z_I6P45``<+^MBB.KcDue3G6pHI
%Ke''0M'iPD#O=R_Zd8D)CQL5^7VVm-$K\lmnED;I[b?/ga:(P2mERoUgS`Fbc0Bsi<fdKAK!=k^NA<@F@=H9<#*-D'Rs.,f_V&-0
%eP!?:iRR"dai@L:SZ:@R@O#i],?UAG`J:QNh;YXPTZodc2T!KpD_8lIoo3=Jm),DH1Dr=Y*:]^!%i7Jd'OnPB)Q%Hi+K;Ab#=)<%
%?3GTA;N!P2i5ftKQLiZ?S;DDcXX9Z5g5(<qEGd"?gZDbA2:e9^m!IsqFP&UXc[g/,_oFcU/]5U4c9F8@MA?##>D`P5D7q5n"`b0]
%d%!IZ]Ja-k!&lJ1j[+eeKe'FbN8?_)i$5*!N(O?[LGL&5b&^DN(j:q^U4!FW]1uSiTsX_'GAmf:#%V*USN9-GB'V\P/;s/K/0M62
%ecqH8+JQ#sq(LZsTQqKQ<h)(dQ)cAR=S7<J4KY=!-n$*E&WL`eW-LKkPg8"*:9OG(iD+g/48\B:M$1"(^kCF?o21_FaOrFq/Xd4-
%i<5V0LHoHU,US.Ab9RWdDtj(-F9X^!R09NiJrB-^Y"YKGSop.*OoGW-":sk`1P8]^B1+U?YaXR0RPEG_!k$R0(8Sd;LD6/_mmUt.
%Zc8u\mat,bGVPkn14du5J$G0+1LRY%A<[ELG#QgCjrJI_ed7jc/_3C9V$.rLaV58PpMtQ>hcAGpVpUuE=A%AOX]mGMBhdpMEmh&e
%`!/?.PP,!%"Jfdq$G(Yj^BMG%A6`m<[90O[0!?L(\\a9ca*u5HYcNikC^]T/U@;VdC!bRd]cFR_:OVPg,m%IPL%T><p3#_+`Vg&_
%_-"o%q'dqY-c#52,402`/$NdehH3R`3("pVA]>'RadEJc*-;I970J"5H]eqU'EK#62shR=3+rs8jIFT`KNM<!rt/@""^TE/I8:-l
%g?sU;Zh6eB"gk+@+T`6Y=FuAE02W+DKSKF<=\9O6#%XZ2[*e0"X9)K]H9gPu82=V-L^,]\N*'IU+!Bs@?,?`1c0UKB%2R[Gf*?HZ
%cEnpEki@:XY>>:@5k4>Da)Oq'5&0fLOrq9&lj=a>gZZ&[%L>KZk(=[UCC/aWd<E`&P[fho3pAoIfnn,d<cFSj9%e@CMAr>='<3P[
%6ZfBkm&I:L%P"8O)dlDWmhnci&DW.CYUh3.7Z2.pPF$+9dTN$$F'uUMej1[=-f762QU0@YGr>NuZ[0G@#t06M4asa'=;aXnX"]u4
%D7_"He!75]g2('fMFOYo+.!]s7h(?Y/Cq%lX,*=f=u).]_@rqZF*"JZ!`HDQ[8sJl<L2W6H;p+BfO/8G;':gAJhYbsdh8nAN3*(q
%4:h-J,2.f+Frb4XCt+:!dBN4q2W_3F);\Z,Pl_q1M(/rCC`3WtBG*T\`>5oUlB_o3#Hag1ZP_DN3M`mc7&_eoA;Bi6Y]&5Db"SYq
%Aute4V+'3+fumc#,cHec'Z:>H[$K[i+Kd%CLW5NfFk@%`"](:nA%N[aJY7r-g1M"VKXIgNN8BYQ,d-h68.\;=5af=N#@85*Ea%^u
%'Jf>^jeZW>Eg/5a3_$2;h3;;oZV@.E&'K[mgYi$5d9hRKUi1T3b3uG7!j;nl+:shChnL13GU5='hLh>LZ2dOmk@E@7bM'7p&OP^S
%okNG%KuW603J.rbO@dSG#RcRA6%i6W[Z/Wf`f"F%8MJepS6<JX_2W)6a6c/a3)kmu$)*2T,[UR\nGOp3>e.!8bXol1d?[WNhH:L4
%>Z,JPMa'`,ieYXg7W_K[+Lkr&Y4t'N;kb:Z$aJ,B.[^BmLgh8jJbGNr&a/8a>9S'#(9#NF1sMA0kg0m"I#3U!)2\\u%(T(e"=O=s
%SP:>L1pI,DfP,nE")6+gJMj4"W1h-F,p]btf&#1q$HX<Q"!+c.mgNdoS6)\?/RS0*(51t?_\Se!<+TQ2#'(S]/^QWnZB0U,Pmu%*
%V%C7<&1kU$`H@RY,U6pops)]]MMVh#h<6p^6hRk72%$PlhuV'Q_h8K1**,$Di[&C/9N]G@<1=\WmAMFs"KEp3,>B\%#AuYq;Juq2
%%rPVO[O0Vkh$!Di[e9M)MO]7,@#<U?:<iY3p+k(ppFrX6_bLrg6,UgG&A83`?k/KNYM*$<Q1QTrPr;Y9[q#:;57D0$5WLd$UH38%
%TOq=29je&JR^SA,P,7b6nAMeq<O0G&_6!T,R7pQ(OVH-MT`U-U:iD*:`'`*&PQ[IH#<sg<dX"EHaqQXR_hd0.OoVhZljQ$Yg*lA:
%FdDTiZ#M^`Q6j84&'@Mc6ihF9TgAgl(iFH["B^[nR-<2`OGLoN:,DTL`Q=2DBNn3H31aFhVoD4bUWZ87]p3fY=!IHQU4_2Z]jfC;
%k#?h]fmm._^")m$[#!WLUC<l@JOVh0&a)mY6d#aP(kk3eL)H(-:akr8:OD9RA'']MnbWCa%_ClVMdhfK,`hY,%2a>?IIQ&(jFM,T
%UbsDbL;(>=^W<L*Dn=]0P/`*)h:j'Mld'('a^f!o7#3knqlG%F3.0&@fg.K8%i'e@MMegODa?-S$7e580tBH9Sm3g'!=0UMmIIkH
%q%1tPbHn4rZIE;+BPGkZGd:qWQ,4p\H6o.[:"?$%f&Q<Y)A2Jg*q`sT&`e.rA0b'/s!ur7B7M+b9AijRU%SEO)FC,jFZtfsGVE(p
%lQE^FE3]V`)Y0I`8YSE'DO8p55:0L3Sg5T`Cn4'`qMu(+UjTO`"jYdPCrKq)eQ)OK.m-TD/NtX2b8aRt0nZs*^#4],WH/-17[[c\
%q(UuGZP8BPmZ@r>60Z_eb6TY>cN1K!4$HG>\d3\/$!ok/ce"^e!a'A9;ggW=o5&-tY6N.Q3ErS7_G)DIcE`k,;SQhS_p]\IkojkY
%n]%f:jkV5kn0BoO2>d2JV#`'di$5urVg^g`Z?-+g=<9r3ctmV-Y^2i8>H0`j3=8<nTa1gJ[e=!Q"5*O"jkdESN,Y61ZEpRH'1@cj
%fd*eP4-;"Q_7FZiTP?6$G,8O5\Or?s\Bu$'[rtl&V5R7W`6FL&Y33H@.!N_S%%FY',fgceQ!K4pL"Lo=:GuT1haBBA(`dI5b!*uM
%/dI4BGVFA5\&+m!R'"BnQ"-L#_5h?A/L'")iq7R%HF[*Go!M&,OEuLZa"1@:e<riFc"Ag]">[Vr86q&Yfs\t:2!86Ab)0%%p-aqP
%9?JZ`B^KmG"Q"C\PFtB9pZ\g.;6!;Q+UNHhLY+AcI;ekjW^H,%@c:U?I2o>iKW&O6eDYgD\UL=r#=WhEZSh(@p0\ZqY2LrDroW1E
%LBn@Dj1EJChM*1Oq^*Z@j28+7(u\/9$_9Vq;EphUNTa!S)7jpX8QZ%ii:g;b`4cI>L+%=5beK&UW,[RG`S*&-.lD'SR@:J;TGE\q
%U/R<76R2_is29`-+8)(7TVO:]R&5a&4R$+"1eo:m)(S:>6-7OCPX#iYC-V=RELLO-?be;2?,O>u990>8K3H=uP-N:5`qTsXAY[n]
%Yi]ie?Arob^XbAt+c*d(_8@Xhk%rhZR5MARjD]kN,`GQX$E&#lCr@-8/P2sqOmdqA:iEmki'fcH^aAiM7[t(_7\#h,#*"8aLcBZg
%h0DHmhCLS'*\$[P7$_rTEY(PB0Jum:Dit"$]9RB-/F&Ll]p956\&0QqY<"3INj;Xd!QC]3`V?bBiTW3C9_Yk(*[DKB,7[%RG@QMq
%-sOsfM87Q6MRWCDrKi<ghg^=r+7.6!!O<jfhP&DA(PVV2PLH=_"q*k5_]3)V<c%NZlZ`+L\7$D2p:hI"n6:GQ6O=r;jOF;4*l1]A
%RQ4-4QU\F4ITp#@3D8&hLA153#KBjj!Mg_TrGbU\q-m6[Qi8dGdmm+1L6T:4g0mE8=0nja38CH@S)em+"7bE"(fe3S=.CXRc;7tR
%:@tb"l7P9D3`aMkiklpu;V5H=j>d]F&UiE[8>cpB/47OFbk`bci8;4:^7Uf[W^b<((/[Ej0%Vh@kKH:pF<l.Y23Y8\(\R8@?@9)[
%"F:uD8?C:doL(H]dn_bXQQ^2:mX@W$!k)UYU>#*%[[oNgOl^Z29MeabToe8Q<`#*c[7hrk\,TTEY^,ke5l9'^3l0m?31MrKI=`^'
%CRGW2JfhZ<J#OJMHT6&1W(9E>-&s=h]S_AHi2'2)2N)XE`a$]?:0nMSkCEuKCh1r!`9?niUkn6.;8%PRc@aL*j6t2qO*jY@j1:`p
%PA<%0N<pRi6kINd?4WY?([NH/#2<b*Xi@K7kO'E0E@^DLrb0FTP;lK4oo,ImR8;#Jds0pi0Ca0\:IuA?+BCkIC#krlL2oM*D>n+.
%miBfje03Q>/]INY?Buq41OSsUSC1qkJ4/RdVis.PF7>shRM/geE(?^l9&P@4kSb=MZKn;kgDPQP7ndchO^b)KjS5=kM"o*5En.]C
%9I?1;=aaMs/@gB^;,WrI&b)#&X/m;[7h)BWDTNda/tlqmZZSo2OL((2OXu+FEl_#D?:%94o^2.Sh8LXW.T2%iq.HEbF]bpsA`f+j
%[>dlURF!FZ)t?[kI#-<RRqo#W#P7-)Reg2X_rY0'E^sth-8%giVLp`T?V@kPm6EIr-t$so3K"nuc^_Z]5QD5D0WL`hbBd(^U&77*
%MeX_%Ak*8V5YY6T4_BTS1X-"t&f*\UEUi$Os0%?4!i!h3%@um%6FF`V9L;3:l)l"fR[\\Ij]+><EEmJE5X0X.$$?HF"uA#+$isu\
%UhZ$(,m6a<Jm/**BD;WR]u`W<$tMF\l5?m<WnGUUZ79_PAAm)/A$hbt3^]:9X*Op?VJnaHbX4L<-g;miRubX*'.a/-&l*!GJ3^MI
%0mn3BQEk_;\KK+r*r)Y4+L@Q#[\+*s\sGl!"dDHtq6_#h;3rno"k55uUtjHB66%TaP11)uH3B,$oZOo$Fen62VJ..Y?FPh,E^,LV
%f?GOMg$0X7:/_B4K7;D$hO/J[$93^cpPeR7e232eCfL);@M8s<QWk-EVmLTeBsJ"p==$m6lU8C?=i\$Uo41-GJ"ajTj6?;pq7a$5
%*p<!HW>.*p1[JJ*;ACRo$TkYU*aLgHDdaa=/Q'8PV&G""Vl!%W,!E:IOp8a+bWO*M3E088#WZFjCKkT[mW`ZC*Hmpnr,M5Xm0RIF
%/V'^(&Sl,MSk[oCoMt2l>mqb])+130c-mQ<=%POpmZlA&!%>id0*hiWWm_7+ZO&<9R\-XB"%k[-o5=3>Z;h:<5k+5k4gbjJF0obQ
%2u&'n\N*$9(j$=>qeKjL^pKc0+u<ou*f]];4KcitZ;1qTOpYYJd_O)l*`?*TJheC,$+Q6kbuTsfZZfh)Vl"`23s[aO(l[,qjY9$s
%T7LU%Bf;-hpm9XGH`[u\Y(pj6[PbSV/t5A<V8!-gZ+f":\49&>$AtToDY48ULWYB(MsGtlfXu?bo2+?T+a5dk8Ntkrg\@8FA[]WU
%a,g4a4sk+,Wgt[jj3EsWhcYq2.+*2hg\OEVPs30/FM5tU%Q<^c[<h:LOb&cP$EMJaG@s.F7$aDD*]YAEC_.YQp[/a97BR]8?3;%K
%G)gQ*,WbFO=$2JL`s<RKP)T;"]!VX^S[[e`<n7"L6Gi$-9f:K_8$^0g1-*B'C?X@Rco7&',X2BG__,MEk66cSZ]33M!_/gYNY5B8
%N$u//M_J5),8uuWXN<Q/6b,!Y@O(_YSE6b.E6C&u8TDJ^%b`?Hk<U5M(?ol4K3i$>BFjtG*KT;thL-!s[@I7bp[<5W79Cp9+F?,6
%P_'6i.rGUD6<aIl:hV@8C=3Qkc-_B`hA12T,LVpf2n\]K-\=D?L0*6rC+i>ODWC-@N6UNgg#U@oF5@tmKc7cL[J83\J9MSq5H6^N
%&AU-Vh-793Lj+5hjp$VaUs-1ee1Q%R[XGu))h\[gM+1k!Cm>DuOp^H8So%&^Nsu+nWBUC$\%R$!0rY@IZD(5EqHcQ0`3.ac.3U\0
%9DPWSkdQr5A[2\30ahClk#S4E"4^Hs\Oi9C()\$8#9CZo`'d$S#JMiWds?4bi(.cS&4,AK,Qso3gcaRhfA'0!F,;MH9ln6Rh!@3s
%d^)JLVYGg#2rfs$GE""Ep^p8p$nNg43PFoM1%HVB5us*6RaO9J^%7%D)L6ol4Gf4=dBSSXJFJ.?,mBQ%??+[$Y3\tD[LW,,!2umS
%>2?/ISZY2V'Hi[Z#j%Ca529j!Ve,?+OYUkq"kkTb-o'MFV`K^u8UXCq%D8S_Znqn&#U2CKP^MSX!u*2/CqG^THho:eo(F!"<?M3Q
%W0tY[6;:dp)ScR$Y4>sQH$$8t]f3@OU;H&n>6kDgrTP3J2!^X3"V%tBN=!-R6SqeQh(#<f"`bS++i`Y::T>56LnWJ@9r"lD@_[g1
%\jo\"jUheD8-h3_i@#pT3g\eB`Ks4#`W<6,hR*P;o&JJB)\.l6`jGf[&EOu=2Do*k:mf?:;h7ZJA)8tlVr#A@9sB4TeicQ@cGN%]
%CUG1fQe!52L1QjO2C#/9#KIdW)mieYHq#)iKr39(6F*e"l:'XK><-b>W<1ZF)#$2P>&o;(;-m.PT2P6n$\%':1Xdpgc7+bN/$$*I
%p@f<nm7m1bdnK=h[@K$@_&0\BEk5abT"I'ks7#lWs8Tq-nBT%X$gk!`l1J8lklfFPUYEIG158V$)RI;CgfUI#BV%j:Ciqpd@LGXG
%J]FO'r`ni#cs"\SLH$10<=`a/:kdOWdBL0;,U@#^SA`XOMnJ'%,3#)IbBbAbh82qm;G?#-1"0-fJEi@2E+jaY7,VN-QBp)3hPeYT
%P9`+L*lmQ@d=1gm>91Mk-r.\i?*+U!SXILZAs5RAA>A5C0k,ABb0YjC<eOW%lYhF7GtJ`o`%C2s1foN%b2h;q;+EtD(^:+dJo#M4
%H(]pUmb/X%?i+\*VCHmKjXZt-]O!iYJNFOX.,f+F8>$r_%FUXZ\WC_Mf:PZUUQ_iZM&.@t-LRech0l*+TV`b-$ik]Xbc5QM[R#8u
%5tKe"jbF.tJFrg4qV2#CQ;1jni&>lnGs06K>d"agV3t]KR[6?]ACk(V(KAG`'((;rFt9XZA.i'`!Q*MhnIB%t1_C[HITcaZ@&=`N
%IEItj6;U#XWj@H]*pb6'H<?R2"RLNbn45<U);n;pf$o6SI))`*]c1.sjf5jW>bS/^M1]<&4?7Hl%9gWBQL=2r[leG`W7,F,;RnjP
%qCbtVIC%A4qjj9a#_)eliZeu2M0LR[C52l+i%P(o'\B$qX__u;Ab8);3qh#'5C`s"]'Q>m1UpnEjdo*`N*[1P,\6N28:'laR;m:o
%@853nEl8p!@>DLJKM;_b;5Xp[."0:M"e`faX[t0PM$ebhjKitV*St@Z(W%"<_%B7a6'j!cTImWo!nQ]7]?S8]._2*d3RQk[*8_CW
%+D):#5Dr?=OYH'?<5[i"Jem0c6tK<ZP<`Gd1SDgtHZmftM$fGq0ejR!fVhE4P$f?Q?*kPHV\?s^GEtnfPu[Tk@K*BB624$j6d+p)
%%bf^iI)%Wq%`^1iZ6++M)J)RD3!]h>7;,PpL@CP]9\t#>2&!ms2qEee3>G7i!jPoo<jfSHUUbe$UcG1jAX6^%m_:/$qA]jJXMo_4
%.EPDl>O!F,mG4b:>PoZe-n'aR>R&=P]/AT^&YYbP&QX?u]AUW-V?.>Mb&BlZ4n%e!)3kkX$f#2,7@HQUAp\].^3o>&I5n?5:pnYM
%CH3\46T)[pT+?EkMka@F=qrQ!"@3*$bO]Gk2gTc<>Je.ddli(tJ=>(lH75[?E;^0QO9ct`0D51P,$3a==0`A.jaHSX+^RIW#X6GR
%NQ-Zc\l/>GGh3M_QqkTD?"I&%du"[)!D]tP91/443J&[<`N;?ZV:T6[ESp4ca\\UAr'p@AC^qM.Nc(%S0bE^8'G4)Lj5;oN[$+/S
%[%q]MDVSR5pHpu:RHtb.@9iLh*dpG6:cBmNVju,Xc$qm8MG(;Ah;\d<[bL-B^7PD?>-A@[hoI)HrlgTmB7P`$dK6_45>qZ9\&3R!
%QMIbWc^T<,rSF.L>Q(]u1'_:G,Im7,EV5AWbTljuVTsbHCJCZuMe\Sa4`4#BLl-.^JP:21=)&f#._h#c6a@"MF*mjSmO&bQ:1Rn#
%[_CViJ/%^i2uD"Y%*@fQqt$RO5"oGIdJV/#T-r4Q&Pd>0)cX;HVO#[-29EKX0D"SYS<N=5G`t)1G;o=;PO*51.=Xe/.HRa+3T[Bp
%Gn<\!,"\nXIW!OInGiu[<W>cMjn3HshK6B:@(5qap7E5j1<d3toDL:\GEXu0G;jg"C%<//q9`s<cE#[jU[QEf)s)4+2p?J)q,fJ-
%AA#OYVO2]?bB0ha8Y+aPZDSSoTFShdWe%Yt[upIDJ^S=Q!7\/7K-UT$)1r:4N8>ZA'/7@*<GR?J&EbidBUu,OU)_04e_MMt=]]lk
%\QMEAatPH*(,nRi1iilrFJr3W4BG`FO=GU0QC>W=d&0F)@nQll=3S--]7Y;W+/-8(G:g0m9d(^>p>1g#^s#]XV<jOH)\3K/&Wisk
%J,L]?&clrCG'S]$&==S0=nU=`U8UronelMF\hcc#FZb,KQf%DjrJX\F1d46*7)',9WDtQ,2T%)N\Y>kQ>iX&\"7O.N.5g8*]?isM
%<V7I<![?,'ku&8QIjPkF$d.YdH_Lb`*88p9=%ADV9JYDJ^Xe?!)F,Kk&'Po5'/EM1?Xpc<'@AAY=6I+L?!lmqJgVS\g+M;A#t<)[
%",-<;q./.%*ht0XPO#iJB91VJgs[s;Tq85L/PGkWkj=/NT!2)u[1+5A!'Lo"IOMhlB30A:dIM=&r+N9^aEJ_s:gO06Wg`-NS,i;!
%3VhtkEs5MKqHX3ee9O_0ZY4[LpOM*n*I+(RFE]*h@8anFVj_$j)l`+U[>pr,0h^(<S"YL;NE;CiaMb%n8ufiA[K/34AQZ8+#fCL)
%MWoRl-M>cKOd<omrFbs_pFT-OAQq",eNHL<A6s=mqJmfLq;j[D0/;\;e2;rq3hkZA.ed=UB$7#'Z86]k:AO$>3U0do-Bui<@EH^K
%IODHn<HNKsb%+Egf?uEkI___D(Dg"i1$WY@WrU[!)^qD]UW1W"Rd.eIG891A9]\nH$:1K:/DkIY'dHNoJ0pWjDC8Jr1;;kn=nBD&
%.A'QL5KYY(X8N6#b%D9E0M\'o9^=k=-S@2r_h`$S22<"1.frWfLT+h"hl1gg1?'Q`*N9&C!4?"b@#oUWkBBb@qA,/TgBL0_CfF=1
%.05Ur99rt+=Bh&Y8S'+;cTJEA$d1)#QC%D$D&-`tM<AI?*RuIAn$[qEK5sOeEVYO`:Q*?GZ%;m]dsCh54d,nd,IM?73_Nn"A%Tin
%22e:3Qdb6e5a=10U;#NZ^W,SX:FqRB\L0+_LuHS;0+`i5]`![L>LhuApZ:Mam'*+LmbGS^&Lr7hm#8PQXN(1:PPV6RFFc(V!K]^b
%;1hBEADrA_I8$taEAcLC*S2?Sa>07.$<Kbu6170fP'i[3=(Y>Io'05o"qXFB;3r8jOVosfl`eDmrtnCYG:_Z"pF(bP4,2^o,P'X]
%#e1oS\k^_S(V9qT71O7liPlaW[BH3AW%1_k&7)9_]siN'iIuPuV<Rah6=n[qa7@7\>C(\T>OF*kKp#;mH,6+@^>O8G^0IfO+c:[*
%dGt*3p<6tuHbb^jr"g=$Hjb1P;FE>n_b4-?LX<=/hTIkie(I8>+9'_;J!Ff^9l&b#5=''(R%)^Pn9d*!IZ%NKII.jUEA.\ql)bX8
%$MdZ2NN22^c5\FW!8kb^fes42FS!cs>jV7piVbM0Z(:2n3J\`so4$c'C?M$ub_lHu_iXtMW/fA*3LWM?I<kI7=\tK6YDN^C6LHib
%C1J8SD0FP,HuXeG>"PC>F<><Q+aW!D[5>;jN0Og\eeVl)a)X.,s+3?!0rm\P2Aml>(RugT<K%opk(P=;2?m;Q;h[rVDU%pO!O_EQ
%!8mrJj#0RJKHG.;Z3Bsp?+>iT!75*$2RWH\YY/bsEcf-0h@^:Q7FEW+)7[]##CV2@DKH0G&=ci:4gc9=F;g$Qr,e3a[n)#^"4:F=
%1W+Hqi5T<j1*baegK*A#`GF6Aq5&9=1\L+(E="Zn(5Gb67-g.\!'H>A$\oC@RF$<idao+<L8`$Kctk`TK,q;CNpCMag4,<QdfcM.
%<ud%;k+M:8VG"lt])^"k<(q1FJ\Vg!m*R$-W_JS6^HKCS9_\eJQe8@lpMD\hj.(kpA)j)0<Wn2Qgk,&[l_i#>!L#)8d41_&^]2>\
%m*jq(RQHK_&D\7.1Z(WH`$(["?33eO>\=UDC7P%^EX_BJr>B>5%e9ZW)o#ke6HP$SNSOrLK?Kq9pc&1sdB';&a#%=9ViMVa(9hQD
%ZD!"`@)dX-`KdJ;Zc:#:c&*(gWl,3KNj!itLO\p,,e[Tn0"K',\E#Er#.Mp6g<5T&K.=\-KHdfjbS_]C\o2Fdpf4)F,$N,CbACVK
%o8M^gfFOSRr0<b`k42_Dg+F18%kD9_E#s>mo9_fKaJ!tL`i/KM!2=F5W/?ThpRkN8@_Wd4(;Xdq^J@Oo83VS3=5!l8$qBVXSj)^"
%/aLn1frK4EYNI=]28[)X<85qIJQ^t*`r06YfREY*7TLcU2i;#a7WnFSng$sCR#'(dVS*2%\N5_c$i.,dU]fJLJ>k@OIX'oPT;o/u
%$,4(Lmr]<W5?XrZ.UU_((BgQB@Qm\:T\[^=Won_iOm1_bpcrTMLKY+GJe<$uYMK2,h?^#idN0/,oC0@/:m-H,Udrdpnmf&en`TNS
%L[.-sYQ=#k;,>mJ$1Q+)?VHr3Z9L:-fQp=Z6\W*SF1kC9UQJAuXgQFA%.?<p8=hPg<&8.8-J_8hR>ERRRN91Ta"\QsCc(g5fc<;*
%\AiYenUXhp7/41eIsBr;I`i-:/HJB-a[5uoO(dn%I"#4:=OgDjD]O[T`5E5ES()ED!9`3B9XfJ#].IoEpY7I9qtMbPl[=Y:d#:SD
%[[.#_AGgF0lI#D)<fctL!KX^lf54lTPW.j]hlkT*GQ2pcl^tok\(fM!^]39WBc4Y]kHDXKs"?Tar?!-<s7!uL^A[TfTAG(np%R?Z
%*P_X#oj;'Tqnr:Qs6Iuq]`7QCJ,f+ibG'ot$blK&:]L%t?i8l4!1cO`o`~>
%AI9_PrivateDataEnd
